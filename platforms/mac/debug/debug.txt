#
# Degbug.txt - Configuration file for the debug module
#
# Debug.txt to enable and configure the debug module
# Documentation: http://whorl/~eddy/doc/modules/debug/documentation/api/index.html
# Wiki page: https://wiki.oslo.opera.com/developerwiki/Modules/debug
#
# Øyvind Østlund
#

###################################
#
# Configuration
#

# Send the debugging output to a specific file.
output=debug.log

# Force opera to truncate the output file on startup.
clearfile=on

# Enable debugging.
debugging=off 

# Send debug info to console.
console=off

# Trace OP_NEW_DBG() macros.
tracing=off

# Collect timing information.
timing=off

# Send the output to the system console, if any is available.
systemdebug=off


###################################
#
# Keys
#

# Uncomment one or more key to start logging:

#Dictionary
#Autoupdate



##################################
#
# Documentation
#

# Comments start with #, they are ignored
# Whitespace is ignored in the beginning of lines.
#
# Keywords
# ========
#
# When using the Debug functions such as Debug::Dbg()
# a keywords needs to be given. These keywords are
# single words entered on its own on a single line.
# They can be placed anywhere in the file.
#
# Tracing
# =======
#
# Tracing looks like this:
# => Function
#   => AnotherFunction
#   <= AnotherFunction
# <= Function
#
# To turn on, write
#
# tracing=on
#
# Debugging
# =========
#
# The most important switch to turn on and off is debugging.
# It tells the debug class if it shall print anything when
# the Dbg()-function is called.
#
# It is enabled by writing:
#
# debugging=on
#
# Output
# ======
#
# The debug output can be printed to two different places.
#
# 1. To the debug console. In visual studio this is the Debug tab and
#    in Linux it is to stdout.
#
#    Enable by writing:
#
#    systemdebug=on
#
# 2. Write output to a file. Example:
#
#    output=/home/user/debugoutput.txt
#
#    This will store all debug output in /home/user/debugoutput.txt
#
#    If you wish to clear the file each time Opera is being debugged you can write:
#
#    clearfile=on
#
# Timing
# ======
#
# If you wish all functions which use the debug class to be timed, write:
#
# timing=on
#
# For this to work you need to enable tracing.
#
# Note: All switches which are turned on by writing "on" will treat other strings than "on" as off.

#
# Documentation
#
#######################
