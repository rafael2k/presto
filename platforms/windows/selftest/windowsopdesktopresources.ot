/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "windows.desktopresources";
require init;
require USE_COMMON_RESOURCES;
require MSWIN;

include "platforms/windows/pi/WindowsOpDesktopResources.h";

language C++;

global
{
	OpDesktopResources* osi;
}

test("create")
{
	OP_STATUS status = OpDesktopResources::Create(&osi);
	verify(OpStatus::IsSuccess(status) && osi != NULL);
}

test("Getting folders") require success "create";
{
	OpString path;
	OP_STATUS status;

	status = osi->GetDesktopFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());

	status = osi->GetDocumentsFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());

	status = osi->GetDownloadsFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());

	status = osi->GetPicturesFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());

	status = osi->GetVideosFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());

	status = osi->GetMusicFolder(path);
	verify(OpStatus::IsSuccess(status) && path.HasContent());
}
test("IsSameVolume") require success "create";
{
	BOOL same = osi->IsSameVolume(UNI_L("C:\\windows"), UNI_L("C:\\"));
	verify(same == TRUE);

	same = osi->IsSameVolume(UNI_L("C:\\windows"), UNI_L("C:\\windows\\system32"));
	verify(same == TRUE);

	same = osi->IsSameVolume(UNI_L("C:\\windows"), UNI_L("D:\\windows\\system32"));
	verify(same == FALSE);
}
exit
{
	OP_DELETE(osi);
}
