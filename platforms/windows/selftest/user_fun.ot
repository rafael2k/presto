/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2012 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "windows.user_fun";

require MSWIN;

include "platforms/windows/user_fun.h";


table MenuItemNames(const uni_char*, const uni_char*, int)
{
	{NULL, UNI_L(""), -1},
	{UNI_L(""), UNI_L(""), -1},
	{UNI_L("&"), UNI_L(""), 0},
	{UNI_L("&&"), UNI_L("&"), -1},
	{UNI_L("&&&"), UNI_L("&"), 1},
	{UNI_L("a"), UNI_L("a"), -1},
	{UNI_L("&foo"), UNI_L("foo"), 0},
	{UNI_L("&&foo"), UNI_L("&foo"), -1},
	{UNI_L("foo&bar"), UNI_L("foobar"), 3},
	{UNI_L("foo&&bar"), UNI_L("foo&bar"), -1},
	{UNI_L("foo&"), UNI_L("foo"), 3},
	{UNI_L("foo&&"), UNI_L("foo&"), -1},
	{UNI_L("foo&&&"), UNI_L("foo&"), 4}
}

test("ParseMenuItemName()")
{
	iterate (name, exp_parsed_name, exp_amp_pos) from MenuItemNames
	{
		OpString parsed_name;
		int amp_pos = -12;
		verify_success(ParseMenuItemName(name, parsed_name, amp_pos));
		verify_string(parsed_name, exp_parsed_name);
		verify(amp_pos == exp_amp_pos);
	}
}
