/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "systemtray";
require init;
require UNIX;

include "platforms/unix/base/x11/x11_icon.h";
include "modules/pi/OpBitmap.h";

language C++;

test("Icon creation")
{
	OP_STATUS status;

	// A 4x4 bit ico-format image with a transparent one-pixel wide border and solid red (2x2 bit) in center 
	UINT8 small_ico_4x4[142] =
	{
		0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x04, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x78, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 
		0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 
		0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00
	};

	X11Icon icon;

	// Create icon
	status = icon.SetBuffer(small_ico_4x4, sizeof(small_ico_4x4));
	verify(status == OpStatus::OK);

	// Buffer
	verify(icon.GetBuffer());

	// Verify width and height
	verify(icon.GetBuffer()[0]==4);
	verify(icon.GetBuffer()[1]==4);
	verify(icon.GetBuffer()[0] == icon.GetWidth());
	verify(icon.GetBuffer()[1] == icon.GetHeight());

	// Verify transparency
	verify(icon.GetBuffer()[2]==0);
	verify(icon.GetBuffer()[3]==0);
	verify(icon.GetBuffer()[4]==0);
	verify(icon.GetBuffer()[5]==0);

	verify(icon.GetBuffer()[6]==0);
	verify(icon.GetBuffer()[9]==0);
	verify(icon.GetBuffer()[10]==0);
	verify(icon.GetBuffer()[13]==0);
	
	verify(icon.GetBuffer()[14]==0);
	verify(icon.GetBuffer()[15]==0);
	verify(icon.GetBuffer()[16]==0);
	verify(icon.GetBuffer()[17]==0);

	// Verify solid color
	UINT32 color = 0xFFFF0000;
	verify(icon.GetBuffer()[7]==color);
	verify(icon.GetBuffer()[8]==color);
	verify(icon.GetBuffer()[11]==color);
	verify(icon.GetBuffer()[12]==color);

	// Verify bitmap creation
	verify(icon.GetBitmap() != 0);

	// Set new background to semi transparent blue
	color = 0x800000FF;
	status = icon.SetBackground(color);
	verify(status == OpStatus::OK);

	UINT32 line[4];
	// First line
	icon.GetBitmap()->GetLineData(line, 0);
	verify(line[0]==color);
	verify(line[1]==color);
	verify(line[2]==color);
	verify(line[3]==color);
	// Last line
	icon.GetBitmap()->GetLineData(line, 3);
	verify(line[0]==color);
	verify(line[1]==color);
	verify(line[2]==color);
	verify(line[3]==color);
	// Second and third line with solid red center
	icon.GetBitmap()->GetLineData(line, 1);
	verify(line[0]==color);
	verify(line[1]==0xFFFF0000);
	verify(line[2]==0xFFFF0000);
	verify(line[3]==color);
	icon.GetBitmap()->GetLineData(line, 2);
	verify(line[0]==color);
	verify(line[1]==0xFFFF0000);
	verify(line[2]==0xFFFF0000);
	verify(line[3]==color);
}
