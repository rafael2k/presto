/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
/* Espen Sand */

group "unix.x11nativedialog";
require init;
require UNIX;

include "platforms/unix/base/x11/x11_nativedialog.h";

global
{
	class TwoButtonLabelLayout : public X11NativeLayout
	{
	public:
		void Resize(UINT32 width, UINT32 height)
		{
			UINT label_width, label_height;
			label->GetPreferredSize(label_width,label_height);
			UINT left_width, left_height;
			left_button->GetPreferredSize(left_width,left_height);
			UINT right_width, right_height;
			right_button->GetPreferredSize(right_width,right_height);
			
			UINT button_width  = MAX(left_width,right_width);
			UINT button_height = MAX(left_height,right_height);
			
			left_button->SetPosition(button_margin, height-normal_margin-button_height);
			left_button->SetSize(button_width, button_height);
			
			right_button->SetPosition(width-button_margin-button_width, height-normal_margin-button_height);
			right_button->SetSize(button_width, button_height);
			
			label->SetPosition(normal_margin, normal_margin);
			label->SetSize(width-normal_margin*2, height-button_height-normal_margin*3);
		}

		void GetMinimumSize(UINT32& width, UINT32& height)
		{
			UINT label_width, label_height;
			label->GetPreferredSize(label_width,label_height);
			UINT left_width, left_height;
			left_button->GetPreferredSize(left_width,left_height);
			UINT right_width, right_height;
			right_button->GetPreferredSize(right_width,right_height);
			
			UINT button_width  = MAX(left_width,right_width);
			UINT button_height = MAX(left_height,right_height);
			
			width  = 2 * button_width + 3 * button_margin;
			height = label_height + button_height + 3 * normal_margin;
		}

	public:
		INT32 normal_margin;
		INT32 button_margin;
		X11NativeWindow* label;
		X11NativeWindow* left_button;
		X11NativeWindow* right_button;
	};
}




test("X11 native dialog that cancels")
{
	OpAutoPtr<X11NativeDialog> dialog(OP_NEW(X11NativeDialog, (0)));
	OpAutoPtr<X11NativeLabel> label(OP_NEW(X11NativeLabel, (dialog.get())));
	OpAutoPtr<X11NativeButton> yes(OP_NEW(X11NativeButton, (dialog.get())));
	OpAutoPtr<X11NativeButton> no(OP_NEW(X11NativeButton, (dialog.get())));
	OpAutoPtr<TwoButtonLabelLayout> layout(OP_NEW(TwoButtonLabelLayout,()));
	
	verify(dialog.get() && label.get() && yes.get() && no.get() &&layout.get());

	dialog->SetTitle("title");
	dialog->SetSize(500, 100);	
	dialog->SetLayout(layout.release()); // Takes ownership

	label->SetText("message");
	label->Show();

	yes->SetX11NativeButtonListener(dialog.get());
	yes->SetId(X11NativeDialog::REP_YES);
	yes->SetText("ok");
	yes->Show();

	no->SetX11NativeButtonListener(dialog.get());
	no->SetId(X11NativeDialog::REP_NO);
	no->SetText("cancel");
	no->Show();

	((TwoButtonLabelLayout*)dialog->GetLayout())->normal_margin = 10;
	((TwoButtonLabelLayout*)dialog->GetLayout())->button_margin = 50;
	((TwoButtonLabelLayout*)dialog->GetLayout())->label = label.get();
	((TwoButtonLabelLayout*)dialog->GetLayout())->left_button = yes.get();
	((TwoButtonLabelLayout*)dialog->GetLayout())->right_button = no.get();

	X11NativeApplication::Self()->SetId(X11NativeDialog::REP_NO);
	X11NativeApplication::Self()->SetX11NativeButtonListener(dialog.get());
	X11NativeApplication::Self()->SetFocus(no.get());

	X11NativeDialog::DialogResult res = dialog->Exec();
	verify(res == X11NativeDialog::REP_NO);
}


test("X11 native dialog that accepts")
{
	OpAutoPtr<X11NativeDialog> dialog(OP_NEW(X11NativeDialog, (0)));
	OpAutoPtr<X11NativeLabel> label(OP_NEW(X11NativeLabel, (dialog.get())));
	OpAutoPtr<X11NativeButton> yes(OP_NEW(X11NativeButton, (dialog.get())));
	OpAutoPtr<X11NativeButton> no(OP_NEW(X11NativeButton, (dialog.get())));
	OpAutoPtr<TwoButtonLabelLayout> layout(OP_NEW(TwoButtonLabelLayout,()));
	
	verify(dialog.get() && label.get() && yes.get() && no.get() &&layout.get());

	dialog->SetTitle("title");
	dialog->SetSize(500, 100);	
	dialog->SetLayout(layout.release()); // Takes ownership

	label->SetText("message");
	label->Show();

	yes->SetX11NativeButtonListener(dialog.get());
	yes->SetId(X11NativeDialog::REP_YES);
	yes->SetText("ok");
	yes->Show();

	no->SetX11NativeButtonListener(dialog.get());
	no->SetId(X11NativeDialog::REP_NO);
	no->SetText("cancel");
	no->Show();

	((TwoButtonLabelLayout*)dialog->GetLayout())->normal_margin = 10;
	((TwoButtonLabelLayout*)dialog->GetLayout())->button_margin = 50;
	((TwoButtonLabelLayout*)dialog->GetLayout())->label = label.get();
	((TwoButtonLabelLayout*)dialog->GetLayout())->left_button = yes.get();
	((TwoButtonLabelLayout*)dialog->GetLayout())->right_button = no.get();

	X11NativeApplication::Self()->SetId(X11NativeDialog::REP_YES);
	X11NativeApplication::Self()->SetX11NativeButtonListener(dialog.get());
	X11NativeApplication::Self()->SetFocus(no.get());

	X11NativeDialog::DialogResult res = dialog->Exec();
	verify(res == X11NativeDialog::REP_YES);
}

