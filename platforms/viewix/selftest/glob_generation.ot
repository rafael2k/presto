/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "viewix.glob_generation";

require VIEWIX_SUPPORT;

include "platforms/viewix/FileHandlerManager.h";
include "platforms/viewix/src/FileHandlerManagerUtilities.h";

language C++;

table filename_samples (const uni_char *, OP_STATUS, UINT32)
{
	{ UNI_L("filename.tar"),     OpStatus::OK,  1},
	{ UNI_L("filename.tar.gz"),  OpStatus::OK,  2},
	{ UNI_L("filename"),         OpStatus::OK,  0},
	{ UNI_L("filename.ps"),      OpStatus::OK,  1},
	{ UNI_L("filename.zip"),     OpStatus::OK,  1},
	{ UNI_L("filename.h"),       OpStatus::OK,  1},
	{ UNI_L("filename.bz2"),     OpStatus::OK,  1},
	{ UNI_L("filename.h"),       OpStatus::OK,  1},
	{ UNI_L("filename.cpp"),     OpStatus::OK,  1},
	{ UNI_L("filename.gz"),      OpStatus::OK,  1},
	{ UNI_L("filename.tar.bz2"), OpStatus::OK,  2},
	{ UNI_L("file.tar.bz2.zip"), OpStatus::OK,  3},
	{ UNI_L("file name has spaces.pdf"), OpStatus::OK,  1},
	{ UNI_L(""),                 OpStatus::ERR, 0},
}

setup
{
	FileHandlerManager::DeleteManager();
}

exit
{
	FileHandlerManager::DeleteManager();
}

test("Glob Generation")
{
    OP_STATUS status;	

    iterate(filename, retval, count) from filename_samples
    {
		OpString file;
		file.Set(filename);

		OpAutoVector<OpString> globs;
		status = FileHandlerManagerUtilities::MakeGlobs(file, globs);
		
		verify(status == retval);

		verify(globs.GetCount() == count);
    }
}
