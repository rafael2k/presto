/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2011 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "utilix.unixfile";

require init;
require UTILIX;

include "modules/util/opfile/opfile.h";
include "platforms/utilix/unixfile.h";

language C++;

test("rename existing file")
file uni src_filename "renametest.txt";
file uni target_filename "renametest.txt.renamed";
{
	OpFile src_file, target_file;

	verify_success(src_file.Construct(src_filename));
	verify_success(src_file.Open(OPFILE_WRITE));
	verify_success(src_file.WriteBinByte('A'));
	verify_success(src_file.Close());
	verify_success(target_file.Construct(target_filename));
	BOOL exists;
	verify_success(target_file.Exists(exists));
	verify(!exists);

	verify(UnixFile::rename(src_filename, target_filename) == 0);
	verify_success(target_file.Exists(exists));
	verify(exists);
}
finally
{
	BOOL exists_cleanup;
	if (OpStatus::IsSuccess(target_file.Exists(exists_cleanup) && exists_cleanup))
		target_file.Delete(FALSE);
	else if (OpStatus::IsSuccess(src_file.Exists(exists_cleanup) && exists_cleanup))
		// Failed between creating src_file and renaming it !
		src_file.Delete(FALSE);
}


test("rename non-existing file to non-existing file")
file uni src_filename "renametest.txt";
file uni target_filename "renametest.txt.renamed";
{
	OpFile src_file, target_file;

	verify_success(src_file.Construct(src_filename));
	BOOL exists;
	verify_success(src_file.Exists(exists));
	verify(!exists);
	verify_success(target_file.Construct(target_filename));
	verify_success(target_file.Exists(exists));
	verify(!exists);

	verify(UnixFile::rename(src_filename, target_filename) == -1);
	// Check that *didn't* touch the target in the course of failing:
	verify_success(target_file.Exists(exists));
	verify(!exists);
}


test("rename non-existing file to existing file")
file uni src_filename "renametest.txt";
file uni target_filename "renametest.txt.renamed";
{
	OpFile src_file, target_file;

	verify_success(src_file.Construct(src_filename));
	BOOL exists;
	verify_success(src_file.Exists(exists));
	verify(!exists);
	verify_success(target_file.Construct(target_filename));
	verify_success(target_file.Open(OPFILE_WRITE));
	verify_success(target_file.WriteBinByte('A'));
	verify_success(target_file.Close());

	verify(UnixFile::rename(src_filename, target_filename) == -1);
	verify_success(target_file.Exists(exists));
	verify(exists);
	OpFileLength length;
	verify_success(target_file.GetFileLength(length));
	verify(length == 1);
}
finally
{
	BOOL exists_cleanup;
	if (OpStatus::IsSuccess(target_file.Exists(exists_cleanup) && exists_cleanup))
		target_file.Delete(FALSE);
}
