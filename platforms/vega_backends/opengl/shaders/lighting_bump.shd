uniform sampler2D src;

uniform vec2 pixel_size; /* (1.0/texture_width, 1.0/texture_height) */

varying vec2 vTexCoord0;

void main()
{
  // This is not exactly according to spec, but...
  vec2 tc = vTexCoord0 - pixel_size;
  vec2 co = pixel_size * vec2(1.0, 0.0); // Column offset
  vec2 ro = pixel_size * vec2(-2.0, 1.0); // Row offset

  // Top row
  float c00 = texture2D(src, tc).a; tc += co;
  float c01 = texture2D(src, tc).a; tc += co;
  float c02 = texture2D(src, tc).a; tc += ro;

  // Middle row
  float c10 = texture2D(src, tc).a; tc += co;
  tc += co;
  float c12 = texture2D(src, tc).a; tc += ro;

  // Bottom row
  float c20 = texture2D(src, tc).a; tc += co;
  float c21 = texture2D(src, tc).a; tc += co;
  float c22 = texture2D(src, tc).a;

  // Store as {nx, ny, nz, <unused>}
  gl_FragColor = vec4(((c02 + 2.0 * c12 + c22) - (c00 + 2.0 * c10 + c20)) / 8.0 + 0.5,
		      ((c20 + 2.0 * c21 + c22) - (c00 + 2.0 * c01 + c02)) / 8.0 + 0.5,
		      texture2D(src, vTexCoord0).a,
		      0.0);
}
