uniform sampler2D src;
uniform sampler2D stencilSrc;
uniform sampler2D maskSrc;

uniform bool stencilComponentBased;
uniform bool straightAlpha;

varying vec4 vert_color;
varying vec2 vTexCoord0;
varying vec2 vTexCoord2;
varying vec2 vTexCoord3;

const vec3 lumfactors = vec3(0.2125, 0.7154, 0.0721);

void main() {
  vec4 stencil = texture2D(stencilSrc, vTexCoord2);
  if (stencilComponentBased)
  {
    float lum = dot(stencil.rgb, lumfactors);
    stencil = vec4(lum);
  }

  float maskAlpha = texture2D(maskSrc, vTexCoord3).a;
  // Same as "maskColor = straightAlpha ? 1.0 : maskAlpha", without conditional
  float maskColor = max(float(straightAlpha), maskAlpha);
  vec4 mask = vec4(maskColor, maskColor, maskColor, maskAlpha);

  gl_FragColor = texture2D_wrap(src, vTexCoord0) * stencil * mask * vert_color;
}
