/* -*- Mode: c++; tab-width: 4; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 *
 * @author Arjan van Leeuwen (arjanl)
 */

group "m2.engine";

include "adjunct/m2/src/engine/engine.h";

global
{
	class DummyListener : public MessageListener
	{
	public:
		DummyListener() : m_msg_body_changed(0), m_msg_changed(0) {}
		virtual void OnMessageBodyChanged(message_gid_t message_id) { m_msg_body_changed = message_id; }
		virtual void OnMessageChanged(message_gid_t message_id) { m_msg_changed = message_id; }

		message_gid_t m_msg_body_changed;
		message_gid_t m_msg_changed;
	};
};

test("Notifies about changed message when message made available (DSK-273867)")
{
	DummyListener listener;
	MessageEngine engine;
	engine.AddMessageListener(&listener);
	const message_gid_t available_msg = 12;

	engine.OnMessageMadeAvailable(available_msg, TRUE);

	verify(listener.m_msg_changed == available_msg);
	verify(listener.m_msg_body_changed == available_msg);
}

test("Notifies about changed messages when all messages available (DSK-273867)")
{
	DummyListener listener;
	MessageEngine engine;
	engine.AddMessageListener(&listener);

	engine.OnAllMessagesAvailable();

	verify(listener.m_msg_changed == UINT_MAX);
	verify(listener.m_msg_body_changed == UINT_MAX);
}
