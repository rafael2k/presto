
API_CON_UI_GLUE					adamm

	Needed for Message Console

API_DATASTREAM_FILE_ADD_STREAM_CONTENT	manuelah

	This activates the DataStream_GenericFile::AddContentL function

API_IMG_METADATA					manuelah

	This makes it possible 	to get exif data from the image module.

API_PI_OPWINDOW_DESKTOP_FUNCTIONS	manuelah

	This set of functions allow OpWindow to perform desktop management functions.

API_PI_OPWINDOW_TOPMOST_WINDOW		manuelah

	Decides if OpWindow should have IsActiveTopmostWindow or not.

API_UTIL_LOCAL_FILE_CRYPTO			manuelah

	Exports OPC_Crypt and OPC_DeCrypt from opcrypt_xp2.cpp.

API_UTIL_STRTRIMCHARS				arjanl

	Function used in quick and modules

API_PRF_MAIL_APPLICATION	peter

	Enables preference settings for external e-mail client
	(ExternalMailClient and ExtAppParamSpaceSubst).

API_PRF_SCRIPT_WINDOW 				peter

	Enables preferences for allowing scripts to resize, move, raise and
	lower windows, and changing the status bar.

API_PRF_HOTCLICKMENU				peter

	Enables preference for hot click menu (AutomaticSelectMenu).


API_PRF_FILE_HOTLIST 				peter

	Enables preference that names the bookmarks file (HotListFile).

API_PRF_FILE_HOTLIST_EXTRA			peter

	Enables preferences that name the additional hotlist files
	(ContactListFile, NoteListFile, MusicListFile, GadgetListFile).


API_PRF_FILE_TOOLBARS				peter

	Enables preferences that names toolbar, menu and dialog configuration
	files (ToolbarConfig, MenuConfig, DialogConfig).

API_PRF_FILE_FASTFORWARD			peter

	Enables preferences that names the fast forward file (FastForwardFile).


API_PRF_COOKIE_DISABLED				peter

	Enable preference that names the last cookie setting when cookies were
	enable, to use in UI so that the cookie setting can have a global
	checkbox "Enable Cookies" and still remember the previous user-entered
	setting when toggling it (DisabledCookieState).

API_PRF_DESKTOP_UI                              arjanl

	Enables preferences for the desktop UI (PrefsCollectionUI).

API_UTIL_REMOVE_CHARS				mariusab

	Used in quick, m2 desktop_util and elsewhere.

API_UTIL_MAKE_DATE3					mariusab

	Used in AskCookieDialog::OnInit().


API_URL_WRITE_DOCUMENT_SIGNAL_DATA			mariusab

	Used in ChatDesktopWindow::Flush().

API_UTIL_STRCATSPRINTFUNI				arjanl

	Used in AskCookieDialog::OnInit()

API_UTIL_METRIC_STRING_TO_INT				arjanl

	Used in PrintOptionsDialog::SavePrintOptions()

API_UTIL_LISTENERS					arjanl

	Used all over quick

API_UTIL_SPLIT_FILENAME_INTO_COMPONENTS			arjanl

	Used in NewPreferencesDialog::OnInputAction()

API_FORMS_VALIDATEEMAIL                         bratell

        Exposes a method FormManager::IsValidEmailAddress that can
        be used to check if an email address is correct.

API_WEBFEEDS_ADD_REMOVE_EXTERNAL_READERS		espen

	Allows to add/remove an external feeds reader in the runtime

API_WIC_ANCHOR_SPECIAL				rfz

	Exposes the OnAnchorSpecial method in the DocumentListener API

	Import if: QUICK

API_WIC_DOWNLOAD_CALLBACK			rfz

	Exposes Download Callback API in DocumentListener interface

	Import if: QUICK


API_DISPLAY_CLICKINFO                           espen

	The class MouseListenerClickInfo is available and contains
	information about the most recently clicked location.

API_PI_OPSYSTEMINFO_GETSYSTEMIP         mstensho
    OpSystemInfo::GetSystemIp() is available.

	Import if: QUICK

API_PI_OPSYSTEMINFO_GETPROTHANDLER      mstensho
    Makes OpSystemInfo::GetProtocolHandler() available.

	Import if: QUICK

API_PI_OPSYSTEMINFO_FILEUTILS           mstensho
    Makes the following methods in OpSystemInfo available:
    GetFileHandler(), GetIsExecutable(), GetIllegalFilenameCharacters(),
    RemoveIllegalPathCharacters(), GetNewlineString()

	Import if: QUICK

API_PI_OPSYSTEMINFO_SHIFTSTATE          mstensho
    Makes OpSystemInfo::GetShiftKeyState() available.

	Import if: QUICK

API_PI_OPSYSTEMINFO_GETPHYSMEM          mstensho
    Makes OpSystemInfo::GetPhysicalMemorySizeMB() available.

	Import if: QUICK

API_UTIL_GENERATE_GUID					julienp
    OpSystemInfo::GenerateGuid is needed by Application::GenerateClientID.

	Import if: QUICK

API_PF_XML								arjanl
	Enables support for preferences files stored in XML format.

	Import if: QUICK

API_PF_LNG_LIGHT						arjanl
	Includes support for the LangAccessorLight class.

	Import if: QUICK

API_PRF_DOWNLOAD_FOLDER					julienp
	Enables preference for the download folder

	Import if: QUICK

API_PRF_BUTTON_FOLDER					julienp
	Enables preference for the skin directory

	Import if: QUICK

API_WIC_DOWNLOAD_RESCUE_FILE			rfz
	Let windowcommander handle saves and writes of download rescue file

	Import if: QUICK

API_URL_ENABLE_INSERT_TLS				mariusab
	Make InsertTLSConnection available

	Import if: QUICK

API_DOCHAND_USE_NEW_CERTINST_API		mariusab
	Temporary api to enable doc code supporting
	non-blocking cert install.

	Import if: QUICK

API_FORMS_TEMPORARY_ENABLE_ASYNC_KEYGEN	mariusab
	Temporary api import to enable async keygen
	code.

	Import if: QUICK

API_UTIL_CREATE_UNIQUE_FILENAME		markus

	Exports the functions:

	OP_STATUS CreateUniqueFilename(OpString& filename);
	OP_STATUS CreateUniqueFilename(OpString& filename, OpStringC& path_component, OpStringC& file_component, OpStringC& extension_component, BOOL found_extension);

	located in filefun.h

	Import if : QUICK

API_DOM_PREFS_ACCESS		anders

	Enables support for reading and writing Opera's preferences via the
	DOM. For security reasons, usage of this DOM API is limited to the
	opera:config URL and user JavaScript.

	Import if : FEATURE_OPERACONFIG_URL

API_ENC_MIB		peter

	Enables support for creating CharConverter objects based on the
	IANA charset MIB number (see RFC 3808) instead of using the regular
	textual IANA charset tag. WBXML (wireless binary XML) uses this
	to decrease the amount of bandwidth used to encode the encoding
	information.

	Import if : FEATURE_WBXML

API_PRF_ENUMERATE		anders

	Enables support for enumerating all available preferences, retrieving
	a list of all the settings and their current values.

	Used by opera:config.

	Import if : FEATURE_OPERACONFIG_URL

API_PF_INI_ESCAPED			peter

	Enables support for an extended INI file format which stores strings
	using C-style escapes. This allows storing multi-line strings in an
	easy-to-read format.

	Import if : QUICK

API_PRF_STRING_API				peter

	Enables support for a string based API to read and write preferences.
	This API should not be used from inside the core code, but may be
	used to expose preferences to customer code in a tidy manner.

	Also used by preference download and the opera:config DOM bindings.

	Import if : FEATURE_OPERACONFIG_URL

API_ENC_UNCONVERTIBLE		peter

	Enable support for retrieving characters that could not be represented
	when converting to a legacy encoding. Import this if you need to be
	able to tell the user which characters could not be converted, for
	instance when composing an e-mail message. If you roll your own
	converters (FEATURE_TABLEMANAGER == NO), you need to make sure your
	converters can support this if it is enabled.

	Import if : QUICK

API_WIC_VIS_RECT_CHANGE	rfz

	Exposes the OnVisibleRectChanged method in the DocumentListener API
	Replaces the API_WIC_UPDATE_POPUP_PROGRESS api

	Import if : QUICK

API_WIC_ASK_PLUGIN_DOWNLOAD	rfz

	Exposes the OnAskPluginDownload method in the DocumentListener API

	Import if : QUICK

API_LIBSSL_DECRYPT_WITH_SECURITY_PASSWD		adamm

	This activates the ability for non-libssl functionality to maintain security password 
	sessions and to encrypt/decrypt data using a specified password or the security password
	
	Import if : QUICK

API_COOKIE_CREATE_DOMAIN					arjanl

	Activate the URL_API::CreateCookieDomain functions

	Import if : QUICK

API_URL_EXTERNAL_COOKIE_ITEMS				julienp

	Activate the URL_API::RemoveSameCookiesFromQueue and URL_API::SetCookie functions
	
	Import if : QUICK

API_COOKIES_NEED_BUFFERED_FULLDOMAIN			psmaas

	Enables the CookieDomain::GetFullDomain(char *domstring, unsigned int maxlen,
	BOOL exclude_local_domain) API function.

	Import if : QUICK

API_COOKIES_ARRAY_LIST					manuelah

	Enables support for listing cookies of one domain.
	
	Import if : QUICK

API_PF_EXTERNAL_ACCESSOR				pettern

	Enables support for using externally written file parsers (accessors).
	Inherit the PrefsAccessor class (or one of its subclasses) and pass a
	pointer to an instantiated object to the PrefsFile constructor.

	Import if : QUICK

API_DOCHAND_HISTORY_MANIPULATION                adamm

        Enables the functions

          Window::RemoveElementFromHistory
          Window::InsertElementIntoHistory
          Window::RemoveAllElementsFromHistory

	Import if : QUICK

API_PRF_OVERRIDDEN_HOSTS				arjanl

	Enables the PrefsManager::GetOverriddenHostsL() API, allowing the
	caller to extract a list of hosts that have host overrides defined.

	Import if : QUICK

API_SEARCH_ENGINE_WORDHIGHLIGHTER				psmaas

	Enables class WordHighligter to highlight excerpts from search results.

	Import if : QUICK

API_UTIL_VPS_FOLDER						adamm

	Exports the OPFILE_VPS_FOLDER, which is used for visited pages
	index files.

	Import if : QUICK

API_NAMED_WIDGET					psmaas

	Adds the possibility to name widgets and to search for
	them by name.

	Import if : QUICK

API_NOTIFY_ON_INVOKE_ACTION			psmaas

	Adds the possibility of a widget to notify the OpWidgetListener
	that an action is about to be invoked.

	Import if : QUICK

API_ADD_MULTIPLE_ITEMS				psmaas

	Adds the possibility to add multiple items in listboxes at once.

	Import if : QUICK

API_CACHE_VISIBLE_LINK_TRIGGER		julienp

	Enables the Set/GetVisLink functonality in the Cache_Manager
	that lets a product decide whether links will be marked visited,
	or not, when URL::SetLastVisited is called. 

	Import if: EMBROWSER_SUPPORT

API_PF_DEL_ALL_SECS			adamm

	Enable API for deleting all preference sections from a loaded ini file
	(i.e clearing it).

	Import if: SUPPORT_SPEED_DIAL

API_URL_PERSISTENT_CACHE_ALL_HTTP_HEADERS yngve

	Enables the persistent storage in the cache index file of HTTP 
	Headers for URLs loaded with the URL::KStoreAllHeaders flag enabled.
	Needed for Flash version 9.0.64.0
	
	Import if : QUICK

API_PRF_OPERA_ACCOUNT			adame

	Enables preference collection for preferences related to Opera
	Account for Alien/Link.

API_ESUTILS_ASYNC_PROPERTIES		julienp

    Enables interface for asynchronously accessing properties

	Import if: QUICK

API_WIDGET_IS_HIDDEN_ATTRIB             adamm

	Set for widget that should be included in hierarchy but not used in 
	the OnLayout for where the widget is placed.

API_UTIL_ESCAPE_FILENAME				julienp
	Uses the new escaping API in UTIL	

API_ENC_UTF32_CODECS		johanh

	Enables support for UTF-32 codecs for platforms where they are needed.

API_UPLOAD_ENCAP_DEFAULT_INIT			yngve

	This enables the short Upload_EncapsulatedElement::InitL call

API_ABOUT_SEARCH_SUGGESTIONS   		espen

	Enables support for search suggestions in the domain error page

API_ABOUT_TEMPLATES			arjanl

	Enabled support for templates in about, needed for webfeeds

	Import if: WEBFEEDS_DISPLAY_SUPPORT

API_PI_OPSYSTEMINFO_SUBSCRIBE_FEED_TO_NATIVE_READER		arjanl

	Support for subscribing to native reader, needed for webfeeds / M2

	Import if: WEBFEEDS_DISPLAY_SUPPORT, M2_SUPPORT

API_DU_REMOTE_URL_HANDLER	rfz

	Support for testing remote urls against parameters to ExecuteApplication and similar calls 

	Import if: QUICK

API_QUICK_STARTUP_SEQUENCE		rfz
	Use the message based Startup Sequence

	Import if: QUICK

API_URL_NAME_WITH_PASSWORD_STATUS		yngve

	Enables the URL::Name, URL::UniName and a few other 
	const string URL Name functions using the old PASSWORD_* enums 
	as parameter.

API_PRF_LICENSE							peter

	Enable preference for recording information about whether we have
	shown the license (AcceptLicense).

	Import if: QUICK

API_QUICK_DEFAULT_BROWSER_DIALOG		rfz
	Use the Default Browser Dialog in the Startup Sequence

	Import if: _MACINTOSH_
	Import if: MSWIN

API_WIC_TRUST_INFO_RESOLVER	rfz
	Used by security information dialog 

	Import if: QUICK

API_WIC_SECURITY_INFORMATION_PARSER	rfz
	Used by security information dialog

	Import if: QUICK

API_WIC_MIDCLICK						rfz
	Turns on the OnMidClick support

	Import if: QUICK

API_LIBGOGI_NO_OPFONTMANAGER					timj
	Disable the font manager in libgogi. It is either in
	Vega or in the platform.


API_PI_UDP_SOCKET					mstensho
    Support for OpDatagramSocket (UDP).

	Import if: FEATURE_WEBSERVER


API_WIDGETS_SLIDER_CUSTOM_TICK_VALUES			emil

	OpSlider can have tick-values added to it which will be used instead
	of the automatic ones.
	Some can be larger and have a snap threshold.

	Import if: QUICK_NEW_OPERA_MENU

	
API_FORMATS_URI_ESCAPE_SUPPORT	manuelah
	Activates the URI escaping/unescaping support (also called percent-escaping)

	Import if: QUICK
	
API_WIC_GADGET_MOUSE_HOVER_EVENTS bkazmierczak
	Activates additional mouse onhover events for gadgets
	
	Import if: WIDGET_CONTROL_BUTTONS_SUPPORT

API_UTIL_LOCALE_FOLDERS         markuso

    Makes it possible to add a list of locale folders to the
    OpFolderManager instance using the method
    OpFolderManager::AddLocaleFolder(). The methods
    OpFolderManager::GetLocaleFoldersCount() and
    OpFolderManager::GetLocaleFolder() can be used to iterate over
    the list of locale folder names.

    Defines    : FOLDER_MANAGER_LOCALE_FOLDER_SUPPORT
    Depends on : FEATURE_DISK

API_WIC_DRAGOBJECT				espen
	
	Enables drag-and-drop interface for the OpDragObject defined in PI

	Import if: QUICK
	
API_WIC_SAVE_DOCUMENT_AS_TEXT 	              shuais

	Importing this api enables the enum OpWindowCommander::SAVE_AS_TEXT
        for method WindowCommander::SaveDocument() to save a document as
        text.
	
	Import if: QUICK

API_ES_JSON_LITE                              jhoff

	API for parsing and serializing JSON strings.

	Import if : QUICK

API_GADGETS_OPEN_GADGET						wdzierzanowski

	API for creating gadget windows and loading gadgets in
	said windows.

API_WIC_ADDITIONAL_WINDOW_CREATION_ARGS		wdzierzanowski

    Enables an additional CreateUiWindow function which takes
    additional parameters.

API_PI_PERSCRIPT_GENERIC_FONT			shuais

	Enable setting generic font for each script from platform code.

API_WIDGETS_ADDRESS_SERVER_HIGHLIGHTING 	shuais

	Enable server highlighting in address bar.

API_IMG_BITMAP_TO_BASE64PNG			alexr

	API which enables GetOpBitmapAsBase64PNG for writing an OpBitmap to a TempBuffer* as base64 PNG

API_PI_SOCKET_LISTEN				manuelah

	Enables Accept(), Bind(), Listen() etc in the socket layer. This
	enables Opera to act as a server.

API_PI_OPSYSTEMINFO_GETPID              mstensho
    Makes OpSystemInfo::GetCurrentProcessId() available.
	
    Import if: QUICK

API_PF_RENAME_SECTION				petter

	Enables support for renaming a section to a new name.

API_PF_RESET									pettern

	Enables support for resetting the state of the PrefsFile to initial
	values.

API_WIC_SETUP_INSTALL_CALLBACK		pettern

	Exposes the setup install API for OpDocumentListener.  This can be used by
	the platform to perform installation of custom configuration items such
	as skins, toolbars, etc. 

API_UTIL_CUSTOM_FOLDERS	adamm

	Exports the OPFILE_x_CUSTOM_FOLDER defines. Used to define the locations of
	custom resources used for both official and user created customised builds.
	e.g. T-Online, Composer builds etc.

API_UTIL_UI_INI_FOLDER	adamm

	Exports the OPFILE_UI_INI_FOLDER. Location of UI ini files seperate from
	all other default ini files

API_PF_READ_ALL_SECS					pettern

	OpSetupManager::MergeSetupIntoExisting() uses
	PrefsFile::ReadAllSectionsL().

API_PRF_FILE_KEYBOARD_CONFIG		pettern

	Enables preferences that names the keyboard configuration file.

API_PRF_FILE_MOUSE_CONFIG			pettern

	Enables preferences that names the mouse configuration file.
    
API_BITMAP_WINDOW                       bkazmierczak

    Introduces BitmapOpWindow class, which can be used to paint in the 
	bitmap buffer, without platform window.

API_BUTTON_GROUP						manuelah

	Enables button groups for buttons (e.g. Speed Dial config controller).

API_WIC_SET_PERMISSION					ckulakowski

	Enables the SetUserConsent and GetUserConsent functions that
	are used to manage permissions (e.g. for DOM geolocation API).
