group "sync.controller.syncwidgetstatemodifier";

require WEBSERVER_SUPPORT;
require SUPPORT_DATA_SYNC;

include "adjunct/quick/sync/controller/SyncWidgetStateModifier.h";
include "modules/locale/locale-enum.h";
include "modules/locale/oplanguagemanager.h";
include "modules/inputmanager/inputaction.h";


test("create SyncEnabledWidgetState") leakcheck;
{
	SyncEnabledWidgetState enabled_state;
	verify(enabled_state.GetStateType() == SyncWidgetState::SyncEnabled);
	verify(enabled_state.GetAction() != NULL);
	verify(const_cast<OpInputAction*>(enabled_state.GetAction())->GetAction() == OpInputAction::ACTION_SHOW_HIDDEN_POPUP_MENU);
	verify_string("Sync Popup Menu", const_cast<OpInputAction*>(enabled_state.GetAction())->GetActionDataString());
	verify_string(enabled_state.GetForegroundImage(), "Link Enabled");

	OpString tooltip_text;
	g_languageManager->GetString(Str::S_SYNC_STATE_ENABLED, tooltip_text);
	verify_string(enabled_state.GetTooltipText(), tooltip_text);
}


test("create SyncDisabledWidgetState") leakcheck;
{
	SyncDisabledWidgetState disabled_state;
	verify(disabled_state.GetStateType() == SyncWidgetState::SyncDisabled);
	verify(disabled_state.GetAction() != NULL);
	verify(const_cast<OpInputAction*>(disabled_state.GetAction())->GetAction() == OpInputAction::ACTION_SHOW_HIDDEN_POPUP_MENU);
	verify_string("Sync Setup Popup Menu", const_cast<OpInputAction*>(disabled_state.GetAction())->GetActionDataString());
	verify_string(disabled_state.GetForegroundImage(), "Link Disabled");

	OpString tooltip_text;
	g_languageManager->GetString(Str::S_SYNC_STATE_DISABLED, tooltip_text);
	verify_string(disabled_state.GetTooltipText(), tooltip_text);
}


test("create SyncBusyWidgetState") leakcheck;
{
	SyncBusyWidgetState busy_state;
	verify(busy_state.GetStateType() == SyncWidgetState::SyncBusy);
	verify(busy_state.GetAction() != NULL);
	verify(const_cast<OpInputAction*>(busy_state.GetAction())->GetAction() == OpInputAction::ACTION_SHOW_HIDDEN_POPUP_MENU);
	verify_string(busy_state.GetForegroundImage(), "Link Busy");

	OpString tooltip_text;
	g_languageManager->GetString(Str::S_SYNC_STATE_BUSY, tooltip_text);
	verify_string(busy_state.GetTooltipText(), tooltip_text);
}


test("create SyncErrorWidgetState") leakcheck;
{
	SyncErrorWidgetState error_state;
	verify(error_state.GetStateType() == SyncWidgetState::SyncError);
	verify(error_state.GetAction() != NULL);
	verify(const_cast<OpInputAction*>(error_state.GetAction())->GetAction() == OpInputAction::ACTION_SHOW_HIDDEN_POPUP_MENU);
	verify_string(error_state.GetForegroundImage(), "Link Failed");

	OpString tooltip_text;
	g_languageManager->GetString(Str::S_SYNC_STATE_FAILED, tooltip_text);
	verify_string(error_state.GetTooltipText(), tooltip_text);
}


test("create SyncWidgetStateModifier") leakcheck;
{
	SyncWidgetStateModifier modifier;
	modifier.Init();
	verify(static_cast<SyncWidgetState*>(modifier.GetCurrentWidgetState())->GetStateType() == SyncWidgetState::SyncDisabled);
}


test("SyncWidgetStateModifier, set to enabled") leakcheck;
{
	SyncWidgetStateModifier modifier;
	modifier.Init();
	modifier.SetWidgetStateToEnabled();
	verify(static_cast<SyncWidgetState*>(modifier.GetCurrentWidgetState())->GetStateType() == SyncWidgetState::SyncEnabled);
}


test("SyncWidgetStateModifier, set to disabled") leakcheck;
{
	SyncWidgetStateModifier modifier;
	modifier.Init();
	modifier.SetWidgetStateToDisabled();
	verify(static_cast<SyncWidgetState*>(modifier.GetCurrentWidgetState())->GetStateType() == SyncWidgetState::SyncDisabled);
}


test("SyncWidgetStateModifier, set to busy") leakcheck;
{
	SyncWidgetStateModifier modifier;
	modifier.Init();
	modifier.SetWidgetStateToBusy();
	verify(static_cast<SyncWidgetState*>(modifier.GetCurrentWidgetState())->GetStateType() == SyncWidgetState::SyncBusy);
}


test("SyncWidgetStateModifier, set to busy") leakcheck;
{
	SyncWidgetStateModifier modifier;
	modifier.Init();
	modifier.SetWidgetStateToError();
	verify(static_cast<SyncWidgetState*>(modifier.GetCurrentWidgetState())->GetStateType() == SyncWidgetState::SyncError);
}
