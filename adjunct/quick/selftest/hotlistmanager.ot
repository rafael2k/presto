group "quick.hotlistmanager";

include "adjunct/quick/hotlist/HotlistManager.h";
include "adjunct/quick/hotlist/Hotlist.h";
include "adjunct/quick/managers/DesktopGadgetManager.h";
include "adjunct/quick/managers/OperaAccountManager.h";
include "adjunct/quick_toolkit/widgets/OpTreeView/OpTreeView.h";
include "adjunct/quick/webserver/controller/WebServerServiceController.h";

global
{
	class ST_HotlistManager : public HotlistManager
	{
	public:

		ST_HotlistManager(DesktopGadgetManager* gadget_manager, OperaAccountManager	* account_manager, Hotlist * hotlist)	
			: m_gadget_manager(gadget_manager)
			, m_account_manager(account_manager)
			, m_hotlist(hotlist)
		{}

	protected:
		virtual DesktopGadgetManager *	GetDesktopGadgetManager()	{ return m_gadget_manager; }
		virtual OperaAccountManager *	GetOperaAccountManager()	{ return m_account_manager; }
		virtual Hotlist *				GetHotlist()				{ return m_hotlist; }
		virtual BOOL 					AskEnterOnlineMode(BOOL test_offline_mode_first) { return TRUE; }

	private:
		DesktopGadgetManager	* m_gadget_manager;
		OperaAccountManager		* m_account_manager;
		Hotlist					* m_hotlist;		
	
	};

#ifdef WEBSERVER_SUPPORT
	class ST_WebServerServiceController : public WebServerServiceController
	{
	public:
		using WebServerServiceController::GetUniteItemsTreeView;
	};
#endif // WEBSERVER_SUPPORT

}

test("HotlistManager::NewUniteService")
	file uni    test_app    "test.ua";
	require WEBSERVER_SUPPORT;
	disabled; // having trouble with that one (missing patches, ..). disabling for now (2009-12-15)
{
	DesktopGadgetManager gadget_manager;
	OperaAccountManager account_manager;
	Hotlist hotlist;

	ST_HotlistManager hotlist_manager(&gadget_manager, &account_manager, &hotlist);

	ST_WebServerServiceController controller;
	OpTreeView * tree_view = controller.GetUniteItemsTreeView();
	verify(tree_view);

	OpString empty_str;
	OpStringC test_app_path(test_app);
	INT32 item_id;


	hotlist_manager.NewUniteService(test_app_path, // address
		empty_str,	// orig_url
		&item_id,	// got_id
		FALSE,		// clean_uninstall
		FALSE,		// launch_after_install
		NULL,		// force_widget_name
		NULL,		// force_service_name
		NULL,		// shared_path
		tree_view);	// treeView

	HotlistModelItem* item = hotlist_manager.GetItemByID(item_id);
	verify(item);
	verify(tree_view->GetSelectedItem());
	verify(tree_view->GetSelectedItem()->GetID() == item->GetID());
}
