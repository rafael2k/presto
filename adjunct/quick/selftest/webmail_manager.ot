/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 1995-2002 Opera Software AS.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Alexander Remen (alexr)
*/

group "mailto.webmail";

include "modules/prefsfile/prefsfile.h";
include "modules/util/opfile/opfile.h";
include "adjunct/quick/managers/WebmailManager.h";

table Providers(unsigned, const char*, const uni_char*, const uni_char*)
{
	{ 1, "Gmail", UNI_L("https://mail.google.com/mail/?extsrc=mailto&url=%s"), UNI_L("http://mail.google.com/favicon.ico") },
	{ 5, "Yahoo", UNI_L("https://bla.yahoo.com/mail/?extsrc=mailto&url=%s"), UNI_L("http://bla.yahoo.com/favicon.ico") },
	{ 17, "Operamail.com", UNI_L("data:text/html;charset=utf-8,%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3Cmeta%20charset%3D%22utf-8%22%3E%3Ctitle%3ECompose%3C%2Ftitle%3E%3Cscript%3Efunction%20escapeInvalidHH(s)%7Breturn%20s.replace(%2F%25(%3F!%5B0-9A-F%5D%7B2%7D)%2Fgi%2Cfunction()%7Breturn%20%22%2525%22%3B%7D)%3B%7Dfunction%20decode(s)%7Btry%7Breturn%20decodeURIComponent(s).replace(%2F%5Cr%5Cn%7C%5Cr%2Fg%2C%22%5Cn%22)%3B%7Dcatch(e)%7Breturn%20%22Opera%20percent-decode%20error%22%3B%7D%7Dfunction%20encode(s)%7Btry%7Breturn%20encodeURIComponent(s.replace(%2F%5Cn%2Fg%2C%22%5Cr%5Cn%22))%3B%7Dcatch(e)%7Breturn%20%22Opera%2520percent-encode%2520error%22%3B%7D%7Dvar%20mailtoURI%3DescapeInvalidHH(decodeURIComponent(%22%s%22))%3Bvar%20dataset%3D%22to%3D%22%2BmailtoURI.substr(7).replace(%2F%5C%3F%2F%2C%22%26%22)%3Bvar%20to%20%3D%20%22%22%3Bvar%20subject%3D%22%22%3Bvar%20body%3D%22%22%3Bvar%20cc%3D%22%22%3Bvar%20bcc%3D%22%22%3Bdataset.replace(%2F(%5B%5E%3D%26%5D%2B)%3D(%5B%5E%26%5D*)%2Fg%2Cfunction(match%2C%20hname%2C%20hvalue)%7Bhname%3Ddecode(hname).toLowerCase()%3Bif(hname%3D%3D%22to%22)%7Bif(hvalue!%3D%22%22)%7Bif(to!%3D%22%22)%7Bto%2B%3D%22%252C%2520%22%3B%7Dto%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22cc%22)%7Bif(hvalue!%3D%22%22)%7Bif(cc!%3D%22%22)%7Bcc%2B%3D%22%252C%2520%22%3B%7Dcc%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22bcc%22)%7Bif(hvalue!%3D%22%22)%7Bif(bcc!%3D%22%22)%7Bbcc%2B%3D%22%252C%2520%22%3B%7Dbcc%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22subject%22)%7Bsubject%3Dhvalue%3B%7Delse%20if(hname%3D%3D%22body%22)%7Bif(!(hvalue%3D%3D%22%22%26%26body%3D%3D%22%22))%7Bif(body!%3D%22%22)%7Bbody%2B%3D%22%250D%250A%22%3B%7Dbody%2B%3Dhvalue%3B%7D%7D%7D)%3Bto%3Dencode(decode(to))%3Bsubject%3Dencode(decode(subject))%3Bbody%3Dencode(decode(body))%3Bcc%3Dencode(decode(cc))%3Bbcc%3Dencode(decode(bcc))%3Bvar%20uri%3D%22http%3A%2F%2Fmymail.operamail.com%2Fscripts%2Fmail%2FOutblaze.mail%3Fcompose%3D1%26did%3D1%26a%3D1%26to%3D%22%3Buri%2B%3Dto%3Buri%2B%3D%22%26subject%3D%22%3Buri%2B%3Dsubject%3Buri%2B%3D%22%26body%3D%22%3Buri%2B%3Dbody%3Buri%2B%3D%22%26cc%3D%22%3Buri%2B%3Dcc%3Buri%2B%3D%22%26bcc%3D%22%3Buri%2B%3Dbcc%3Blocation.href%3Duri%3B%3C%2Fscript%3E%3C%2Fhead%3E%3Cbody%3E%3Cp%3EThis%20page%20requires%20Javascript%3C%2Fp%3E%3C%2Fbody%3E%3C%2Fhtml%3E"), UNI_L("http://www.operamail.com/favicon.ico")},
	{ 8, "Opera Web Mail", UNI_L("http://mymail.operamail.com/scripts/mail/Outblaze.mail?compose=1&did=1&a=1&to=%t&subject=%j&body=%m&cc=%c"), UNI_L("http://www.opera.com/favicon.ico") }
}

global
{
	PrefsFile* prefsfile;
	OpFile file;

	class NonSingletonWebmailManager : public WebmailManager
	{
	public:
		OP_STATUS Init(PrefsFile* prefsfile) { return WebmailManager::Init(prefsfile); }
	};
};

setup
{
	file.Construct(UNI_L("webmailproviders.ini"), OPFILE_TEMP_FOLDER);
	prefsfile = OP_NEW(PrefsFile, (PREFS_INI));
	if (prefsfile)
	{
		TRAPD(err, prefsfile->ConstructL();
				   prefsfile->SetFileL(&file));

		iterate (id, name, url, icon) from Providers
		{
			TRAP(err, prefsfile->WriteIntL(name, "ID", id);
					  prefsfile->WriteStringL(name, "URL", url);
					  prefsfile->WriteStringL(name, "ICON", icon);
				);
		}

		TRAP(err, prefsfile->CommitL());
	}
};

test("get webmail provider details")
{
	NonSingletonWebmailManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile)));

	unsigned index = 0;
	iterate (id, name, url, favicon) from Providers
	{
		verify(manager.GetIdByIndex(index) == id);

		OpString str;
		verify(OpStatus::IsSuccess(manager.GetName(id, str)));
		verify(str.Compare(name) == 0);
		verify(OpStatus::IsSuccess(manager.GetFaviconURL(id,str)));
		verify(str.Compare(favicon)==0);

		index++;
	}

	verify(manager.GetCount() == index);
};

test("get url for mailto using a webmail provider")
{
	NonSingletonWebmailManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile)));

	URL mailto_url = g_url_api->GetURL("mailto:mailtest@opera.com?subject=allo");
	URL target_url;
	OpString target_url_string;

	verify(OpStatus::IsSuccess(manager.GetTargetURL(1, mailto_url, target_url)));
	verify(OpStatus::IsSuccess(target_url.GetAttribute(URL::KUniName_Escaped, target_url_string)));

	verify(target_url_string.Compare(UNI_L("https://mail.google.com/mail/?extsrc=mailto&url=mailto%3Amailtest%40opera.com%3Fsubject%3Dallo")) == 0);
};


test("get webmailto url for really long data: provider URL (DSK-244226)")
{
	NonSingletonWebmailManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile)));

	URL mailto_url = g_url_api->GetURL("mailto:mailtest@opera.com?subject=allo");
	URL target_url;
	OpString target_url_string;

	verify(OpStatus::IsSuccess(manager.GetTargetURL(17, mailto_url, target_url)));
	verify(OpStatus::IsSuccess(target_url.GetAttribute(URL::KUniName_Escaped, target_url_string)));

	verify(target_url_string.Compare(UNI_L("data:text/html;charset=utf-8,%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3Cmeta%20charset%3D%22utf-8%22%3E%3Ctitle%3ECompose%3C%2Ftitle%3E%3Cscript%3Efunction%20escapeInvalidHH(s)%7Breturn%20s.replace(%2F%25(%3F!%5B0-9A-F%5D%7B2%7D)%2Fgi%2Cfunction()%7Breturn%20%22%2525%22%3B%7D)%3B%7Dfunction%20decode(s)%7Btry%7Breturn%20decodeURIComponent(s).replace(%2F%5Cr%5Cn%7C%5Cr%2Fg%2C%22%5Cn%22)%3B%7Dcatch(e)%7Breturn%20%22Opera%20percent-decode%20error%22%3B%7D%7Dfunction%20encode(s)%7Btry%7Breturn%20encodeURIComponent(s.replace(%2F%5Cn%2Fg%2C%22%5Cr%5Cn%22))%3B%7Dcatch(e)%7Breturn%20%22Opera%2520percent-encode%2520error%22%3B%7D%7Dvar%20mailtoURI%3DescapeInvalidHH(decodeURIComponent(%22mailto%3Amailtest%40opera.com%3Fsubject%3Dallo%22))%3Bvar%20dataset%3D%22to%3D%22%2BmailtoURI.substr(7).replace(%2F%5C%3F%2F%2C%22%26%22)%3Bvar%20to%20%3D%20%22%22%3Bvar%20subject%3D%22%22%3Bvar%20body%3D%22%22%3Bvar%20cc%3D%22%22%3Bvar%20bcc%3D%22%22%3Bdataset.replace(%2F(%5B%5E%3D%26%5D%2B)%3D(%5B%5E%26%5D*)%2Fg%2Cfunction(match%2C%20hname%2C%20hvalue)%7Bhname%3Ddecode(hname).toLowerCase()%3Bif(hname%3D%3D%22to%22)%7Bif(hvalue!%3D%22%22)%7Bif(to!%3D%22%22)%7Bto%2B%3D%22%252C%2520%22%3B%7Dto%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22cc%22)%7Bif(hvalue!%3D%22%22)%7Bif(cc!%3D%22%22)%7Bcc%2B%3D%22%252C%2520%22%3B%7Dcc%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22bcc%22)%7Bif(hvalue!%3D%22%22)%7Bif(bcc!%3D%22%22)%7Bbcc%2B%3D%22%252C%2520%22%3B%7Dbcc%2B%3Dhvalue%3B%7D%7Delse%20if(hname%3D%3D%22subject%22)%7Bsubject%3Dhvalue%3B%7Delse%20if(hname%3D%3D%22body%22)%7Bif(!(hvalue%3D%3D%22%22%26%26body%3D%3D%22%22))%7Bif(body!%3D%22%22)%7Bbody%2B%3D%22%250D%250A%22%3B%7Dbody%2B%3Dhvalue%3B%7D%7D%7D)%3Bto%3Dencode(decode(to))%3Bsubject%3Dencode(decode(subject))%3Bbody%3Dencode(decode(body))%3Bcc%3Dencode(decode(cc))%3Bbcc%3Dencode(decode(bcc))%3Bvar%20uri%3D%22http%3A%2F%2Fmymail.operamail.com%2Fscripts%2Fmail%2FOutblaze.mail%3Fcompose%3D1%26did%3D1%26a%3D1%26to%3D%22%3Buri%2B%3Dto%3Buri%2B%3D%22%26subject%3D%22%3Buri%2B%3Dsubject%3Buri%2B%3D%22%26body%3D%22%3Buri%2B%3Dbody%3Buri%2B%3D%22%26cc%3D%22%3Buri%2B%3Dcc%3Buri%2B%3D%22%26bcc%3D%22%3Buri%2B%3Dbcc%3Blocation.href%3Duri%3B%3C%2Fscript%3E%3C%2Fhead%3E%3Cbody%3E%3Cp%3EThis%20page%20requires%20Javascript%3C%2Fp%3E%3C%2Fbody%3E%3C%2Fhtml%3E")) == 0);
};

test("get webmailto url for webmail service with multiple parameters")
{
	NonSingletonWebmailManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile)));

	URL mailto_url = g_url_api->GetURL("mailto:mailtest@opera.com?subject=allo");
	URL target_url;
	OpString target_url_string;

	verify(OpStatus::IsSuccess(manager.GetTargetURL(8, mailto_url, target_url)));
	verify(OpStatus::IsSuccess(target_url.GetAttribute(URL::KUniName_Escaped, target_url_string)));

	verify(target_url_string.Compare(UNI_L("http://mymail.operamail.com/scripts/mail/Outblaze.mail?compose=1&did=1&a=1&to=mailtest%40opera.com&subject=allo&body=&cc=")) == 0);
};

exit
{
	OP_DELETE(prefsfile);
	file.Delete();
};
