/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "quick_bookmarks.bookmarkmanager";
require init;
require CORE_BOOKMARKS_SUPPORT;

//include "adjunct/quick/models/BookmarkModel.h";
//include "adjunct/quick/models/Bookmark.h";
//include "adjunct/quick/models/BookmarkFolder.h";
//include "adjunct/quick/models/DesktopBookmark.h";
//include "adjunct/quick/hotlist/hotlistparser.h";
include "adjunct/quick/Application.h";
include "adjunct/quick/managers/DesktopBookmarkManager.h";

language C++;


// // test("Init")
// // {
// // 	g_desktop_bookmark_manager->BookmarkInit();
// // }


// test("DropItem")
// {
	
// // 	BOOL DropItem(INT32 id, 
// // 				  INT32 onto, 
// // 				  DropType drop_type, 
// // 				  InsertType insert_type, 
// // 				  BOOL execute, 
// // 				  INT32* first_id, 
// // 				  BOOL force_delete);// {}
// }


// test("DropItem with ItemData")
// {
// // 	BOOL DropItem(const ItemData& item_data, 
// // 				  OpTypedObject::Type type, 
// // 				  INT32 onto, 
// // 				  InsertType insert_type, 
// // 				  BOOL execute, 
// // 				  OpTypedObject::Type drag_object_type, 
// // 				  INT32* first_id = 0) { OP_ASSERT(FALSE); return FALSE; }
// }
	

// test("EditItem")
// {
// 	//INT32 id = 0;
// 	//verify(g_desktop_bookmark_manager->EditItem(id, g_application->GetActiveDesktopWindow()));
// }


// test("NewBookmark")
// {
// 	verify(g_desktop_bookmark_manager->NewBookmark(-1, g_application->GetActiveDesktopWindow()));
// }

// test("GetItemValue")
// {
// 	//BOOL GetItemValue(INT32 id, ItemData& data/*, INT32& flag_changed */ )
// }

// test("GetItemValue from item ")
// {
// 	// BOOL GetItemValue(OpTreeModelItem* item, ItemData& data/*, INT32& flag_changed*/ );
// }

// test("SetItemValue")
// {
// 	//BOOL SetItemValue(INT32 id, const ItemData& data, BOOL validate, UINT32 flag_changed )
// }
	

// test("SetItemValue on item ")
// {
// 	//BOOL SetItemValue(OpTreeModelItem *item, const ItemData& data, BOOL validate, UINT32 flag_changed );
// }


// test("GetItemByID")
// {
// 	// DesktopBookmark* GetItemByID(INT32 id) { return  g_hotlist_manager->GetBookmarksModel()->GetItemByID(id); }
// }

// test("NewBookmarkFolder with name")
// {
// 	INT32 id = 0;
// 	verify(g_desktop_bookmark_manager->NewBookmarkFolder(UNI_L("Folder"), -1, &id));

// }

// test("NewBookmarkFolder")
// {
// 	// verify(g_desktop_bookmark_manager->NewBookmarkFolder(-1, ,DesktopWindow* parent, OpTreeView* treeView ) { OP_ASSERT(FALSE); return FALSE; }
// }

// test("OpenOrderedUrls")
// {
// 	//BOOL OpenOrderedUrls( const OpINT32Vector& index_list, BOOL3 new_window, BOOL3 new_page, BOOL3 in_background, DesktopWindow* target_window = 0, INT32 position = -1, BOOL ignore_modifier_keys = FALSE) { OP_ASSERT(FALSE); return FALSE; }

// }


// test("GetOpenUrls")
// {
// 	//BOOL GetOpenUrls( OpINT32Vector& index_list, const OpINT32Vector& id_list) { OP_ASSERT(FALSE); return FALSE;}
// }
