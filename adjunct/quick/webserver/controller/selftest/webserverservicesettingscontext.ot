/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2009 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Manuela Hutter (manuelah)
 */

group "webserver.controller.webserverservicesettingscontext";

require WEBSERVER_SUPPORT;

include "adjunct/quick/webserver/controller/WebServerServiceSettingsContext.h";


test("create WebServerServiceSettingsContext") leakcheck;
{
	WebServerServiceSettingsContext context;

	verify(context.GetFriendlyName().IsEmpty());
	verify(context.GetServiceNameInURL().IsEmpty());
	// todo: check if service image is initialized correctly
	verify(context.GetSharedFolderPath().IsEmpty());
	verify(context.GetLocalDownloadPath().IsEmpty());
	verify(context.GetServiceIdentifier().IsEmpty());
}


test("WebServerServiceSettingsContext, set friendly name") leakcheck;
{
	WebServerServiceSettingsContext context;

	OpString friendly_name;
	friendly_name.Set("friendly name");
	context.SetFriendlyName(friendly_name);

	verify(context.GetFriendlyName().Compare(friendly_name) == 0);
}


test("WebServerServiceSettingsContext, set service url name") leakcheck;
{
	WebServerServiceSettingsContext context;

	OpString service_url_name;
	service_url_name.Set("service URL name");
	context.SetServiceNameInURL(service_url_name);

	verify(context.GetServiceNameInURL().Compare(service_url_name) == 0);
}


test("WebServerServiceSettingsContext, set shared folder path") leakcheck;
{
	WebServerServiceSettingsContext context;

	OpString shared_folder;
	shared_folder.Set("shared folder");
	context.SetSharedFolderPath(shared_folder);

	verify(context.GetSharedFolderPath().Compare(shared_folder) == 0);
}


test("WebServerServiceSettingsContext, set download path") leakcheck;
{
	WebServerServiceSettingsContext context;

	OpString download_path;
	download_path.Set("download path");
	context.SetLocalDownloadPath(download_path);

	verify(context.GetLocalDownloadPath().Compare(download_path) == 0);
}


test("WebServerServiceSettingsContext, set service identifier") leakcheck;
{
	WebServerServiceSettingsContext context;

	OpString service_id;
	service_id.Set("service ID");
	context.SetServiceIdentifier(service_id);

	verify(context.GetServiceIdentifier().Compare(service_id) == 0);
}
