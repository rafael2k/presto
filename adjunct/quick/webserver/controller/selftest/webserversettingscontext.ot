/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2009 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Manuela Hutter (manuelah)
 */

group "webserver.controller.webserversettingscontext";

require WEBSERVER_SUPPORT;

include "adjunct/quick/webserver/controller/WebServerSettingsContext.h";
include "modules/locale/locale-enum.h";
include "modules/locale/oplanguagemanager.h";


test("create WebServerSettingsContext") leakcheck;
{
	WebServerSettingsContext context;

	verify(context.GetFeatureType() == FeatureTypeWebserver);
	verify(context.GetFeatureStringID() == Str::D_WEBSERVER_NAME);
	verify(context.GetFeatureLongStringID() == Str::D_WEBSERVER_NAME_LONG);
	verify(context.IsFeatureEnabled() == FALSE);

	verify(context.GetDeviceName().IsEmpty()); 
	verify(context.GetDeviceNameSuggestions()->GetCount() == 0);
}


test("WebServerSettingsContext, set device name") leakcheck;
{
	 WebServerSettingsContext context;
	 OpStringC device_name(UNI_L("somedevicename"));

	 context.SetDeviceName(device_name);
	 verify(context.GetDeviceName().Compare(device_name) == 0);
}


test("WebServerSettingsContext, add device name suggestion") leakcheck;
{
	WebServerSettingsContext context;
 	OpStringC name(UNI_L("somedevicenamesuggestion"));
	OpString *device_name_suggestion = OP_NEW(OpString, ());

	device_name_suggestion->Set(name);

	context.AddDeviceNameSuggestion(device_name_suggestion);
	verify(context.GetDeviceNameSuggestions()->GetCount() == 1);
	verify(context.GetDeviceNameSuggestions()->Get(0)->Compare(name) == 0);
}
