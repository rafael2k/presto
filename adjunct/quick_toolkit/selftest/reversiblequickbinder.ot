/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "quick_toolkit.reversiblequickbinder";
require init;

include "adjunct/quick_toolkit/bindings/ReversibleQuickBinder.h";
include "adjunct/quick_toolkit/widgets/QuickCheckBox.h";
include "adjunct/quick_toolkit/widgets/QuickEdit.h";

global
{
	struct Model
	{
		Model() { m_bool.Set(false); }

		OpProperty<bool> m_bool;
		OpProperty<OpString> m_string;
	};
}

subtest WidgetTextEquals(const QuickTextWidget& widget, const OpStringC& text)
{
	OpString widget_text;
	verify_success(widget.GetText(widget_text));
	verify((text.IsEmpty() && widget_text.IsEmpty()) || text == widget_text);
}

test("Once bound, the property is up-to-date wrt the UI")
{
	Model model;

	QuickCheckBox check_box;
	check_box.Init();
	QuickEdit edit;
	edit.Init();

	ReversibleQuickBinder binder;
	verify_success(binder.Connect(check_box, model.m_bool));
	verify_success(binder.Connect(edit, model.m_string));

	verify((check_box.GetOpWidget()->GetValue() ? true : false) == model.m_bool.Get());
	verify(WidgetTextEquals(edit, model.m_string.Get()));

	check_box.GetOpWidget()->SetValue(1);
	edit.SetText(UNI_L("foo"));
	verify((check_box.GetOpWidget()->GetValue() ? true : false) == model.m_bool.Get());
	verify(WidgetTextEquals(edit, model.m_string.Get()));

	model.m_bool.Set(false);
	model.m_string.Set(UNI_L("bar"));
	verify((check_box.GetOpWidget()->GetValue() ? true : false) == model.m_bool.Get());
	verify(WidgetTextEquals(edit, model.m_string.Get()));
}
finally
{
	binder.Commit();
}

test("If not reverted, properties retain the values set in the UI")
{
	Model model;

	QuickCheckBox check_box;
	check_box.Init();
	QuickEdit edit;
	edit.Init();

	{
		ReversibleQuickBinder binder;
		verify_success(binder.Connect(check_box, model.m_bool));
		verify_success(binder.Connect(edit, model.m_string));

		check_box.GetOpWidget()->SetValue(1);
		edit.SetText(UNI_L("foo"));
		binder.Commit();
	}

	verify(model.m_bool.Get() == true);
	verify(model.m_string.Get() == OpStringC(UNI_L("foo")));
}

test("If reverted, properties get their original values")
{
	Model model;

	QuickCheckBox check_box;
	check_box.Init();
	QuickEdit edit;
	edit.Init();

	{
		ReversibleQuickBinder binder;
		verify_success(binder.Connect(check_box, model.m_bool));
		verify_success(binder.Connect(edit, model.m_string));

		check_box.GetOpWidget()->SetValue(1);
		edit.SetText(UNI_L("foo"));
		verify((check_box.GetOpWidget()->GetValue() ? true : false) == model.m_bool.Get());
		verify(WidgetTextEquals(edit, model.m_string.Get()));
	}

	verify(model.m_bool.Get() == false);
	verify(model.m_string.Get().IsEmpty());
}
