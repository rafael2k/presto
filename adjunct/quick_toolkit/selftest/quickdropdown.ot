/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "quick_toolkit.quickdropdown";
require init;

include "adjunct/quick_toolkit/widgets/QuickDropDown.h";

global
{
	const uni_char* ITEM_TEXT =
			UNI_L("An item wider than the default minimum width");
}


test("QuickDropDown::AddItem() updates size")
{
	QuickDropDown drop_down;
	verify_success(drop_down.Init());
	const unsigned initial_width = drop_down.GetPreferredWidth();
	verify_success(drop_down.AddItem(ITEM_TEXT));
	verify(drop_down.GetPreferredWidth() > initial_width);
}

test("DesktopOpDropDown::AddItem() updates size")
{
	QuickDropDown drop_down;
	verify_success(drop_down.Init());
	const unsigned initial_width = drop_down.GetPreferredWidth();
	verify_success(drop_down.GetOpWidget()->AddItem(ITEM_TEXT));
	verify(drop_down.GetPreferredWidth() > initial_width);
}

test("OpDropDown::AddItem() updates size")
{
	QuickDropDown drop_down;
	verify_success(drop_down.Init());
	const unsigned initial_width = drop_down.GetPreferredWidth();
	verify_success(static_cast<OpDropDown*>(drop_down.GetOpWidget())
			->AddItem(ITEM_TEXT));
	verify(drop_down.GetPreferredWidth() > initial_width);
}
