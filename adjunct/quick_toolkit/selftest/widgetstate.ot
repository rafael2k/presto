/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2008 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Manuela Hutter (manuelah)
 */

group "desktop_util.widgetstate";

include "adjunct/quick_toolkit/selftest/src/FakeWidgetStateModifier.h";


test("Create listener") leakcheck;
{
	FakeWidgetStateListener listener;

	// check that its initialized correctly
	verify(listener.GetModifier() == NULL);

	// check that the test class is initialized correctly
	verify(listener.GetCurrentState() == NULL);
}


test("Create modifier") leakcheck;
{
	FakeWidgetStateModifier modifier;

	// check that the test class is initialized correctly
	verify(modifier.GetCurrentWidgetState() == NULL);
	verify(modifier.GetListenerCount() == 0);
}


test("Create listener, set modifier")
{
	// create listener & modifier
	FakeWidgetStateListener listener;
	FakeWidgetStateModifier modifier;

	// connect listener and modifier
	listener.SetModifier(&modifier);

	//check that it's set correctly
	verify(listener.GetModifier() == &modifier);

	// check that the listener has added itself as a listener in the modifier
	verify(modifier.GetListenerCount() == 1);

	// check that the states are set correctly
	verify(listener.GetCurrentState() == modifier.GetCurrentWidgetState());
}


test("Create modifier, set state")
{
	// create modifier & state
	FakeWidgetStateModifier modifier;
	FakeEmptyWidgetState empty_state;
	
	// set current state
	modifier.SetCurrentWidgetState(&empty_state);

	// verify that the fake setter works correctly
	verify(modifier.GetCurrentWidgetState() == &empty_state);
}


test("Create listener, set modifier with widget state set")
{
	// create listener, modifier & state
	FakeWidgetStateListener listener;
	FakeWidgetStateModifier modifier;
	FakeEmptyWidgetState empty_state;
	
	// set current state
	modifier.SetCurrentWidgetState(&empty_state);

	// connect listener and modifier
	listener.SetModifier(&modifier);

	// check that the states are set correctly
	verify(listener.GetCurrentState() == modifier.GetCurrentWidgetState());
}

test("Create listeners, set two modifiers")
{
	// create listener, modifier & state
	FakeWidgetStateListener listener;
	FakeWidgetStateModifier modifier1, modifier2;

	// connect listener and modifier
	listener.SetModifier(&modifier1);
	listener.SetModifier(&modifier2);

	// check that modifier 1 has no listener any more
	verify(modifier1.GetListenerCount() == 0);
	// check that modifier 2 has the listener set correctly
	verify(modifier2.GetListenerCount() == 1);
}
