/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Arjan van Leeuwen (arjanl)
 */

group "quick_toolkit.quickgridrowcreator";

include "adjunct/quick_toolkit/creators/QuickGridRowCreator.h";

include "adjunct/desktop_util/adt/typedobjectcollection.h";
include "adjunct/quick_toolkit/widgets/QuickGrid/QuickGrid.h";
include "adjunct/quick_toolkit/widgets/QuickGrid/GridCellIterator.h";
include "adjunct/quick_toolkit/widgets/QuickButton.h";
include "adjunct/quick_toolkit/widgets/QuickEdit.h";
include "adjunct/ui_parser/ParserDocument.h";
include "adjunct/ui_parser/ParserLogger.h";
include "adjunct/ui_parser/selftests/src/ST_YamlDocument.h";

global
{
	#define GRIDROW		"template:\n" \
						"  - type: Button\n" \
						"    name: button\n" \
						"  - type: Edit\n" \
						"    name: edit\n"
}

test("Create a row with some widgets")
{
	// setup
	ParserDocument document;
	verify_success(document.Init(ST_YamlDocument::FromString(GRIDROW)));
	ParserNodeMapping root_node;
	verify(document.GetRootNode(root_node));
	ParserNodeSequence row_node;
	verify(root_node.GetChildNodeByID(root_node.FindValueForKey("template"), row_node));

	// instantiate row
	QuickGrid grid;
	TypedObjectCollection collection;
	ParserLogger logger;
	QuickGridRowCreator creator(row_node, logger, true);
	verify_success(creator.Instantiate(grid, collection));

	// verify widgets were created with correct type
	QuickButton* button = collection.Get<QuickButton>("button");
	verify(button);
	QuickEdit* edit = collection.Get<QuickEdit>("edit");
	verify(edit);

	// verify widgets are in grid
	GridCellIterator it(grid);
	verify(it);
	verify(it.Get() == button);

	++it;
	verify(it);
	verify(it.Get() == edit);
}
