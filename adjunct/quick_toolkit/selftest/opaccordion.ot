/* -*- Mode: c++; tab-width: 4; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 *
 * @author Alexander Remen (alexr)
 */

group "quick_toolkit.OpAccordion";
require init;

include "adjunct/quick_toolkit/widgets/OpAccordion.h";

global
{
	#define ACCORDION_HEIGHT 1000
	#define ACCORDION_WIDTH 150
	#define ACCORDION_BUTTON_HEIGHT 25
	#define ACCORDION_ITEM_WIDGET_HEIGHT 160
	class Test_Widget : public OpWidget
	{
		public:
		Test_Widget() : OpWidget() {} 
		virtual void GetPreferedSize(INT32* w, INT32* h, INT32 cols, INT32 rows) { *w = ACCORDION_WIDTH; *h = ACCORDION_ITEM_WIDGET_HEIGHT; }
	}
};

test("Most functions in OpAccordion work correctly")
{
	OpAccordion accordion;
	accordion.SetRect(OpRect(0, 0, ACCORDION_WIDTH, ACCORDION_HEIGHT));
	
	for (int i = 10; i < 15; i++)
	{
		// Add 5 items and test its height closed and opened
		OpString name;
		Test_Widget* test_widget = OP_NEW(Test_Widget, ());
		verify_success(name.AppendFormat(UNI_L("item %d"), i));
		verify_success(accordion.AddAccordionItem(i, name, "folder", test_widget));
	}
	
	// check that the count is correct
	verify(accordion.GetCount() == 5); 
	
	// check that GetItemById works
	verify(accordion.GetItemById(12) != NULL);
	
	// check that GetItemByIndex works
	verify(accordion.GetItemByIndex(2) != NULL);
	
	// check that RemoveAccordionItem works
	accordion.RemoveAccordionItem(12);
	verify(accordion.GetItemById(12) == NULL);
	// ... and that it updated the count
	verify(accordion.GetCount() == 4);

	// Removing an item that doesn't exist doesn't crash
	accordion.RemoveAccordionItem(1);
	verify(accordion.GetCount() == 4);

	// check that DeleteAll works
	accordion.DeleteAll();
	
	verify(accordion.GetCount() == 0);
}

test("OpAccordion::OnLayout works correctly")
{
	OpAccordion accordion;
	accordion.SetRect(OpRect(0, 0, ACCORDION_WIDTH, ACCORDION_HEIGHT));
	
	for (int i = 0; i < 6; i++)
	{
		// add one item at the time and test the height of each item
		OpString name;
		Test_Widget* test_widget = OP_NEW(Test_Widget, ());
		verify_success(name.AppendFormat(UNI_L("item %d"), i));
		verify_success(accordion.AddAccordionItem(i, name, "folder", test_widget));
		accordion.OnLayout();
		// first verify rects when item is closed
		OpRect rect_to_verify = accordion.GetItemByIndex(i)->GetRect();
		verify(rect_to_verify.width == ACCORDION_WIDTH);

		verify(rect_to_verify.height == 25);
		// open the item
		accordion.ExpandItem(accordion.GetItemByIndex(i), TRUE, FALSE);
		accordion.OnLayout();

		for (int j = 0; j < i; j++)
		{
			// check that it didn't affect the other items
			rect_to_verify = accordion.GetItemByIndex(j)->GetRect();
			verify(rect_to_verify.height == ACCORDION_ITEM_WIDGET_HEIGHT + ACCORDION_BUTTON_HEIGHT);
		}

		rect_to_verify = accordion.GetItemByIndex(i)->GetRect();
		verify(rect_to_verify.width == ACCORDION_WIDTH);
		verify(rect_to_verify.height == (ACCORDION_ITEM_WIDGET_HEIGHT + ACCORDION_BUTTON_HEIGHT));
	}
}
