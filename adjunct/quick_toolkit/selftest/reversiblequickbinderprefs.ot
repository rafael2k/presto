/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2011 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "quick_toolkit.reversiblequickbinderprefs";
require init;

include "adjunct/desktop_util/adt/typedobjectcollection.h";
include "adjunct/desktop_util/prefs/PrefsCollectionDesktopUI.h";
include "adjunct/quick_toolkit/bindings/ReversibleQuickBinder.h";
include "adjunct/quick_toolkit/widgets/QuickCheckBox.h";
include "adjunct/quick_toolkit/widgets/QuickEdit.h";
include "adjunct/quick_toolkit/widgets/QuickRadioButton.h";
include "modules/widgets/OpButtonGroup.h";


global
{
	#define INT_PREF PrefsCollectionUI::UpgradeCount
	#define STRING_PREF PrefsCollectionUI::UserEmail

	int old_int_pref;
	OpString old_string_pref;

	struct Widgets : public TypedObjectCollection
	{
		Widgets() : m_radio_group(NULL)
		{
			m_button0.Init();
			m_button1.Init();
			m_button0.GetOpWidget()->RegisterToButtonGroup(&m_radio_group);
			m_button1.GetOpWidget()->RegisterToButtonGroup(&m_radio_group);

			m_check_box.Init();
			m_edit.Init();

			Put("button0", &m_button0);
			Put("button1", &m_button1);
			Put("check_box", &m_check_box);
			Put("edit", &m_edit);
		}

		OpButtonGroup m_radio_group;
		QuickRadioButton m_button0;
		QuickRadioButton m_button1;

		QuickCheckBox m_check_box;
		QuickEdit m_edit;
	};
}

setup
{
	old_int_pref = g_pcui->GetIntegerPref(INT_PREF);
	old_string_pref.Set(g_pcui->GetStringPref(STRING_PREF));
}

exit
{
	TRAPD(result, g_pcui->WriteIntegerL(INT_PREF, old_int_pref));
	TRAP(result, g_pcui->WriteStringL(STRING_PREF, old_string_pref));
}


test("Once bound, the preference is up-to-date wrt the UI")
{
	Widgets widgets;
	ReversibleQuickBinder binder;
	binder.SetWidgetCollection(&widgets);

	TRAPD(result, g_pcui->WriteIntegerL(INT_PREF, 0));
	TRAP(result, g_pcui->WriteStringL(STRING_PREF, UNI_L("bumble")));

	verify_success(binder.Connect("button0", *g_pcui, INT_PREF, 0));
	verify_success(binder.Connect("button1", *g_pcui, INT_PREF, 1));
	verify_success(binder.Connect("edit", *g_pcui, STRING_PREF));

	verify(widgets.m_button0.GetOpWidget()->GetValue() != 0);
	verify(widgets.m_button1.GetOpWidget()->GetValue() == 0);

	OpString widget_text;
	verify_success(widgets.m_edit.GetOpWidget()->GetText(widget_text));
	verify_string(widget_text, UNI_L("bumble"));

	widgets.m_button1.GetOpWidget()->SetValue(1);
	verify(g_pcui->GetIntegerPref(INT_PREF) == 1);

	widgets.m_button0.GetOpWidget()->SetValue(1);
	verify(g_pcui->GetIntegerPref(INT_PREF) == 0);

	verify_success(widgets.m_edit.GetOpWidget()->SetText(UNI_L("bee")));
	verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bee"));
}

test("If not reverted, preferences retain the values set in the UI")
{
	Widgets widgets;

	{
		ReversibleQuickBinder binder;
		binder.SetWidgetCollection(&widgets);

		TRAPD(result, g_pcui->WriteIntegerL(INT_PREF, 0));
		TRAP(result, g_pcui->WriteStringL(STRING_PREF, UNI_L("bumble")));

		verify_success(binder.Connect("check_box", *g_pcui, INT_PREF));
		verify_success(binder.Connect("edit", *g_pcui, STRING_PREF));

		verify(g_pcui->GetIntegerPref(INT_PREF) == 0);
		widgets.m_check_box.GetOpWidget()->SetValue(1);
		verify(g_pcui->GetIntegerPref(INT_PREF) == 1);

		verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bumble"));
		verify_success(widgets.m_edit.GetOpWidget()->SetText(UNI_L("bee")));
		verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bee"));

		binder.Commit();
	}

	verify(g_pcui->GetIntegerPref(INT_PREF) == 1);
	verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bee"));
}

test("If reverted, preferences get their original values")
{
	Widgets widgets;

	{
		ReversibleQuickBinder binder;
		binder.SetWidgetCollection(&widgets);

		TRAPD(result, g_pcui->WriteIntegerL(INT_PREF, 0));
		TRAP(result, g_pcui->WriteStringL(STRING_PREF, UNI_L("bumble")));

		verify_success(binder.Connect("check_box", *g_pcui, INT_PREF));
		verify_success(binder.Connect("edit", *g_pcui, STRING_PREF));

		verify(g_pcui->GetIntegerPref(INT_PREF) == 0);
		widgets.m_check_box.GetOpWidget()->SetValue(1);
		verify(g_pcui->GetIntegerPref(INT_PREF) == 1);

		verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bumble"));
		verify_success(widgets.m_edit.GetOpWidget()->SetText(UNI_L("bee")));
		verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bee"));
	}

	verify(g_pcui->GetIntegerPref(INT_PREF) == 0);
	verify_string(g_pcui->GetStringPref(STRING_PREF), UNI_L("bumble"));
}
