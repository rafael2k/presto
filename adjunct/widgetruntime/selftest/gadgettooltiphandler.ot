/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 */

group "widgetruntime.GadgetTooltipHandler";

require init;
require WIDGET_RUNTIME_SUPPORT;

include "adjunct/quick_toolkit/widgets/OpToolTipListener.h";
include "adjunct/widgetruntime/GadgetTooltipHandler.h";
include "modules/inputmanager/inputaction.h"; // OpInfoText here, reason unknown
include "modules/locale/oplanguagemanager.h";
include "modules/locale/locale-enum.h";


global
{
	class TestTooltipHandler : public GadgetTooltipHandler
	{
	public:
		OpToolTipListener* GetTooltipListener() const
				{ return GadgetTooltipHandler::GetTooltipListener(); }
	};
}


table TooltipData(const uni_char* /* link */, const uni_char* /* title */,
		const uni_char* /* exp_tooltip_text_format */,
		Str::LocaleString, Str::LocaleString)
{
	{NULL,			NULL,			UNI_L(""),
				Str::NOT_A_STRING,				Str::NOT_A_STRING}
	{UNI_L(""),		UNI_L(""),		UNI_L(""),
				Str::NOT_A_STRING,				Str::NOT_A_STRING}
	{UNI_L("link"),	NULL,			UNI_L("%s: link"),
				Str::SI_LOCATION_TEXT,			Str::NOT_A_STRING}
	{UNI_L("link"),	UNI_L(""),		UNI_L("%s: link"),
				Str::SI_LOCATION_TEXT,			Str::NOT_A_STRING}
	{NULL,			UNI_L("title"),	UNI_L("%s: title"),
				Str::SI_IDSTR_HL_TREE_TITLE,	Str::NOT_A_STRING}
	{UNI_L(""),		UNI_L("title"),	UNI_L("%s: title"),
				Str::SI_IDSTR_HL_TREE_TITLE,	Str::NOT_A_STRING}
	{UNI_L("link"),	UNI_L("title"),	UNI_L("%s: title\n%s: link"),
				Str::SI_IDSTR_HL_TREE_TITLE,	Str::SI_LOCATION_TEXT}
	// Must ignore widget-internal links.
	{UNI_L("widget://wuid-38a3820e-8633-04f9-0dcb-8cac86334995"),
				UNI_L("title"),	UNI_L("%s: title"),
				Str::SI_IDSTR_HL_TREE_TITLE,	Str::NOT_A_STRING}
	{UNI_L("widget://wuid-38a3820e-8633-04f9-0dcb-8cac86334995"),
				UNI_L(""),	UNI_L(""),
				Str::NOT_A_STRING,				Str::NOT_A_STRING}
}

// Impossible to use "iterate" with Str::LocaleString in table columns -- gives
// compile errors.

foreach (link, title, exp_tooltip_text_format, id0, id1) from TooltipData
{
	test("ShowTooltip fills OpInfoText object")
	{
		TestTooltipHandler handler;
		verify_success(handler.Init());

		verify_success(handler.ShowTooltip(link, title));

		OpString par0;
		g_languageManager->GetString(id0, par0);
		OpString par1;
		g_languageManager->GetString(id1, par1);
		OpString exp_tooltip_text;
		exp_tooltip_text.AppendFormat(exp_tooltip_text_format, par0.CStr(),
				par1.CStr());

		OpToolTipListener* listener = handler.GetTooltipListener();
		verify(listener != NULL);
		OpInfoText info_text;
		listener->GetToolTipText(NULL, info_text);
		OpString tooltip_text;
		tooltip_text.Set(info_text.GetTooltipText().HasContent()
				? info_text.GetTooltipText().CStr() : UNI_L(""));
		verify_string(tooltip_text, exp_tooltip_text);
	}
}

test("HideTooltip removes listener")
		require success "ShowTooltip fills OpInfoText object";
{
	TestTooltipHandler handler;
	verify_success(handler.Init());

	verify_success(handler.ShowTooltip(UNI_L("link"), UNI_L("title")));
	verify(handler.GetTooltipListener() != NULL);

	verify_success(handler.HideTooltip());
	verify(handler.GetTooltipListener() == NULL);
}
