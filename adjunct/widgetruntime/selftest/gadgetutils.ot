group "widgetruntime.gadgetutils";

include "adjunct/widgetruntime/GadgetUtils.h";

table ConfXml_WidgetName_Map(char*, char*)
{
	{ "data/config-01.xml", "analogclock" },
	{ "data/config-02.xml", "Artist's Sketchbook 1.65" },
	{ "data/config-03.xml", "" }
}

foreach (file_name, widget_name) from ConfXml_WidgetName_Map
{
	test("Get <widgetname> element content from " file_name)
			file uni conf_xml_path file_name;
	{
		OpString8 obtained_widget_name;

		// Obtain name from config.xml file.

		verify(OpStatus::IsSuccess(GadgetUtils::GetGadgetName(
				OpStringC(conf_xml_path), obtained_widget_name)));

		// Compare to name that was obtained.

		verify(obtained_widget_name.Compare(widget_name) == 0);
	}
}

test("Get generic gadget icon from the current skin")
{
	Image gen_ico;

	// With this invocation at least 16x16 icon should be returned.

	verify(OpStatus::IsSuccess(GadgetUtils::GetGenericGadgetIcon(gen_ico)));
	verify(gen_ico.Width() >= 16 && gen_ico.Height() >= 16);
}
