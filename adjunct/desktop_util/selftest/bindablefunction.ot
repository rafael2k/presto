/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "desktop_util.bindablefunction";

include "adjunct/desktop_util/adt/bindablefunction.h";

global
{
	struct VarHolder
	{
		static int& Var()
		{
			static int var = 0;
			return var;
		}
	};

	struct ChangeVar
	{
		void operator()() const
			{ ++VarHolder::Var(); }
	};

	struct ChangeBoundVar
	{
		void operator()(int* var) const
			{ ++(*var); }
	};
}

test("Calling a no-arg function")
{
	VarHolder::Var() = 0;
	ChangeVar change_var;
	BindableFunction fun(change_var);
	fun.Call();
	verify(VarHolder::Var() != 0);
}

test("Calling a 1-arg function")
{
	int var = 0;
	BindableFunction fun(ChangeBoundVar(), &var);
	fun.Call();
	verify(var != 0);
}
