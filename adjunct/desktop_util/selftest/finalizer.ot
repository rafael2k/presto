/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "desktop_util.finalizer";

include "adjunct/desktop_util/adt/finalizer.h";

global
{
	class Resource
	{
	public:
		static int Acquire()
			{ Handle() = 12; return Handle(); }
		static int Acquire2()
			{ Handle2() = 13; return Handle2(); }
		static void Release(int handle)
			{ if (handle == Handle()) Handle() = -1; }
		static void Release2(int handle, int handle2)
		{
			if (handle == Handle()) Handle() = -1;
			if (handle2 == Handle2()) Handle2() = -1;
		}
		static BOOL IsReleased()
			{ return -1 == Handle() && -1 == Handle2(); }

	private:
		static int& Handle()
		{
			static int handle = -1;
			return handle;
		}
		static int& Handle2()
		{
			static int handle2 = -1;
			return handle2;
		}
	};
}

test("Finalizer is activated at destruction")
{
	{
		const int handle = Resource::Acquire();
		verify(!Resource::IsReleased());
		Finalizer finalizer(BindableFunction(&Resource::Release, handle));
	}
	verify(Resource::IsReleased());

	{
		const int handle = Resource::Acquire();
		const int handle2 = Resource::Acquire2();
		verify(!Resource::IsReleased());
		Finalizer finalizer(BindableFunction(&Resource::Release2, handle,
					handle2));
	}
	verify(Resource::IsReleased());
}
