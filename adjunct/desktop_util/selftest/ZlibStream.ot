/* -*- Mode: c++; tab-width: 4; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2009 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 *
 * @author Arjan van Leeuwen (arjanl)
 */

group "desktop_util.ZlibStream";

include "adjunct/desktop_util/datastructures/ZlibStream.h";

global
{
	#define TEST_TEXT "Lorem ipsum dolor sit amet, consectetur adipisicing elit, " \
	"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim " \
	"ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip " \
	"ex ea commodo consequat. Duis aute irure dolor in reprehenderit in " \
	"voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " \
	"sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt " \
	"mollit anim id est laborum."
}

test("Compressed data can be decompressed")
{
	CompressZlibStream compressor;
	DecompressZlibStream decompressor;
	StreamBuffer<char> compressed;
	StreamBuffer<char> decompressed;

	verify(OpStatus::IsSuccess(compressor.AddData(TEST_TEXT, op_strlen(TEST_TEXT))));
	verify(OpStatus::IsSuccess(compressor.Flush(compressed)));

	verify(OpStatus::IsSuccess(decompressor.AddData(compressed.GetData(), compressed.GetFilled())));
	verify(OpStatus::IsSuccess(decompressor.Flush(decompressed)));

	verify(decompressed.GetData());
	verify(op_strcmp(decompressed.GetData(), TEST_TEXT) == 0);
}

test("Compression decreases size when compressing same text twice")
{
	CompressZlibStream compressor;
	StreamBuffer<char> compressed;

	verify(OpStatus::IsSuccess(compressor.AddData(TEST_TEXT, op_strlen(TEST_TEXT))));
	verify(OpStatus::IsSuccess(compressor.AddData(TEST_TEXT, op_strlen(TEST_TEXT))));
	verify(OpStatus::IsSuccess(compressor.Flush(compressed)));

	verify(compressed.GetFilled() > 0);
	verify(compressed.GetFilled() < op_strlen(TEST_TEXT) * 2);
}
