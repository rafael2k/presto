/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2010 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 * @author Wojciech Dzierzanowski (wdzierzanowski)
 */

group "desktop_util.opbufferingproperty";

include "adjunct/desktop_util/adt/opbufferingproperty.h";

test("Buffering property is initialized with target property's value")
{
	OpProperty<bool> trigger;

	OpProperty<int> target;
	target.Set(12);

	OpBufferingProperty<int> buffer;
	verify_success(buffer.Init(target, trigger));

	verify(buffer.Get() == target.Get());
}

test("Target property is only set upon commit trigger")
{
	OpProperty<int> target;
	target.Set(0);

	OpProperty<bool> trigger;
	trigger.Set(false);

	OpBufferingProperty<int> buffer;
	verify_success(buffer.Init(target, trigger));

	buffer.Set(1);
	verify(buffer.Get() == 1);
	verify(target.Get() == 0);

	buffer.Set(2);
	verify(buffer.Get() == 2);
	verify(target.Get() == 0);

	trigger.Set(true);
	verify(buffer.Get() == 2);
	verify(target.Get() == 2);
}

test("Target property is never set if trigger never fires")
{
	OpProperty<int> target;
	target.Set(0);

	OpProperty<bool> trigger;
	trigger.Set(false);

	{
		OpBufferingProperty<int> buffer;
		verify_success(buffer.Init(target, trigger));

		buffer.Set(1);
		verify(buffer.Get() == 1);
		verify(target.Get() == 0);
	}

	verify(target.Get() == 0);
}
