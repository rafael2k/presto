/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2012-2012 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** @author Alexei Khlebnikov
*/

group "url.happy_eyeballs";

// For UniteCacheTester.
require WEBSERVER_SUPPORT;

require init;
language c++;

include "modules/cache/cache_selftest.h";


global {
	UniteCacheTester uct;
}

// Tests for Happy Eyeballs against internal servers.
// The tests checks that Opera will connect to the host within 5 seconds.
// They should pass if Happy Eyeballs work and should not pass if
// Happy Eyeballs doesn't work.
// The tests can be enabled by default when Opera's internal network
// and all SPARTAN slaves reliably support IPv6.

test("http://firewalled-ipv6-working-ipv4.oslo.osa/")
	async;
	disabled;
{
	URL url_local = urlManager->GetURL("http://firewalled-ipv6-working-ipv4.oslo.osa/");
	uct.LoadOK(url_local);
}

test("http://firewalled-ipv4-working-ipv6.oslo.osa/")
	async;
	disabled;
{
	URL url_local = urlManager->GetURL("http://firewalled-ipv4-working-ipv6.oslo.osa/");
	uct.LoadOK(url_local);
}

// Happy Eyeballs test by RIPE.
test("http://intentionally.broken.dualstack.wdm.sg.ripe.net/")
	async;
	// Disabled because it's an external server with the hostname that looks temporary.
	disabled;
{
	URL url_local = urlManager->GetURL("http://intentionally.broken.dualstack.wdm.sg.ripe.net/");
	uct.LoadOK(url_local);
}

// Another test for Happy Eyeballs. Sometimes Facebook doesn't work over IPv6,
// though resolves to both IPv4 and IPv6 addresses.
test("http://www.facebook.com/")
	async;
	// Disabled because it's an external server.
	disabled;
{
	URL url_local = urlManager->GetURL("http://www.facebook.com/");
	uct.LoadOK(url_local);
}

// This test checks how well Opera will try all addresses.
test("http://www.yahoo.com/")
	async;
	// Disabled by default because special setup on the testing (client) host
	// is needed: at least 2 IPv6 addresses and 2 IPv4 addresses
	// of www.yahoo.com must be blocked. Ideally only 1 IPv4 address should
	// not be blocked, all other addresses should be blocked.
	disabled;
{
	URL url_local = urlManager->GetURL("http://www.yahoo.com/");
	uct.LoadOK(url_local);
}

// This test checks that Opera does not crash on connection to this host.
// See bug CORE-47881.
test("http://www.kame.net/")
	async;
	// Disabled by default because the server is sometimes down.
	disabled;
{
	URL url_local = urlManager->GetURL("http://www.kame.net/");
	uct.LoadOK(url_local);
}
