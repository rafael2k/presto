group "url Suggested name test";

require init;

include "core/pch.h";
include "modules/url/url2.h";

table suggested_filenames(const uni_char *, const uni_char *)
{
	{UNI_L("http://www.example.com/"), UNI_L("default")},

	{UNI_L("http://www.example.com/we_are_testing.html"), UNI_L("we_are_testing.html")},
	{UNI_L("http://www.example.com/we are testing.html"), UNI_L("we are testing.html")},
	{UNI_L("http://www.example.com/we     are     testing.html"), UNI_L("we are testing.html")},
	{UNI_L("http://www.example.com/we%0aare%0dtesting.html"), UNI_L("we%0aare%0dtesting.html")},
	{UNI_L("http://www.example.com/we%00are%00testing.html"), UNI_L("we%00are%00testing.html")},
	{UNI_L("http://www.example.com/we%20%20are%20%20testing.html"), UNI_L("we are testing.html")},

	{UNI_L("http://www.example.com/more path/we_are_testing.html"), UNI_L("we_are_testing.html")},
	{UNI_L("http://www.example.com/more path/we are testing.html"), UNI_L("we are testing.html")},
	{UNI_L("http://www.example.com/more path/we     are     testing.html"), UNI_L("we are testing.html")},
	{UNI_L("http://www.example.com/more path/we%0aare%0dtesting.html"), UNI_L("we%0aare%0dtesting.html")},
	{UNI_L("http://www.example.com/more path/we%00are%00testing.html"), UNI_L("we%00are%00testing.html")},
	{UNI_L("http://www.example.com/more path/we%20%20are%20%20testing.html"), UNI_L("we are testing.html")},

	{UNI_L("http://www.example.com/more path/we\x3000\x61re\x3000testing.html"), UNI_L("we\x3000\x61re\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we\x3000\x3000\x3000\x3000 are\x3000\x3000\x3000\x3000 testing.html"), UNI_L("we\x3000\x61re\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%0a\x3000\x61re%0d\x3000testing.html"), UNI_L("we%0a\x3000\x61re%0d\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%00\x3000\x61re%00\x3000testing.html"), UNI_L("we%00\x3000\x61re%00\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%20%20\x3000\x61re%20%20\x3000testing.html"), UNI_L("we are testing.html")},

	{UNI_L("http://www.example.com/more path/we%e3%80%80are%e3%80%80testing.html"), UNI_L("we\x3000\x61re\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%e3%80%80%e3%80%80%e3%80%80%e3%80%80are%e3%80%80%e3%80%80%e3%80%80%e3%80%80testing.html"), UNI_L("we\x3000\x61re\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%0a%e3%80%80are%0d%e3%80%80testing.html"), UNI_L("we%0a\x3000\x61re%0d\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%00%e3%80%80are%00%e3%80%80testing.html"), UNI_L("we%00\x3000\x61re%00\x3000testing.html")},
	{UNI_L("http://www.example.com/more path/we%20%20%e3%80%80are%20%20%e3%80%80testing.html"), UNI_L("we are testing.html")},
}

test("URL Suggested filename")
{
	iterate(input_url, suggested_name) from suggested_filenames
	{
		URL url = g_url_api->GetURL(input_url);
		
		verify(!url.IsEmpty());
		
		OpString actual_suggested_filename;
		
		verify(OpStatus::IsSuccess(url.GetAttribute(URL::KSuggestedFileName_L, actual_suggested_filename)));

		if(suggested_name == NULL)
		{
			verify(actual_suggested_filename.IsEmpty());
		}
		else
		{
			verify(actual_suggested_filename.HasContent());
			verify(actual_suggested_filename.Compare(suggested_name) == 0);
		}
		actual_suggested_filename.Empty();
		url = URL();
	}
}

test("URL stored suggested filename")
{
	iterate(input_url, suggested_name) from suggested_filenames
	{
		URL url = g_url_api->GetURL(UNI_L("http://www.FAIL.com/FAIL.html"));

		verify(!url.IsEmpty());

		verify_success(url.SetAttribute(URL::KSuggestedFileName_L, suggested_name));

		OpString actual_suggested_filename;
		verify_success(url.GetAttribute(URL::KSuggestedFileName_L, actual_suggested_filename));

		verify_string(actual_suggested_filename, suggested_name);
	}
}
