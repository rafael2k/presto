

API_AUTH_AUTHENTICATION					yngve


	This enables authentication for HTTP and FTP

	Import if	: always


API_AUTH_PREAUTHENTICATION				yngve

	This enables preemptive authentication for HTTP and FTP
	(Don't wait to be challenged by the server if we have
	the credentials for a presumed area/realm on the server)

	Import if	: always


API_AUTH_HTTP_DIGEST_AUTHENTICATION		yngve

	This enables Digest Authentication for HTTP (RFC 2617)

	Import if	: _SSL_SUPPORT_

API_URL_HTTP_POST_DATA			yngve

	Enable file upload

	Import if	: _FILE_UPLOAD_SUPPORT_

API_UPLOAD_ENCAPSULATED_ELEMENTS		yngve

	HTTP requests need encapsulated Upload support

	Import if	: always

API_ABOUT_FRAMEWORK				peter

	The URL module uses this API for opera: documents, folder listings and
	error pages.

	Import if: always

API_ABOUT_CACHE				peter

	Enable the OperaCache class to implement the opera:cache document.

	Import if: FEATURE_URL_OPERA

API_CACHE_FILE_STORAGE_AS_SESSION		yngve

	Need FileStorage as Session cache when in RAM only mode

	Import if:	RAMCACHE_ONLY


API_CACHE_RESOURCE_USED			yngve

	Strict cache limit require access to the cache resources used API

	Import if:	FEATURE_STRICT_CACHE_LIMIT

API_URL_COMM_LOCALHOSTNAME			yngve

	This Enables the Comm::GetLocalHostName() function
	Temporary import (move to autoproxy module)

	Import if:	FEATURE_AUTO_PROXY_CONFIG

API_URL_ENABLE_INSERT_TLS		yngve

	In External SSL mode the HTTP stack needs to be able to activate a TLS connection for proxies

	Import if: FEATURE_SSL, _EXTERNAL_SSL_SUPPORT_

API_PI_OPSOCKET_ABORTIVE_CLOSE		no

	This activates functionality that signals the socket layer when an
	abortive close is needed. This avoids unwanted re-transmissions
	after destruction and crashes when destruction occurrs during SSL
	operations for some platforms (e.g. Symbian).

	Import if: NEED_URL_ABORTIVE_CLOSE

API_PI_PAUSE_DOWNLOAD			rogerj

	Implementation of URL::URL_Uint32Attribute's KPauseDownload depends on
	PauseRecv() and ContinueRecv() in OpSocket.

	Import if: API_URL_TCP_PAUSE_DOWNLOAD

API_PRF_RIM_MDS_BROWSER_MODE		no

	This allows the browser component to check if it is running in RIM
	BlackBerry MDS browser mode. If that is the case the browser component
	needs to provide the BlackBerry network with MDS authentication.

	Import if: SUPPORT_RIM_MDS_AUTHENTICATION

API_PI_OPSYSTEMINFO_GETAPPID		no

	This allows the RIM BlackBerry MDS browser to send its application
	ID as a part of the MDS authentication scheme for the BlackBerry
	network.

	Import if: SUPPORT_RIM_MDS_AUTHENTICATION

API_PI_PLATFORM_DRM_INFO			no

	This allows for fetching info about the currently supported DRM
	version from the platform. The info is used in the "DRM Version"
	HTTP header.

	Import if: TWEAK_URL_USE_PLATFORM_DRM_VERSION_INFO

API_DATASTREAM_GENERIC_FILE		yngve

	Selftests requires this API.

	Import if:      FEATURE_SELFTEST

API_CACHE_STOP_RESTART_CONNECTIONS		yngve

	If the socket code reports that the internet connection
	has been shut down, then all loading URLs must be shut down ASAP

	Import if:		TWEAK_URL_DETECT_CONNECTION_CLOSED

API_CF_BYPASS_RULES				roarl

	Bytemobile optimizations require this API.

	Import if: _EMBEDDED_BYTEMOBILE

API_PRF_BYTMOBILE_GUID			roarl

	Bytemobile optimizations require this API.

	Import if: _EMBEDDED_BYTEMOBILE

API_PI_NETWORK_INTERFACE_MANAGER	jonnyr

	activate servername completion

	Import if: PI_CAP_OPSOCKETADDRESS_NETTYPE

API_PI_OPSOCKET_SETISFILEDOWNLOAD	no

	Enables possibility to notify socket that it is handling a file download.

	Import if: URL_NOTIFY_FILE_DOWNLOAD_SOCKET

API_CACHE_ENABLE_LOCAL_ZIP			yngve

	Enabling the active Compress cache functionality requires this API from cache
	
	Import if: API_URL_ACTIVE_COMPRESS_CACHE
	
API_CRYPTO_HASH_MD5								haavardm
		Using md5 hash from libcrypto			
		
		Import if: FEATURE_BYTEMOBILE_EBO3

API_FORMATS_URI_ESCAPE_SUPPORT                  roarl

	Use format's escaping API

	Import if: always

API_URL_TURBO_MODE_HEADER_REDUCTION		no

	Enable support for HTTP header reduction.

	Import if: FEATURE_WEB_TURBO_MODE

API_UPLOAD_TEMP_DISABLE_HEADER			no

	Enable support for temporarily disabling header items.

	Import if: FEATURE_WEB_TURBO_MODE

API_FORMATS_DUPLICATE_INTO          emoller

	Used for response header reduction.

	Import if: FEATURE_WEB_TURBO_MODE

API_ENC_ENDSTATE					emoller

	Used by WebSockets to detect unpaired surrogates at the end of buffers.

	Import if: FEATURE_WEBSOCKETS

API_DAPI_JIL_FILESYSTEM				msimonides

	Used by TWEAK_URL_FILE_SYMLINKS to translate file:// protocol URLs.

	Import if: URL_FILE_SYMLINKS

API_PRF_CUSTOM_UA						peter

	Need preference to control custom UA.

	Import if: TWEAK_URL_UA_CUSTOM

API_OLDDEBUG		peter

	This module uses the old and obsolete debugging methods from the olddebug
	module.

	Import if: YNP_WORK

API_UTIL_CHECK_KEYWORD_INDEX			peter

	Use the CheckKeywodsIndex() function.

	Import if: always

API_UTIL_GET_DATE					peter

	Use the GetDate() function.

	Import if: always

API_UTIL_FIND_FILE_EXT				peter

	Use the FindFileExtension() function.

	Import if: always

API_UTIL_GET_THIS_YEAR				peter

	Use the GetThisYear() function.

	Import if: FEATURE_FTP

API_PI_NETWORK_INTERFACE_MANAGER

	Needed to check online/offline status.

	Import if: always

API_PI_OPSOCKET_LOCALSOCKETADDR

	Needed to check if sockets are using network interfaces that have gone down.

	Import if: API_PI_NETWORK_INTERFACE_MANAGER

API_HTTP_CONTENT_USAGE_INDICATION			ohrn

	Used to send stock UA header for main document only.

	Import if: DEVICE_STOCK_UA_SUPPORT
