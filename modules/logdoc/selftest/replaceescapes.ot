/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2005-2007 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Karlsson
*/

group "logdoc.logdoc_util.replaceescapes";
require initialization;

include "modules/logdoc/logdoc_util.h";

// -- Tests --------------------------------------------------------------

table replaceescapesdata(const uni_char *, const uni_char *)
{
	// Named entities
	{ UNI_L("foo&aring;&auml;&ouml;ouml"),		UNI_L("foo\xE5\xE4\xF6ouml") },
	{ UNI_L("&amp;&emsp;&euro;"),				UNI_L("&\x2003\x20AC") },

	// Windows-1252 broken NCRs
	{ UNI_L("&#128;"),							UNI_L("\x20AC") },

	// Numeric character references, decimal
	{ UNI_L("&#1234;&#2345;&#65536;"),			UNI_L("\x4D2\x929\xD800\xDC00") },

	// Numeric character references, hexadecimal
	{ UNI_L("&#x1234;&#x2345;&#x10000;"),		UNI_L("\x1234\x2345\xD800\xDC00") },

	// Numeric character references, hexadecimal
	{ UNI_L("&#xabc;"),		UNI_L("\xabc") },
}

test("ReplaceEscapes()")
{
	iterate (input, expected) from replaceescapesdata
	{
		uni_char buf[1024]; /* ARRAY OK 2009-02-05 stighal */
		uni_strcpy(buf, input);
		ReplaceEscapes(buf, TRUE, FALSE, FALSE);
		if (!uni_str_eq(buf, expected))
		{
			output("\nhad \"%s\" wanted \"%s\" got \"%s\" ", ST_down(input), ST_down(expected), ST_down(buf));
		}
		verify(uni_str_eq(buf, expected));
	}
}

table replaceescapesbrokendata(const uni_char *, const uni_char *)
{
	// Named entities without semi colon
	{ UNI_L("foo&aring &lang"),				UNI_L("foo\xE5 &lang") },
	{ UNI_L("/data.cgi?grejt=foo&lang=12"),	UNI_L("/data.cgi?grejt=foo&lang=12") },

	// Broken numeric entity- bug 190247
	{ UNI_L("?hi&#list"),	UNI_L("?hi&#list") },
	{ UNI_L("?hi&#xlist"),	UNI_L("?hi&#xlist") },
	{ UNI_L("Hey&#!"),		UNI_L("Hey&#!") },

	// Unrecognized named entity
	{ UNI_L("&foobar;"),	UNI_L("&foobar;") },
	
	// Numeric character reference outside Unicode
	{ UNI_L("&#2297277;"),	UNI_L("\xFFFD") },
}

test("ReplaceEscapes() - broken entities")
{
	iterate (input, expected) from replaceescapesbrokendata
	{
		uni_char buf[1024]; /* ARRAY OK 2009-02-05 stighal */
		uni_strcpy(buf, input);
		ReplaceEscapes(buf, FALSE, FALSE, FALSE);
		if (!uni_str_eq(buf, expected))
		{
			output("\nhad \"%s\" wanted \"%s\" got \"%s\" ", ST_down(input), ST_down(expected), ST_down(buf));
		}
		verify(uni_str_eq(buf, expected));
	}
}
