/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2004-2006 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
*/

group "logdoc.innerhtml";
require initialization;

language ecmascript;

html
{
	"<body>abc</body>"
}

test("innerHTML - simple text")
{
	verify(document.body);
	verify(document.body.innerHTML);
	verify(document.body.innerHTML == "abc");
}

html
{
	//! <body><div></div></body>
}
test("innerHTML - comment#1")
{
	var div = document.getElementsByTagName('div')[0];
	var html = '<!--&amp;-->';
	div.innerHTML = html;
	verify(div.innerHTML == html);
}

html
{
	//! <body><div><!--&--></div></body>
}
test("innerHTML - comment#2")
{
	var div = document.getElementsByTagName('div')[0];
	verify(div.innerHTML == '<!--&-->');
}

html
{
	"<body><DIV id='p&amp;l'>x</DIV></body>"
}
test("innerHTML - attributes")
{
	verify(document.body.innerHTML == '<div id="p&amp;l">x</div>');
}

html
{
	"<body><div>k<span>&amp;</span>l</div></body>"
}
test("innerHTML - nested elements")
{
	verify(document.body.innerHTML == '<div>k<span>&amp;</span>l</div>');
}


html
{
	//! <HTML>
	//! <HEAD><TITLE>InnerHTML on created Element</TITLE></HEAD>
	//! <BODY>
	//! <P>Opera should not freeze</P>
	//! </BODY>
}

test("innerHTML - with body and ending div")
{
	var div=document.createElement('DIV');
	div.innerHTML='<body></div>';
	verify(div.innerHTML == ""); // MSIE creates "<div></div>"
}

test("innerHTML - div with body inside")
{
	var div=document.createElement('DIV');
	div.innerHTML='<div><body></div>';
	verify(div.innerHTML == "<div></div>");
}

test("innerHTML - html with body inside")
{
	var div=document.createElement('HTML');
	div.innerHTML='<div><body></div>';
}

html
{
	"<html><head></head><body><a href='javascript:foo(<!--D-->)'>link</a></body></html>"
}

test("innerHTML - greater than in attribute value")
{
	var inner = document.body.innerHTML;
	verify(inner);
	verify(inner == '<a href="javascript:foo(<!--D-->)">link</a>');
}

html
{
	//! <html><body><iframe src="data:text/html,<html><body><div>"></iframe></body></html>
}

test("innerHTML - unended elements #1")
{
	var iframe = document.getElementsByTagName("iframe")[0];
	verify(iframe);
	var iframe_document = iframe.contentDocument;
	verify(iframe_document);
	verify(iframe_document.body);
	var inner = iframe_document.body.innerHTML;
	verify(inner == "<div></div>");
}

test("innerHTML - unended elements #2")
{
	document.body.innerHTML = "";
	var inner = document.body.innerHTML;
	verify(inner == "");

	document.body.innerHTML = "<div>";
	var inner = document.body.innerHTML;
	verify(inner == "<div></div>");
}

test("innerHTML - unended elements #3")
{
	document.body.innerHTML = "";
	var inner = document.body.innerHTML;
	verify(inner == "");

	document.body.innerHTML = "<div><div>";
	var inner = document.body.innerHTML;
	verify(inner == "<div><div></div></div>");
}

test("innerHTML - unended elements #4")
{
	document.body.innerHTML = "";
	var inner = document.body.innerHTML;
	verify(inner == "");

	document.body.innerHTML = "<input>";
	var inner = document.body.innerHTML;
	verify(inner == "<input>");
}

test("innerHTML - unended elements #5")
{
	document.body.innerHTML = "";
	var inner = document.body.innerHTML;
	verify(inner == "");

	document.body.innerHTML = "<p>";
	var inner = document.body.innerHTML;
	verify(inner == "<p></p>");
}

html
{
	"<html><head></head><body>FAIL</body></html>"
}

test("innerHTML - new body element")
{
	// Bug CORE-22208
	document.documentElement.innerHTML = "<body bgcolor=green text=white>PASS</body>";
	verify(document.body);
	verify(document.body.firstChild);
	verify(document.body.firstChild.data);
	verify(document.body.firstChild.data == "PASS");
	verify(document.body.getAttribute("bgcolor") == "green");
	verify(document.body.getAttribute("text") == "white");
}

test("innerHTML - all different combinations - don't hang")
{
	// Selftest made out of http://cicero.linkoping.osa/innerhtml.html
	var taglist =
		[
		 "UNKNOWN",
		 "A",
		 "P",
		 "I",
		 "B",
		 "U",
		 "S",
		 "Q",
		 "LI",
		 "UL",
		 "OL",
		 "DL",
		 "DT",
		 "DD",
		 "H1",
		 "H2",
		 "H3",
		 "H4",
		 "H5",
		 "H6",
		 "HR",
		 "BR",
		 "EM",
		 "TT",
		 "TH",
		 "TR",
		 "TD",
		 "BQ",
		 "IMG",
		 "PRE",
		 "DIR",
		 "DIV",
		 "KBD",
		 "VAR",
		 "XMP",
		 "MAP",
		 "WBR",
		 "BIG",
		 "DFN",
		 "SUB",
		 "SUP",
		 "BDO",
		 "COL",
		 "DEL",
		 "INS",
		 "XML",
		 "MENU",
		 "FONT",
		 "AREA",
		 "META",
		 "NOBR",
		 "FORM",
		 "HEAD",
		 "BODY",
		 "BASE",
		 "HTML",
		 "CITE",
		 "CODE",
		 "SAMP",
		 "SPAN",
		 "LINK",
		 "ABBR",
		 "TABLE",
		 "INPUT",
		 "TITLE",
		 "FRAME",
		 "SMALL",
		 "STYLE",
		 "IMAGE",
		 "EMBED",
		 "PARAM",
		 "LABEL",
		 "TBODY",
		 "TFOOT",
		 "THEAD",
		 "BLINK",
		 "AUDIO",
		 "VIDEO",
		 "OBJECT",
		 "CANVAS",
		 "APPLET",
		 "STRIKE",
		 "STRONG",
		 "SELECT",
		 "OPTION",
		 "CENTER",
		 "SCRIPT",
		 "KEYGEN",
		 "BUTTON",
		 "IFRAME",
		 "LEGEND",
		 "OUTPUT",
		 "SOURCE",
		 "CAPTION",
		 "ADDRESS",
		 "ISINDEX",
		 "LISTING",
		 "NOEMBED",
		 "MARQUEE",
		 "ACRONYM",
		 "TEXTAREA",
		 "BASEFONT",
		 "FRAMESET",
		 "NOFRAMES",
		 "NOSCRIPT",
		 "COLGROUP",
		 "OPTGROUP",
		 "FIELDSET",
		 "DATALIST",
		 "PLAINTEXT",
		 "BLOCKQUOTE",
		 "EVENT_SOURCE"
		 ];

	for (i = 0; i < taglist.length; i++)
	{
		var outer = taglist[i];
		for (j = -1; j < taglist.length; j++)
		{
			var outerelm = document.createElement(outer);
			var innerstring = "text";
			if (j >= 0)
			{
				var inner = taglist[j].toLowerCase();
				innerstring = "<"+inner+"></"+inner+">";
			}
			outerelm.innerHTML = innerstring;
		}
	}
}


html
{
	//! <!DOCTYPE html>
	//! <html xmlns="http://www.w3.org/1999/xhtml">
	//! <head><title>innerHTML on a p element</title></head>
	//! <body><p>will be replaced</p>
	//! </body></html>
}


test("innerHTML - address on a p element")
{
	var p = document.getElementsByTagName("p")[0];
	verify(p);
	p.innerHTML = "<address>a</address>";
	verify(p.innerHTML == "<address>a</address>");
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body><div>&nbsp;</div></body>
	//!</html>
}

test("innerHTML - npsp")
{
	var div = document.getElementsByTagName("div")[0];
	verify(div);
	verify(div.textContent.length == 1);
	verify(div.textContent.charCodeAt(0) == 160);
	verify(div.innerHTML == "&nbsp;");
}

html
{
	//! <head></head><body><p id=p></p></body>
}

test("innerHTML - <p> as innerHTML of a p")
language ecmascript;
{
	var p = document.getElementById("p");
	verify(p);
	verify(p.innerHTML == "");

	p.innerHTML = "aaa<p>bbb";

	// Now it gets interesting
	// MSIE crashes the script at the above
	// Mozilla, WebKit inserts a <p>
	// Old Opera skips the <p> and inserts two text nodes "aaa" and "bbb"
	// verify(p.innerHTML == "aaa"); // Early core-2.4 opera
	verify(p.innerHTML == "aaa<p>bbb</p>"); // July core-2.4
	// verify(p.innerHTML == "aaabbb"); // Old Opera
	// verify(p.innerHTML == "aaa<P>bbb"); // HTML5?, webkit and mozilla
}

html
{
	//! <!DOCTYPE html>
	//! <html xmlns="http://www.w3.org/1999/xhtml">
	//! <head><title>colgroup element parsing 1</title></head>
	//! <body></body>
	//!</html>
}


test("innerHTML on a colgroup element 1")
{
	var colgroup = document.createElement("colgroup");
	verify(colgroup);
	colgroup.innerHTML = "foo<col>";
	verify(colgroup.innerHTML == "<col>");
}

html
{
	//! <!DOCTYPE html>
	//! <html xmlns="http://www.w3.org/1999/xhtml">
	//! <head><title>colgroup element parsing 2</title></head>
	//! <body></body>
	//!</html>
}

test("innerHTML on a colgroup element 2")
{
	var colgroup = document.createElement("colgroup");
	verify(colgroup);
	colgroup.innerHTML = "<col>foo";
	verify(colgroup.innerHTML == "<col>");
}

