/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "logdoc.wbxml";
require initialization;
require defined WBXML_SUPPORT;
require defined WML_WBXML_SUPPORT;
require defined _WML_SUPPORT_;

include "modules/logdoc/htm_elm.h";
include "modules/doc/frm_doc.h";
include "modules/dochand/fdelm.h";

language C++;

// <wml><card><p>PASS</p></card></wml>
data "text/html"
{
  //! <html><body><iframe id="if1" src="data:application/vnd.wap.wmlc,%02%09%6a%00%7f%67%60%03PASS%00%01%01%01"></iframe></body></html>
}

test("Testing basic loading")
{
	FramesDocElm* ifrm_root = state.doc->GetIFrmRoot();
	verify(ifrm_root);
	FramesDocElm* child = ifrm_root->FirstChild();
	verify(child);
	verify(child->GetCurrentDoc()->GetHLDocProfile()->IsWml());
}

// <wml><card id="card1" title="PASS"><p>Title</p></card></wml>
data "text/html"
{
  //! <html><body><iframe id="if1" src="data:application/vnd.wap.wmlc,%02%09%6a%00%7f%e7%36%03PASS%00%55%03card1%00%01%60%03Title%00%01%01%01"></iframe></body></html>
}

test("Testing attributes loading")
{
	FramesDocElm* ifrm_root = state.doc->GetIFrmRoot();
	verify(ifrm_root);
	FramesDocElm* child = ifrm_root->FirstChild();
	verify(child);
	HTML_Element *card = child->GetCurrentDoc()->GetDocRoot()->GetElmById(UNI_L("card1"));
	verify(card);

	const uni_char *title = card->GetStringAttr(WA_TITLE, NS_IDX_WML);
	verify(title);
	verify(uni_str_eq(title, "PASS"));
}

// <wml><card><p id="card1">PASS</p></card></wml>
data "text/html"
{
  //! <html><body><iframe id="if1" src="data:application/vnd.wap.wmlc,%02%09%6a%05PASS%00%7f%67%e0%55%03card1%00%01%83%00%01%01%01"></iframe></body></html>
}

test("Testing attributes loading")
{
	FramesDocElm* ifrm_root = state.doc->GetIFrmRoot();
	verify(ifrm_root);
	FramesDocElm* child = ifrm_root->FirstChild();
	verify(child);
	HTML_Element *p = child->GetCurrentDoc()->GetDocRoot()->GetElmById(UNI_L("card1"));
	verify(p);
	verify(p->FirstChild());
	const uni_char *txt = p->FirstChild()->Content();
	verify(txt);
	verify(uni_str_eq(txt, "PASS"));
}
