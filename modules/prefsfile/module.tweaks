# Settings

TWEAK_PF_LNG_CUTOFF			peter

	Defines the first database version number for which
	LangAccessor::IsRecognizedLanguageFile() says that the database file
	is valid. This should be defined to the first database revision where
	the old Windows message based numbering scheme was abandoned for the
	new hashed identifier numbering.

	The default is the first database revision from the "strings" module.
	Define to zero to only look at the language file header, and not its
	contents.

	Category  : setting
	Define    : PF_LNG_CUTOFF
	Value     : 811
	Value for desktop:		811
	Value for smartphone:	0
	Value for tv:			0
	Value for minimal:		0
	Depends on: FEATURE_UPGRADE, API_PF_LANGUAGEFILE

TWEAK_PF_BUILDNUMSUFFIX		peter

	Defines the build number suffix used in the LangAccessorLight
	to check the build number this file corresponds to for your platform.

	This value should correspond to the suffix used in the language files
	you are trying to read, i.e the same string used when generating the
	language file with the makelang.pl script.

	Must be set to YES and the value must be changed to something sensible
	if API_PF_LNG_LIGHT is imported. If you don't know what to set it to,
	you probably shouldn't import API_PF_LNG_LIGHT :-)

	Category  : setting
	Define    : BUILDNUMSUFFIX
	Value     : "undefined"
	Depends on: API_PF_LNG_LIGHT

TWEAK_PF_PREFS_STD			peter

	Defines the standard preferences file format for the platform. When a
	preference file is referenced from core code, PREFS_STD should be
	used instead of asking for a specific format.

	Currently most platforms use INI files. You should not need to change
	this unless you have specific needs.

	Category  : setting
	Define    : PREFS_STD
	Value     : PREFS_INI
	Value for desktop:		PREFS_INI
	Value for smartphone:	PREFS_INI
	Value for tv:			PREFS_INI
	Value for minimal:		PREFS_INI
	Disabled for: mini
	Depends on: FEATURE_PREFSFILE

TWEAK_PF_CASE_SENSITIVE		peter

	Defines whether preferences should be read case-sensitively or not.
	The preferences are normally not case-sensitive to make it easier for
	the user to edit the file without having to worry about case, but for
	embedded devices where there is no user access to the files, or for
	platforms who wants a smaller footprint, they can be made
	case-sensitive.

	Enabling case-sensitivity will decrease both the in-memory footprint
	of the read data, and the size of the binary.

	Category  : footprint, performance
	Define    : PREFSMAP_USE_CASE_SENSITIVE
	Depends on: nothing
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_PF_HONOR_READONLY	peter

	This tweak controls whether the user should be allowed to change a
	preference value or not if the configuration file is read-only.  It is
	by default enabled, meaning that a read-only file disallows the any
	changes.

	Disabling this can be useful on platforms where the user configuration
	file is not actually writable at run-time, for instance when embedded
	inside a ROM image, but we still want the user to be able to override
	it.

	Category    : setting
	Define      : PREFSFILE_HONOR_READONLY
	Depends on  : PREFS_HAS_PREFSFILE
	Enabled for : desktop, smartphone, tv, minimal
	Disabled for: mini

# Old tweaks, now deprecated

TWEAK_PF_LNG_LIGHT			deprecated

	This tweak has been replaced by API_PF_LNG_LIGHT.

TWEAK_PF_XML				deprecated

	This tweak has been replaced by API_PF_XML.
