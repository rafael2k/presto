/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2004-2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Yngve N. Pettersen
*/

group "mime multipart doc blocked";

language c++;

include "core/pch.h";

include "modules/network_selftest/serverpush_doctestman1.h";

global {
	URL_DocSelfTest_Manager *mime_tests = NULL;

}

table filename_list_100 (const char *) filelist "testfiles/100gifs/";

setup 
{
	mime_tests = OP_NEW(URL_DocSelfTest_Manager, ());
}

exit
{
	OP_DELETE(mime_tests);
	mime_tests = NULL;
}

test("Initialized")
{
	verify(mime_tests != NULL);
}

subtest AddTestFile(ServerPush_Filename_List &list, const OpStringC8 &name)
{
	verify_success(list.AddItem(name));
}

subtest AddTestUrl100Images(URL_DocSelfTest_Batch *batch, const OpStringC8 &url, URL &ref)
{
	ServerPush_Filename_List filenames;

	verify(url.HasContent());
	URL url_resolved(g_url_api->GetURL(url.CStr()));

	verify(!url_resolved.IsEmpty());
	
	iterate (name) from filename_list_100
	{
		verify(AddTestFile(filenames, name));
	}

	ServerPush_DocBlockedTester *new_tester = OP_NEW(ServerPush_DocBlockedTester, (url_resolved, ref, filenames));

	verify(new_tester != NULL);

	verify(batch->AddTestCase(new_tester));
}

subtest SetUpFirstTestcase()
{
	OpAutoPtr<URL_DocSelfTest_Batch> batch(OP_NEW(URL_DocSelfTest_Batch, ()));
	URL ref;

	verify(batch.get() != NULL);
	batch->Construct(g_main_message_handler);

	verify(AddTestUrl100Images(batch.get(), "http://testsuites.oslo.opera.com/imported/herman/multipart/x-replace/mixed-replace_100.cgi?delayed=5", ref));

	verify(mime_tests->AddBatch(batch.release()));
	verify(mime_tests->SetLastBatch());
}

test("Simple Serverpush")
	require success "Initialized";
	async;
{
	if (!SetUpFirstTestcase())
		ST_failed("Could not setup test");
}
