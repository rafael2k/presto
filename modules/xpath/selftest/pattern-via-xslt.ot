/* -*- mode: c++ -*- */

/* Note: this file is generated by xslt.ot.py from pattern-via-xslt.ot.in.  For a more
         useful view of these test cases, check out pattern-via-xslt.ot.in. */

group "XPath.pattern-via-xslt";
require init;
require XPATH_SUPPORT;
require XSLT_SUPPORT;
require undefined USE_HTML_PARSER_FOR_XML;
language ecmascript;

xml
{
  "<?xml version=\"1.0\"?>"
  "<?xml-stylesheet type=\"text/xsl\" href=\"data:text/xsl,%3Cxsl:stylesheet%20version=%221.0%22%20xmlns:xsl=%22http://www.w3.org/1999/XSL/Transform%22%3E%0A%20%20%3Cxsl:template%20match=%22root%22%3E%0A%20%20%20%20%3Croot%3E%3Cxsl:apply-templates%20select=%22*%22/%3E%3C/root%3E%0A%20%20%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22chapter%20|%20section%20|%20paragraph%22%3Es(%3Cxsl:number%20level=%22single%22%20count=%22chapter%20|%20section%20|%20paragraph%22%20from=%22root%22/%3E)m(%3Cxsl:number%20level=%22multiple%22%20count=%22chapter%20|%20section%20|%20paragraph%22%20from=%22root%22/%3E)a(%3Cxsl:number%20level=%22any%22%20count=%22chapter%20|%20section%20|%20paragraph%22%20from=%22root%22/%3E)%3Cxsl:if%20test=%22*%22%3E[%3Cxsl:apply-templates%20select=%22*%22/%3E]%3C/xsl:if%3E%3C/xsl:template%3E%0A%3C/xsl:stylesheet%3E%0A\"?>"
  "<root>\n"
  "  <chapter>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "  </chapter>\n"
  "</root>\n"
}

test("counting, all sorts of levels")
{
  verify(document.documentElement.textContent == "s(1)m(1)a(1)[s(1)m(1.1)a(2)[s(1)m(1.1.1)a(3)s(2)m(1.1.2)a(4)s(3)m(1.1.3)a(5)]s(2)m(1.2)a(6)[s(1)m(1.2.1)a(7)s(2)m(1.2.2)a(8)s(3)m(1.2.3)a(9)]s(3)m(1.3)a(10)[s(1)m(1.3.1)a(11)s(2)m(1.3.2)a(12)s(3)m(1.3.3)a(13)]]");
}

xml
{
  "<?xml version=\"1.0\"?>"
  "<?xml-stylesheet type=\"text/xsl\" href=\"data:text/xsl,%3Cxsl:stylesheet%20version=%221.0%22%20xmlns:xsl=%22http://www.w3.org/1999/XSL/Transform%22%3E%0A%20%20%3Cxsl:template%20match=%22root%22%3E%0A%20%20%20%20%3Croot%3E%3Cxsl:apply-templates%20select=%22*%22/%3E%3C/root%3E%0A%20%20%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22chapter%20|%20section%20|%20paragraph%22%3Es(%3Cxsl:number%20level=%22single%22%20from=%22root%22/%3E)m(%3Cxsl:number%20level=%22multiple%22%20from=%22root%22/%3E)a(%3Cxsl:number%20level=%22any%22%20from=%22root%22/%3E)%3Cxsl:if%20test=%22*%22%3E[%3Cxsl:apply-templates%20select=%22*%22/%3E]%3C/xsl:if%3E%3C/xsl:template%3E%0A%3C/xsl:stylesheet%3E%0A\"?>"
  "<root>\n"
  "  <chapter>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "    <section>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "      <paragraph>Nonsense</paragraph>\n"
  "    </section>\n"
  "  </chapter>\n"
  "</root>\n"
}

test("counting, all sorts of levels, no count attribute")
{
  verify(document.documentElement.textContent == "s(1)m(1)a(1)[s(1)m(1)a(1)[s(1)m(1)a(1)s(2)m(2)a(2)s(3)m(3)a(3)]s(2)m(2)a(2)[s(1)m(1)a(4)s(2)m(2)a(5)s(3)m(3)a(6)]s(3)m(3)a(3)[s(1)m(1)a(7)s(2)m(2)a(8)s(3)m(3)a(9)]]");
}

xml
{
  "<?xml version=\"1.0\"?>"
  "<?xml-stylesheet type=\"text/xsl\" href=\"data:text/xsl,%3Cxsl:stylesheet%20version=%221.0%22%20xmlns:xsl=%22http://www.w3.org/1999/XSL/Transform%22%3E%0A%20%20%3Cxsl:key%20name=%22k1%22%20match=%22item%22%20use=%22@name%22/%3E%0A%20%20%3Cxsl:template%20match=%22root%22%3E%0A%20%20%20%20%3Croot%3E(item1:%3Cxsl:value-of%20select=%22key('k1',%20'item1')/@value%22/%3E)(item2:%3Cxsl:value-of%20select=%22key('k1',%20'item2')/@value%22/%3E)(item3:%3Cxsl:value-of%20select=%22key('k1',%20'item3')/@value%22/%3E)%3C/root%3E%0A%20%20%3C/xsl:template%3E%0A%3C/xsl:stylesheet%3E%0A\"?>"
  "<root>\n"
  "  <item name=\"item1\" value=\"value1\"/>\n"
  "  <item name=\"item3\" value=\"value3\"/>\n"
  "  <item name=\"item2\" value=\"value2\"/>\n"
  "</root>\n"
}

test("searching1")
{
  verify(document.documentElement.textContent == "(item1:value1)(item2:value2)(item3:value3)");
}

xml
{
  "<?xml version=\"1.0\"?>"
  "<?xml-stylesheet type=\"text/xsl\" href=\"data:text/xsl,%3Cxsl:stylesheet%20version=%221.0%22%20xmlns:xsl=%22http://www.w3.org/1999/XSL/Transform%22%3E%0A%20%20%3Cxsl:key%20name=%22k1%22%20match=%22item%20|%20item/@name%22%20use=%22string()%22/%3E%0A%20%20%3Cxsl:template%20match=%22root%22%3E%0A%20%20%20%20%3Croot%3E%3Cxsl:apply-templates%20select=%22//item%20|%20//item/@name%22/%3E%3C/root%3E%0A%20%20%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'value1')%22%3Ev1%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'value2')%22%3Ev2%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'value3')%22%3Ev3%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'item1')%22%3En1%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'item2')%22%3En2%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22key('k1',%20'item3')%22%3En3%3C/xsl:template%3E%0A%3C/xsl:stylesheet%3E%0A\"?>"
  "<root xmlns:prefix=\"uri\">\n"
  "  <item name=\"item1\">value1</item>\n"
  "  <item name=\"item3\">value3</item>\n"
  "  <item name=\"item2\">value2</item>\n"
  "</root>\n"
}

test("searching2")
{
  verify(document.documentElement.textContent == "v1n1v3n3v2n2");
}

xml
{
  "<?xml version=\"1.0\"?>"
  "<?xml-stylesheet type=\"text/xsl\" href=\"data:text/xsl,%3Cxsl:stylesheet%20version=%221.0%22%20xmlns:xsl=%22http://www.w3.org/1999/XSL/Transform%22%3E%0A%20%20%3Cxsl:template%20match=%22root%22%3E%0A%20%20%20%20%3Croot%3E%3Cxsl:apply-templates%20select=%22node()%22/%3E%3C/root%3E%0A%20%20%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22root/processing-instruction()%22%3E(wild)%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22root/processing-instruction('target1')%22%3E(target1)%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22root/processing-instruction('target2')%22%3E(target2)%3C/xsl:template%3E%0A%20%20%3Cxsl:template%20match=%22text()%22/%3E%0A%3C/xsl:stylesheet%3E%0A\"?>"
  "<root>\n"
  "  <?target1?>\n"
  "  <?target2?>\n"
  "  <?target3?>\n"
  "</root>\n"
}

test("processing-instruction()")
{
  verify(document.documentElement.textContent == "(target1)(target2)(wild)");
}
