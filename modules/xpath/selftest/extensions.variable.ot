group "XPath.extensions.variable";

require init;
require XPATH_EXTENSION_SUPPORT;
require undefined USE_HTML_PARSER_FOR_XML;

include "modules/xpath/xpath.h";
include "modules/xpath/src/xpsthelpers.h";

xml
{
  "<?xml version='1.0'?>"
  "<!DOCTYPE root>"
  "<root>"
    "<lhs>"
      "<text>text1</text>"
      "<text>text2</text>"
      "<text>text3</text>"
      "<number>1</number>"
      "<number>2</number>"
      "<number>3</number>"
    "</lhs>"
    "<rhs>"
      "<text>text1</text>"
      "<text>text2</text>"
      "<text>text3</text>"
      "<number>1</number>"
      "<number>2</number>"
      "<number>3</number>"
    "</rhs>"
  "</root>"
}

test_equal ("$testv=true()",
            XPath_TestBooleanWithParam (state.doc, "$testv=true()", TRUE, "true()"),
            "ok");
test_equal ("$testv=false()",
            XPath_TestBooleanWithParam (state.doc, "$testv=false()", TRUE, "false()"),
            "ok");
test_equal ("$testv=0",
            XPath_TestBooleanWithParam (state.doc, "$testv=0", TRUE, "0"),
            "ok");
test_equal ("$testv=1",
            XPath_TestBooleanWithParam (state.doc, "$testv=1", TRUE, "1"),
            "ok");
test_equal ("$testv=number('')",
            XPath_TestBooleanWithParam (state.doc, "$testv=number('')", FALSE, "number('')"),
            "ok");
test_equal ("$testv=''",
            XPath_TestBooleanWithParam (state.doc, "$testv=''", TRUE, "''"),
            "ok");
test_equal ("$testv='test'",
            XPath_TestBooleanWithParam (state.doc, "$testv='test'", TRUE, "'test'"),
            "ok");

test_equal ("$testv='text1'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text1'", TRUE, "root/lhs/text[1]"),
            "ok");
test_equal ("$testv='text2'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text2'", TRUE, "root/lhs/text[2]"),
            "ok");
test_equal ("$testv='text3'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text3'", TRUE, "root/lhs/text[3]"),
            "ok");
test_equal ("$testv='text1'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text1'", TRUE, "root/lhs/text"),
            "ok");
test_equal ("$testv='text2'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text2'", TRUE, "root/lhs/text"),
            "ok");
test_equal ("$testv='text3'",
            XPath_TestBooleanWithParam (state.doc, "$testv='text3'", TRUE, "root/lhs/text"),
            "ok");

test_equal ("$testv=1",
            XPath_TestBooleanWithParam (state.doc, "$testv=1", TRUE, "root/lhs/number[1]"),
            "ok");
test_equal ("$testv=2",
            XPath_TestBooleanWithParam (state.doc, "$testv=2", TRUE, "root/lhs/number[2]"),
            "ok");
test_equal ("$testv=3",
            XPath_TestBooleanWithParam (state.doc, "$testv=3", TRUE, "root/lhs/number[3]"),
            "ok");
test_equal ("$testv=1",
            XPath_TestBooleanWithParam (state.doc, "$testv=1", TRUE, "root/lhs/number"),
            "ok");
test_equal ("$testv=2",
            XPath_TestBooleanWithParam (state.doc, "$testv=2", TRUE, "root/lhs/number"),
            "ok");
test_equal ("$testv=3",
            XPath_TestBooleanWithParam (state.doc, "$testv=3", TRUE, "root/lhs/number"),
            "ok");

xml
{
  "<?xml version='1.0'?>"
  "<!DOCTYPE root>"
  "<root>"
    "<notes>"
      "<note xml:id='note1'>note1</note>"
      "<note xml:id='note2'>note2</note>"
      "<note xml:id='note3'>note3</note>"
    "</notes>"
    "<references>"
      "<reference>note3</reference>"
      "<reference>note1</reference>"
      "<reference>note2</reference>"
    "</references>"
  "</root>"
}

test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "'note1'"),
            "ok");
test_equal ("string(id($testv))='note2'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note2'", TRUE, "'note2'"),
            "ok");
test_equal ("string(id($testv))='note3'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note3'", TRUE, "'note3'"),
            "ok");
test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "'note1 note3 note2'"),
            "ok");
test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "'note2 note1 note3'"),
            "ok");
test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "'note3 note2 note1'"),
            "ok");
test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note3'", TRUE, "//reference[1]"),
            "ok");
test_equal ("string(id($testv))='note2'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "//reference[2]"),
            "ok");
test_equal ("string(id($testv))='note3'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note2'", TRUE, "//reference[3]"),
            "ok");
test_equal ("string(id($testv))='note1'",
            XPath_TestBooleanWithParam (state.doc, "string(id($testv))='note1'", TRUE, "//reference"),
            "ok");
