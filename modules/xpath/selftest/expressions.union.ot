group "XPath.expressions.union";

require init;
require XPATH_SUPPORT;
require undefined USE_HTML_PARSER_FOR_XML;

include "modules/xpath/xpath.h";
include "modules/xpath/src/xpsthelpers.h";

global
{
  int XPath_union_ab_expected[] = { 2, 3, 6, 7, 10, 11, -1 };
  int XPath_union_ac_expected[] = { 2, 4, 6, 8, 10, 12, -1 };
  int XPath_union_ad_expected[] = { 2, 5, 6, 9, 10, 13, -1 };
  int XPath_union_bc_expected[] = { 3, 4, 7, 8, 11, 12, -1 };
  int XPath_union_bd_expected[] = { 3, 5, 7, 9, 11, 13, -1 };
  int XPath_union_cd_expected[] = { 4, 5, 8, 9, 12, 13, -1 };
  int XPath_union_abc_expected[] = { 2, 3, 4, 6, 7, 8, 10, 11, 12, -1 };
  int XPath_union_abd_expected[] = { 2, 3, 5, 6, 7, 9, 10, 11, 13, -1 };
  int XPath_union_acd_expected[] = { 2, 4, 5, 6, 8, 9, 10, 12, 13, -1 };
  int XPath_union_bcd_expected[] = { 3, 4, 5, 7, 8, 9, 11, 12, 13, -1 };
  int XPath_union_abcd_expected[] = { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, -1 };

  int XPath_union_ab_first_expected[] = { 2, 3, -1 };
  int XPath_union_ac_first_expected[] = { 2, 4, -1 };
  int XPath_union_ad_first_expected[] = { 2, 5, -1 };
  int XPath_union_bc_first_expected[] = { 3, 4, -1 };
  int XPath_union_bd_first_expected[] = { 3, 5, -1 };
  int XPath_union_cd_first_expected[] = { 4, 5, -1 };
  int XPath_union_abc_first_expected[] = { 2, 3, 4, -1 };
  int XPath_union_abd_first_expected[] = { 2, 3, 5, -1 };
  int XPath_union_acd_first_expected[] = { 2, 4, 5, -1 };
  int XPath_union_bcd_first_expected[] = { 3, 4, 5, -1 };
  int XPath_union_abcd_first_expected[] = { 2, 3, 4, 5, -1 };
}

xml
{
  "<?xml version='1.0'?>"
  "<root>"
    "<a/>"
    "<b/>"
    "<c/>"
    "<d/>"
    "<a/>"
    "<b/>"
    "<c/>"
    "<d/>"
    "<a/>"
    "<b/>"
    "<c/>"
    "<d/>"
  "</root>"
}

test_equal ("a | b", XPath_TestNodeSet (state.doc, "a | b", 1, XPath_union_ab_expected, TRUE), "ok");
test_equal ("b | a", XPath_TestNodeSet (state.doc, "b | a", 1, XPath_union_ab_expected, TRUE), "ok");
test_equal ("a | c", XPath_TestNodeSet (state.doc, "a | c", 1, XPath_union_ac_expected, TRUE), "ok");
test_equal ("c | a", XPath_TestNodeSet (state.doc, "c | a", 1, XPath_union_ac_expected, TRUE), "ok");
test_equal ("a | d", XPath_TestNodeSet (state.doc, "a | d", 1, XPath_union_ad_expected, TRUE), "ok");
test_equal ("d | a", XPath_TestNodeSet (state.doc, "d | a", 1, XPath_union_ad_expected, TRUE), "ok");
test_equal ("b | c", XPath_TestNodeSet (state.doc, "b | c", 1, XPath_union_bc_expected, TRUE), "ok");
test_equal ("c | b", XPath_TestNodeSet (state.doc, "c | b", 1, XPath_union_bc_expected, TRUE), "ok");
test_equal ("b | d", XPath_TestNodeSet (state.doc, "b | d", 1, XPath_union_bd_expected, TRUE), "ok");
test_equal ("d | b", XPath_TestNodeSet (state.doc, "d | b", 1, XPath_union_bd_expected, TRUE), "ok");
test_equal ("c | d", XPath_TestNodeSet (state.doc, "c | d", 1, XPath_union_cd_expected, TRUE), "ok");
test_equal ("d | c", XPath_TestNodeSet (state.doc, "d | c", 1, XPath_union_cd_expected, TRUE), "ok");
test_equal ("a | b | c", XPath_TestNodeSet (state.doc, "a | b | c", 1, XPath_union_abc_expected, TRUE), "ok");
test_equal ("a | b | d", XPath_TestNodeSet (state.doc, "a | b | d", 1, XPath_union_abd_expected, TRUE), "ok");
test_equal ("a | c | d", XPath_TestNodeSet (state.doc, "a | c | d", 1, XPath_union_acd_expected, TRUE), "ok");
test_equal ("b | c | d", XPath_TestNodeSet (state.doc, "b | c | d", 1, XPath_union_bcd_expected, TRUE), "ok");
test_equal ("a | b | c | d", XPath_TestNodeSet (state.doc, "a | b | c | d", 1, XPath_union_abcd_expected, TRUE), "ok");
test_equal ("d | c | b | a", XPath_TestNodeSet (state.doc, "d | c | b | a", 1, XPath_union_abcd_expected, TRUE), "ok");

test_equal ("root/a | root/b", XPath_TestNodeSet (state.doc, "root/a | root/b", 0, XPath_union_ab_expected, TRUE), "ok");
test_equal ("root/b | root/a", XPath_TestNodeSet (state.doc, "root/b | root/a", 0, XPath_union_ab_expected, TRUE), "ok");
test_equal ("root/a | root/c", XPath_TestNodeSet (state.doc, "root/a | root/c", 0, XPath_union_ac_expected, TRUE), "ok");
test_equal ("root/c | root/a", XPath_TestNodeSet (state.doc, "root/c | root/a", 0, XPath_union_ac_expected, TRUE), "ok");
test_equal ("root/a | root/d", XPath_TestNodeSet (state.doc, "root/a | root/d", 0, XPath_union_ad_expected, TRUE), "ok");
test_equal ("root/d | root/a", XPath_TestNodeSet (state.doc, "root/d | root/a", 0, XPath_union_ad_expected, TRUE), "ok");
test_equal ("root/b | root/c", XPath_TestNodeSet (state.doc, "root/b | root/c", 0, XPath_union_bc_expected, TRUE), "ok");
test_equal ("root/c | root/b", XPath_TestNodeSet (state.doc, "root/c | root/b", 0, XPath_union_bc_expected, TRUE), "ok");
test_equal ("root/b | root/d", XPath_TestNodeSet (state.doc, "root/b | root/d", 0, XPath_union_bd_expected, TRUE), "ok");
test_equal ("root/d | root/b", XPath_TestNodeSet (state.doc, "root/d | root/b", 0, XPath_union_bd_expected, TRUE), "ok");
test_equal ("root/c | root/d", XPath_TestNodeSet (state.doc, "root/c | root/d", 0, XPath_union_cd_expected, TRUE), "ok");
test_equal ("root/d | root/c", XPath_TestNodeSet (state.doc, "root/d | root/c", 0, XPath_union_cd_expected, TRUE), "ok");
test_equal ("root/a | root/b | root/c", XPath_TestNodeSet (state.doc, "root/a | root/b | root/c", 0, XPath_union_abc_expected, TRUE), "ok");
test_equal ("root/a | root/b | root/d", XPath_TestNodeSet (state.doc, "root/a | root/b | root/d", 0, XPath_union_abd_expected, TRUE), "ok");
test_equal ("root/a | root/c | root/d", XPath_TestNodeSet (state.doc, "root/a | root/c | root/d", 0, XPath_union_acd_expected, TRUE), "ok");
test_equal ("root/b | root/c | root/d", XPath_TestNodeSet (state.doc, "root/b | root/c | root/d", 0, XPath_union_bcd_expected, TRUE), "ok");
test_equal ("root/a | root/b | root/c | root/d", XPath_TestNodeSet (state.doc, "root/a | root/b | root/c | root/d", 0, XPath_union_abcd_expected, TRUE), "ok");
test_equal ("root/d | root/c | root/b | root/a", XPath_TestNodeSet (state.doc, "root/d | root/c | root/b | root/a", 0, XPath_union_abcd_expected, TRUE), "ok");

test_equal ("//a | //b", XPath_TestNodeSet (state.doc, "//a | //b", 0, XPath_union_ab_expected, TRUE), "ok");
test_equal ("//b | //a", XPath_TestNodeSet (state.doc, "//b | //a", 0, XPath_union_ab_expected, TRUE), "ok");
test_equal ("//a | //c", XPath_TestNodeSet (state.doc, "//a | //c", 0, XPath_union_ac_expected, TRUE), "ok");
test_equal ("//c | //a", XPath_TestNodeSet (state.doc, "//c | //a", 0, XPath_union_ac_expected, TRUE), "ok");
test_equal ("//a | //d", XPath_TestNodeSet (state.doc, "//a | //d", 0, XPath_union_ad_expected, TRUE), "ok");
test_equal ("//d | //a", XPath_TestNodeSet (state.doc, "//d | //a", 0, XPath_union_ad_expected, TRUE), "ok");
test_equal ("//b | //c", XPath_TestNodeSet (state.doc, "//b | //c", 0, XPath_union_bc_expected, TRUE), "ok");
test_equal ("//c | //b", XPath_TestNodeSet (state.doc, "//c | //b", 0, XPath_union_bc_expected, TRUE), "ok");
test_equal ("//b | //d", XPath_TestNodeSet (state.doc, "//b | //d", 0, XPath_union_bd_expected, TRUE), "ok");
test_equal ("//d | //b", XPath_TestNodeSet (state.doc, "//d | //b", 0, XPath_union_bd_expected, TRUE), "ok");
test_equal ("//c | //d", XPath_TestNodeSet (state.doc, "//c | //d", 0, XPath_union_cd_expected, TRUE), "ok");
test_equal ("//d | //c", XPath_TestNodeSet (state.doc, "//d | //c", 0, XPath_union_cd_expected, TRUE), "ok");
test_equal ("//a | //b | //c", XPath_TestNodeSet (state.doc, "//a | //b | //c", 0, XPath_union_abc_expected, TRUE), "ok");
test_equal ("//a | //b | //d", XPath_TestNodeSet (state.doc, "//a | //b | //d", 0, XPath_union_abd_expected, TRUE), "ok");
test_equal ("//a | //c | //d", XPath_TestNodeSet (state.doc, "//a | //c | //d", 0, XPath_union_acd_expected, TRUE), "ok");
test_equal ("//b | //c | //d", XPath_TestNodeSet (state.doc, "//b | //c | //d", 0, XPath_union_bcd_expected, TRUE), "ok");
test_equal ("//a | //b | //c | //d", XPath_TestNodeSet (state.doc, "//a | //b | //c | //d", 0, XPath_union_abcd_expected, TRUE), "ok");
test_equal ("//d | //c | //b | //a", XPath_TestNodeSet (state.doc, "//d | //c | //b | //a", 0, XPath_union_abcd_expected, TRUE), "ok");

test_equal ("a[1] | b[1]", XPath_TestNodeSet (state.doc, "a[1] | b[1]", 1, XPath_union_ab_first_expected, TRUE), "ok");
test_equal ("b[1] | a[1]", XPath_TestNodeSet (state.doc, "b[1] | a[1]", 1, XPath_union_ab_first_expected, TRUE), "ok");
test_equal ("a[1] | c[1]", XPath_TestNodeSet (state.doc, "a[1] | c[1]", 1, XPath_union_ac_first_expected, TRUE), "ok");
test_equal ("c[1] | a[1]", XPath_TestNodeSet (state.doc, "c[1] | a[1]", 1, XPath_union_ac_first_expected, TRUE), "ok");
test_equal ("a[1] | d[1]", XPath_TestNodeSet (state.doc, "a[1] | d[1]", 1, XPath_union_ad_first_expected, TRUE), "ok");
test_equal ("d[1] | a[1]", XPath_TestNodeSet (state.doc, "d[1] | a[1]", 1, XPath_union_ad_first_expected, TRUE), "ok");
test_equal ("b[1] | c[1]", XPath_TestNodeSet (state.doc, "b[1] | c[1]", 1, XPath_union_bc_first_expected, TRUE), "ok");
test_equal ("c[1] | b[1]", XPath_TestNodeSet (state.doc, "c[1] | b[1]", 1, XPath_union_bc_first_expected, TRUE), "ok");
test_equal ("b[1] | d[1]", XPath_TestNodeSet (state.doc, "b[1] | d[1]", 1, XPath_union_bd_first_expected, TRUE), "ok");
test_equal ("d[1] | b[1]", XPath_TestNodeSet (state.doc, "d[1] | b[1]", 1, XPath_union_bd_first_expected, TRUE), "ok");
test_equal ("c[1] | d[1]", XPath_TestNodeSet (state.doc, "c[1] | d[1]", 1, XPath_union_cd_first_expected, TRUE), "ok");
test_equal ("d[1] | c[1]", XPath_TestNodeSet (state.doc, "d[1] | c[1]", 1, XPath_union_cd_first_expected, TRUE), "ok");
test_equal ("a[1] | b[1] | c[1]", XPath_TestNodeSet (state.doc, "a[1] | b[1] | c[1]", 1, XPath_union_abc_first_expected, TRUE), "ok");
test_equal ("a[1] | b[1] | d[1]", XPath_TestNodeSet (state.doc, "a[1] | b[1] | d[1]", 1, XPath_union_abd_first_expected, TRUE), "ok");
test_equal ("a[1] | c[1] | d[1]", XPath_TestNodeSet (state.doc, "a[1] | c[1] | d[1]", 1, XPath_union_acd_first_expected, TRUE), "ok");
test_equal ("b[1] | c[1] | d[1]", XPath_TestNodeSet (state.doc, "b[1] | c[1] | d[1]", 1, XPath_union_bcd_first_expected, TRUE), "ok");
test_equal ("a[1] | b[1] | c[1] | d[1]", XPath_TestNodeSet (state.doc, "a[1] | b[1] | c[1] | d[1]", 1, XPath_union_abcd_first_expected, TRUE), "ok");
test_equal ("d[1] | c[1] | b[1] | a[1]", XPath_TestNodeSet (state.doc, "d[1] | c[1] | b[1] | a[1]", 1, XPath_union_abcd_first_expected, TRUE), "ok");
