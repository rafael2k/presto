group "XPath.pattern";

require init;
require XPATH_PATTERN_SUPPORT;
require undefined USE_HTML_PARSER_FOR_XML;

include "modules/xpath/xpath.h";
include "modules/xpath/src/xpsthelpers.h";

xml
{
  "<?xml version='1.0'?>"
  "<!DOCTYPE root>"
  "<root>"
    "<level1>"
      "<level2 attr2='attr2'>"
        "<level3 attr3='attr3-1'>text3-1<!-- comment3-1 --></level3>"
        "text2-1"
        "<!-- comment2-1 -->"
        "<?pi2-1 pi2-1?>"
        "<level3 attr3='attr3-2'>text3-2<!-- comment3-2 --></level3>"
        "text2-2"
        "<!-- comment2-2 -->"
        "<?pi2-2 pi2-2?>"
        "<level3 attr3='attr3-3'>text3-3<!-- comment3-3 --></level3>"
      "</level2>"
      "<level2 attr2='attr2'>"
        "<level3 attr3='attr3-1'>text3-1<!-- comment3-1 --></level3>"
        "text2-1"
        "<!-- comment2-1 -->"
        "<?pi2-1 pi2-1?>"
        "<level3 attr3='attr3-2'>text3-2<!-- comment3-2 --></level3>"
        "text2-2"
        "<!-- comment2-2 -->"
        "<?pi2-2 pi2-2?>"
        "<level3 attr3='attr3-3'>text3-3<!-- comment3-3 --></level3>"
      "</level2>"
    "</level1>"
  "</root>"
}

test_equal ("level1",
            XPath_TestPattern (state.doc, "level1", "//level1", TRUE),
            "ok");
test_equal ("level1",
            XPath_TestPattern (state.doc, "level1", "//level2", FALSE),
            "ok");
test_equal ("level2",
            XPath_TestPattern (state.doc, "level2", "//level2", TRUE),
            "ok");
test_equal ("level2",
            XPath_TestPattern (state.doc, "level2", "//level3", FALSE),
            "ok");
test_equal ("level3",
            XPath_TestPattern (state.doc, "level3", "//level3", TRUE),
            "ok");
test_equal ("level3",
            XPath_TestPattern (state.doc, "level3", "//text()", FALSE),
            "ok");

test_equal ("root/level1",
            XPath_TestPattern (state.doc, "root/level1", "//level1", TRUE),
            "ok");
test_equal ("root/level1",
            XPath_TestPattern (state.doc, "root/level1", "//level2", FALSE),
            "ok");
test_equal ("level1/level2",
            XPath_TestPattern (state.doc, "level1/level2", "//level2", TRUE),
            "ok");
test_equal ("level1/level2",
            XPath_TestPattern (state.doc, "level1/level2", "//level3", FALSE),
            "ok");
test_equal ("root//level2",
            XPath_TestPattern (state.doc, "root//level2", "//level2", TRUE),
            "ok");
test_equal ("root//level2",
            XPath_TestPattern (state.doc, "root//level2", "//level3", FALSE),
            "ok");

test_equal ("level2/level3",
            XPath_TestPattern (state.doc, "level2/level3", "//level3", TRUE),
            "ok");
test_equal ("level2/level3",
            XPath_TestPattern (state.doc, "level2/level3", "//level2", FALSE),
            "ok");
test_equal ("level1//level3",
            XPath_TestPattern (state.doc, "level1//level3", "//level3", TRUE),
            "ok");
test_equal ("level1//level3",
            XPath_TestPattern (state.doc, "level1//level3", "//level2", FALSE),
            "ok");
test_equal ("root//level3",
            XPath_TestPattern (state.doc, "root//level3", "//level3", TRUE),
            "ok");
test_equal ("root//level3",
            XPath_TestPattern (state.doc, "root//level3", "//level2", FALSE),
            "ok");
test_equal ("level1/level2/level3",
            XPath_TestPattern (state.doc, "level1/level2/level3", "//level3", TRUE),
            "ok");
test_equal ("level1/level2/level3",
            XPath_TestPattern (state.doc, "level1/level2/level3", "//level2", FALSE),
            "ok");
test_equal ("root//level2/level3",
            XPath_TestPattern (state.doc, "root//level2/level3", "//level3", TRUE),
            "ok");
test_equal ("root//level2/level3",
            XPath_TestPattern (state.doc, "root//level2/level3", "//level2", FALSE),
            "ok");
test_equal ("root/level1//level3",
            XPath_TestPattern (state.doc, "root/level1//level3", "//level3", TRUE),
            "ok");
test_equal ("root/level1//level3",
            XPath_TestPattern (state.doc, "root/level1//level3", "//level2", FALSE),
            "ok");

test_equal ("level3[1]",
            XPath_TestPattern (state.doc, "level3[1]", "//level3[1]", TRUE),
            "ok");
test_equal ("level3[1]",
            XPath_TestPattern (state.doc, "level3[1]", "//level3[2]", FALSE),
            "ok");
test_equal ("level3[2]",
            XPath_TestPattern (state.doc, "level3[2]", "//level3[2]", TRUE),
            "ok");
test_equal ("level3[2]",
            XPath_TestPattern (state.doc, "level3[2]", "//level3[1]", FALSE),
            "ok");
test_equal ("level3[3]",
            XPath_TestPattern (state.doc, "level3[3]", "//level3[3]", TRUE),
            "ok");
test_equal ("level3[3]",
            XPath_TestPattern (state.doc, "level3[3]", "//level3[2]", FALSE),
            "ok");
test_equal ("level3[last()]",
            XPath_TestPattern (state.doc, "level3[last()]", "//level3[last()]", TRUE),
            "ok");
test_equal ("level3[last()]",
            XPath_TestPattern (state.doc, "level3[last()]", "//level2[last()]", FALSE),
            "ok");

test_equal ("level3[@attr3='attr3-1']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-1']", "//level3[@attr3='attr3-1']", TRUE),
            "ok");
test_equal ("level3[@attr3='attr3-1']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-1']", "//level3[@attr3='attr3-2']", FALSE),
            "ok");
test_equal ("level3[@attr3='attr3-2']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-2']", "//level3[@attr3='attr3-2']", TRUE),
            "ok");
test_equal ("level3[@attr3='attr3-2']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-2']", "//level3[@attr3='attr3-3']", FALSE),
            "ok");
test_equal ("level3[@attr3='attr3-3']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-3']", "//level3[@attr3='attr3-3']", TRUE),
            "ok");
test_equal ("level3[@attr3='attr3-3']",
            XPath_TestPattern (state.doc, "level3[@attr3='attr3-3']", "//level3[@attr3='attr3-1']", FALSE),
            "ok");
