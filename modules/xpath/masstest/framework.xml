<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <script src="xpath.js"></script>
    <script><![CDATA[

      var running = null, progress = null, showErrors = null, errors = null, hidden = null, test = null, NS_HTML = "http://www.w3.org/1999/xhtml";

      function go ()
      {
        if (!running)
        {
          var divs = document.getElementsByTagNameNS (NS_HTML, "div");
          running = divs.item (0);
          progress = divs.item (1);
          showErrors = divs.item (2);
          errors = divs.item (3);
          hidden = divs.item (4);
        }

        if (!test)
          test = document.getElementsByTagNameNS (NS_HTML, "input").item (0);

        if (!test.value)
          test.focus ();
        else
        {
          running.textContent = "Starting tests...";
          progress.textContent = "";
          errors.textContent = "";

          var tests = test.value.split (",");

          docs = [];
          contextNodesCount = 0;
          testsCount = 0;
          resetProgress ();
          progressTotal = 0;
          failed = 0;
          timeStarted = 0;

          for (var index = 0; index < tests.length; ++index)
          {
            var iframe = document.createElementNS (NS_HTML, "iframe");
            iframe.setAttributeNS (null, "src", tests[index]);
            iframe.setAttributeNS (null, "width", "1");
            iframe.setAttributeNS (null, "height", "1");
            iframe.addEventListener ("load", (function (iframe, src) { return function () { XPathJS.startAutomaticTest (iframe.contentDocument, function () { reportStart.apply (this, Array.prototype.concat.apply ([src], arguments)); }, (function (reportProgress) { return function () { reportProgress (); }; }) (reportProgress), function () { reportError.apply (this, Array.prototype.concat.apply ([src], arguments)); }); }; }) (iframe, tests[index]), false);
            hidden.appendChild (iframe);
          }
        }
      }

      function abort ()
      {
        if (hidden)
          while (hidden.firstChild)
            hidden.removeChild (hidden.firstChild);
        if (progressUpdateId != null)
        {
          clearInterval (progressUpdateId);
          progressUpdateId = null;
        }
      }

      function initialize ()
      {
        if (!test)
          test = document.getElementsByTagNameNS (NS_HTML, "input").item (0);

        if (location.hash)
          test.value = location.hash.substr (1);

        go ();
      }

      var docs = [], contextNodesCount = 0, testsCount = 0, progressCurrent = 0, progressTotal = 0, failed = 0, timeStarted = 0, progressUpdateId = null;

      (function (scope)
       {
         var progressCurrent;

         scope.updateProgress = function (fromTimer)
         {
           var bar = "", finished = (progressCurrent / progressTotal) * 20;
           for (var index = 0; index < 20; ++index)
             if (finished <= index)
               bar += " ";
             else if (finished >= index + 1)
               bar += "=";
             else
               bar += ">";
           progress.textContent = progressCurrent + " [" + bar + "] " + progressTotal + (failed > 0 ? " (" + failed + " failed)" : "") + " TPS: " + /(\d+)(\.\d+)?/.exec ((progressCurrent / ((new Date).getTime () - timeStarted)) * 1000)[1];

           if (progressCurrent == progressTotal)
             if (progressUpdateId != null)
             {
               clearInterval (progressUpdateId);
               progressUpdateId = null;
             }
         }

         scope.reportProgress = function ()
         {
           ++progressCurrent;
         }

         scope.resetProgress = function ()
         {
           progressCurrent = 0;
         }
       }) (window);

      function reportStart (src, localContextNodesCount, localTestsCount, localProgressTotal)
      {
        docs.push (src);
        contextNodesCount += localContextNodesCount;
        testsCount += localTestsCount;
        progressTotal += localProgressTotal;

        if (timeStarted == 0)
          timeStarted = (new Date).getTime ();

        running.textContent = "Running " + testsCount + (testsCount > 1 ? " tests" : " test") + " from " + (docs.length > 1 ? docs.length + " documents " : "") + "with " + (contextNodesCount > 1 ? contextNodesCount + " different context nodes\n" : " a single context node\n") + docs.join ("\n");

        if (progressUpdateId == null)
          progressUpdateId = setInterval (updateProgress, 100);
      }

      function reportError (src, msg)
      {
        errors.appendChild (document.createTextNode (src + ": " + msg + "\n"));
        ++failed;
      }

      window.addEventListener ("load", initialize, false);
    ]]></script>
  </head>

  <body>
    <p>
      <input name="test"/><input type="button" value="Go" onclick="go ();"/><input type="button" value="Abort" onclick="abort ();"/>
    </p>
    <h3>Links</h3>
    <ul>
      <li><a href="javascript:test.value='axes/single.xml'; go ();">Single step path using each axis (29016 tests)</a></li>
      <li><a href="javascript:test.value='axes/ancestor.xml,axes/ancestor-or-self.xml,axes/attribute.xml,axes/child.xml,axes/descendant.xml,axes/descendant-or-self.xml,axes/following.xml,axes/following-sibling.xml,axes/namespace.xml,axes/parent.xml,axes/preceding.xml,axes/preceding-sibling.xml,axes/self.xml'; go ();">Each axis combined with (preceding or following) each other axis (825396 tests)</a></li>
      <li><a href="javascript:test.value='axes/ancestor.first.xml,axes/ancestor-or-self.first.xml,axes/attribute.first.xml,axes/child.first.xml,axes/descendant.first.xml,axes/descendant-or-self.first.xml,axes/following.first.xml,axes/following-sibling.first.xml,axes/namespace.first.xml,axes/parent.first.xml,axes/preceding.first.xml,axes/preceding-sibling.first.xml,axes/self.first.xml'; go ();">Each axis with [1] predicate combined with (preceding or following) each other axis (1650792 tests)</a></li>
      <li><a href="javascript:test.value='axes/ancestor.last.xml,axes/ancestor-or-self.last.xml,axes/attribute.last.xml,axes/child.last.xml,axes/descendant.last.xml,axes/descendant-or-self.last.xml,axes/following.last.xml,axes/following-sibling.last.xml,axes/namespace.last.xml,axes/parent.last.xml,axes/preceding.last.xml,axes/preceding-sibling.last.xml,axes/self.last.xml'; go ();">Each axis with [last()] predicate combined with (preceding or following) each other axis (1650792 tests)</a></li>
      <li><a href="javascript:test.value='axes/ancestor.middle.xml,axes/ancestor-or-self.middle.xml,axes/attribute.middle.xml,axes/child.middle.xml,axes/descendant.middle.xml,axes/descendant-or-self.middle.xml,axes/following.middle.xml,axes/following-sibling.middle.xml,axes/namespace.middle.xml,axes/parent.middle.xml,axes/preceding.middle.xml,axes/preceding-sibling.middle.xml,axes/self.middle.xml'; go ();">Each axis with [position()&gt;=(last() div 2)-2 or position()&lt;=(last() div 2)+2] predicate combined with (preceding or following) each other axis (1650792 tests)</a></li>
      <li><a href="javascript:test.value='nodetests/comment.xml,nodetests/text.xml,nodetests/processing-instruction.xml,nodetests/name.xml,nodetests/has-attribute.xml,nodetests/has-attribute-value.xml'; go ();">Different types of nodetests used with each type of axis (5333328 tests)</a></li>
      <li><a href="javascript:test.value='functions/id.xml,functions/name.xml,functions/local-name.xml,functions/namespace-uri.xml'; go ();">Functions (41898 tests)</a></li>
      <li><a href="javascript:test.value='axes/single.xml,axes/ancestor.xml,axes/ancestor-or-self.xml,axes/attribute.xml,axes/child.xml,axes/descendant.xml,axes/descendant-or-self.xml,axes/following.xml,axes/following-sibling.xml,axes/namespace.xml,axes/parent.xml,axes/preceding.xml,axes/preceding-sibling.xml,axes/self.xml,axes/ancestor.first.xml,axes/ancestor-or-self.first.xml,axes/attribute.first.xml,axes/child.first.xml,axes/descendant.first.xml,axes/descendant-or-self.first.xml,axes/following.first.xml,axes/following-sibling.first.xml,axes/namespace.first.xml,axes/parent.first.xml,axes/preceding.first.xml,axes/preceding-sibling.first.xml,axes/self.first.xml,axes/ancestor.last.xml,axes/ancestor-or-self.last.xml,axes/attribute.last.xml,axes/child.last.xml,axes/descendant.last.xml,axes/descendant-or-self.last.xml,axes/following.last.xml,axes/following-sibling.last.xml,axes/namespace.last.xml,axes/parent.last.xml,axes/preceding.last.xml,axes/preceding-sibling.last.xml,axes/self.last.xml,axes/ancestor.middle.xml,axes/ancestor-or-self.middle.xml,axes/attribute.middle.xml,axes/child.middle.xml,axes/descendant.middle.xml,axes/descendant-or-self.middle.xml,axes/following.middle.xml,axes/following-sibling.middle.xml,axes/namespace.middle.xml,axes/parent.middle.xml,axes/preceding.middle.xml,axes/preceding-sibling.middle.xml,axes/self.middle.xml,nodetests/comment.xml,nodetests/text.xml,nodetests/processing-instruction.xml,nodetests/name.xml,nodetests/has-attribute.xml,nodetests/has-attribute-value.xml,functions/id.xml,functions/name.xml,functions/local-name.xml,functions/namespace-uri.xml'; go ();">All of the above (5851416 tests)</a></li>
    </ul>
    <div style="white-space: pre; font-family: monospace"/>
    <div style="white-space: pre; font-family: monospace"/>
    <div><a href="javascript:void (0);" onclick="this.parentNode.style.display='none'; this.parentNode.nextSibling.style.display='block';">Show errors</a></div><div style="white-space: pre; font-family: monospace; margin-top: 10px; font-size: small; display: none"/>
    <div style="visibility: hidden"/>
  </body>
</html>
