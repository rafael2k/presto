group "XMLUtils.XMLFragment.encoding";
require init;
require XMLUTILS_XMLFRAGMENT_SUPPORT;

include "modules/xmlutils/xmlfragment.h";
include "modules/xmlutils/xmlnames.h";
include "modules/xmlutils/xmlserializer.h";
include "modules/util/adt/bytebuffer.h";
include "modules/encodings/decoders/utf8-decoder.h";
include "modules/encodings/decoders/iso-8859-1-decoder.h";

test("XMLFragment encoding #1")
{
  XMLFragment fragment;
  char *data = NULL;

  verify(fragment.AddText(UNI_L("element"), UNI_L("\x1234\x2345\x3456")) == OpStatus::OK);

  ByteBuffer bytebuffer;

  verify(fragment.GetEncodedXML(bytebuffer, FALSE) ==  OpStatus::OK);
  verify(bytebuffer.Length() == 28);

  data = bytebuffer.Copy();

  verify(data);
  verify(op_memcmp(data, "<element>\xe1\x88\xb4\xe2\x8d\x85\xe3\x91\x96</element>", 28) == 0);

  UTF8toUTF16Converter converter;

  TempBuffer buffer;
  verify(buffer.Expand(23) == OpStatus::OK);
  uni_char *target = buffer.GetStorage();

  int read, written = converter.Convert(data, 28, target, 44, &read);

  verify(written == 44);

  target[22] = 0;

  verify(uni_str_eq(target, UNI_L("<element>\x1234\x2345\x3456</element>")));
}
finally
{
  OP_DELETEA(data);
}

test("XMLFragment encoding #2")
{
  XMLFragment fragment;
  char *data = NULL;

  verify(fragment.AddText(UNI_L("element"), UNI_L("\x1234\x2345\x3456")) == OpStatus::OK);

  ByteBuffer bytebuffer;

  verify(fragment.GetEncodedXML(bytebuffer, FALSE, "ISO-8859-1") ==  OpStatus::OK);
  verify(bytebuffer.Length() == 43);

  data = bytebuffer.Copy();

  verify(data);
  verify(op_memcmp(data, "<element>&#x1234;&#x2345;&#x3456;</element>", 43) == 0);
}
finally
{
  OP_DELETEA(data);
}

test("XMLFragment encoding #3")
{
  XMLFragment fragment;

  verify(fragment.AddText(UNI_L("element"), UNI_L("\x05")) == OpStatus::OK);

  ByteBuffer bytebuffer;

  verify(fragment.GetEncodedXML(bytebuffer, FALSE, "UTF-8") ==  OpStatus::ERR);
}

test("XMLFragment encoding #4")
{
  XMLFragment fragment;

  verify(fragment.OpenElement(UNI_L("x")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);
  verify(fragment.AddText(UNI_L("\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6\xf6")) == OpStatus::OK);

  ByteBuffer bytebuffer;

  verify(fragment.GetEncodedXML(bytebuffer, FALSE, "UTF-8") ==  OpStatus::OK);
}
