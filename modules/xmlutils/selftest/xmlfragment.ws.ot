group "XMLUtils.XMLFragment.whitespace";
require init;
require XMLUTILS_XMLFRAGMENT_SUPPORT;

include "modules/xmlutils/xmlfragment.h";
include "modules/xmlutils/xmlnames.h";

test("XMLFragment whitespace #1")
{
  XMLFragment fragment;
  TempBuffer buffer;

  verify(fragment.Parse(UNI_L(#string "input/input03.xml")) == OpStatus::OK);

  verify(fragment.EnterElement(UNI_L("root")));

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("Whitespace in this text might be preserved, or it might not be.")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("Whitespace in this text should always be stripped.")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("\xa    Whitespace  in   this\xa\xa    text \x9should\x9  \x9\x61lways be\xa\xa    preserved.\xa  ")));
}

test("XMLFragment whitespace #2")
{
  /* Like #1, but sets default whitespace handling to the expected
     default value.  Results should be the same as in #1. */

  XMLFragment fragment;
  TempBuffer buffer;

  fragment.SetDefaultWhitespaceHandling(XMLWHITESPACEHANDLING_DEFAULT);

  verify(fragment.Parse(UNI_L(#string "input/input03.xml")) == OpStatus::OK);

  verify(fragment.EnterElement(UNI_L("root")));

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("Whitespace in this text might be preserved, or it might not be.")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("Whitespace in this text should always be stripped.")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("\xa    Whitespace  in   this\xa\xa    text \x9should\x9  \x9\x61lways be\xa\xa    preserved.\xa  ")));
}

test("XMLFragment whitespace #3")
{
  XMLFragment fragment;
  TempBuffer buffer;

  fragment.SetDefaultWhitespaceHandling(XMLWHITESPACEHANDLING_PRESERVE);

  verify(fragment.Parse(UNI_L(#string "input/input03.xml")) == OpStatus::OK);

  verify(fragment.EnterElement(UNI_L("root")));

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("\xa    Whitespace  in   this\xa\xa    text \x9might be preserved, or \x9it might not be.\xa  ")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("Whitespace in this text should always be stripped.")));

  buffer.Clear();

  verify(fragment.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("\xa    Whitespace  in   this\xa\xa    text \x9should\x9  \x9\x61lways be\xa\xa    preserved.\xa  ")));
}

test("XMLFragment whitespace #4")
{
  XMLFragment fragment1;

  verify(fragment1.AddText(UNI_L("element"), UNI_L("\xa  This\x9text\x9should\x9\x62\x65\x9stripped!  \xa"), ~0u) == OpStatus::OK);

  TempBuffer buffer;

  verify(fragment1.GetXML(buffer, FALSE) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("<element>This text should be stripped!</element>")));

  XMLFragment fragment2;

  verify(fragment2.Parse(buffer.GetStorage()) == OpStatus::OK);

  buffer.Clear();

  verify(fragment2.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("This text should be stripped!")));
}

test("XMLFragment whitespace #5")
{
  XMLFragment fragment1;

  verify(fragment1.AddText(UNI_L("element"), UNI_L("\xa  This\x9text\x9should\x9\x62\x65\x9stripped!  \xa"), ~0u, XMLWHITESPACEHANDLING_DEFAULT) == OpStatus::OK);

  TempBuffer buffer;

  verify(fragment1.GetXML(buffer, FALSE) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("<element>This text should be stripped!</element>")));

  XMLFragment fragment2;

  verify(fragment2.Parse(buffer.GetStorage()) == OpStatus::OK);

  buffer.Clear();

  verify(fragment2.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("This text should be stripped!")));
}

test("XMLFragment whitespace #6")
{
  XMLFragment fragment1;

  verify(fragment1.AddText(UNI_L("element"), UNI_L("\xa  This\x9text\x9should\x9not\x9\x62\x65\x9stripped!  \xa"), ~0u, XMLWHITESPACEHANDLING_PRESERVE) == OpStatus::OK);

  TempBuffer buffer;

  verify(fragment1.GetXML(buffer, FALSE) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("<element xml:space=\"preserve\">\xa  This\x9text\x9should\x9not\x9\x62\x65\x9stripped!  \xa</element>")));

  XMLFragment fragment2;

  verify(fragment2.Parse(buffer.GetStorage()) == OpStatus::OK);

  buffer.Clear();

  verify(fragment2.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("\xa  This\x9text\x9should\x9not\x9\x62\x65\x9stripped!  \xa")));
}

test("XMLFragment whitespace #7")
{
  XMLFragment fragment1;

  verify(fragment1.AddText(UNI_L("element"), UNI_L("text"), ~0u, XMLWHITESPACEHANDLING_PRESERVE) == OpStatus::OK);
  verify(fragment1.AddText(UNI_L("element"), UNI_L("    "), ~0u, XMLWHITESPACEHANDLING_PRESERVE) == OpStatus::OK);

  TempBuffer buffer;

  verify(fragment1.GetXML(buffer, FALSE, NULL) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("<element xml:space=\"preserve\">text</element><element xml:space=\"preserve\">    </element>")));

  XMLFragment fragment2;

  verify(fragment2.Parse(buffer.GetStorage()) == OpStatus::OK);

  buffer.Clear();

  verify(fragment2.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("text")));

  buffer.Clear();

  verify(fragment2.GetAllText(buffer, UNI_L("element")) == OpStatus::OK);
  verify(buffer.GetStorage() != NULL);
  verify(uni_str_eq(buffer.GetStorage(), UNI_L("    ")));
}
