TWEAK_MDEFONT_FREETYPE_FONTENGINE			emil

	Should mdf use the backend for the freetype font engine?
	This font engine supports the following formats:
		* TrueType fonts (and collections)
		* Type 1 fonts
		* CID-keyed Type 1 fonts
		* CFF fonts
		* OpenType fonts (both TrueType and CFF variants)
		* SFNT-based bitmap fonts
		* X11 PCF fonts (See TWEAK_MDEFONT_FREETYPE_PCF_FONT_SUPPORT)
		* Windows FNT fonts
		* BDF fonts (including anti-aliased ones)
		* PFR fonts
		* Type 42 fonts (limited support)

	Define    : MDF_FREETYPE_SUPPORT
	Depends on: API_MDEFONT
	Category  : setting
	Conflicts with: TWEAK_MDEFONT_ITYPE_FONTENGINE

TWEAK_MDEFONT_ITYPE_FONTENGINE			johan_e

	Should mdf use the backend for the iType font engine?
	This font engine supports the following formats:
		* TrueType fonts (.ttf or .otf extension)
		* TrueType collections (.ttc extension)
		* Agfa Monotype Stroke-Based fonts (.stf or .ccc extension)
		* Asian Compression for TrueType (ACT) fonts (.ac3, .a3a, .a3b, .a3c, or .a3d extension)
	Note: LICENCE REQUIRED!

	Define    : MDF_AGFA_SUPPORT
	Depends on: FEATURE_3P_ITYPE_ENGINE
	Category  : setting
	Conflicts with: TWEAK_MDEFONT_FREETYPE_FONTENGINE

TWEAK_MDEFONT_ITYPE_WTLE_TEXT_SHAPING		landell

	Should the iType font engine make use of the World Type Layout Engine
	for text shaping.
	This layout engine supports shaping of a lot of scripts.
	This requires a patched version of WTLE for performance optimizations.
	Note: LICENCE REQUIRED! NOT the same license as for TWEAK_MDEFONT_ITYPE_FONTENGINE!

	Define		: MDF_AGFA_WTLE_SUPPORT
	Depends on	: FEATURE_3P_ITYPE_ENGINE, TWEAK_MDEFONT_ITYPE_FONTENGINE
	Category	: workaround
	Enabled for : none
	Disabled for: desktop, smartphone, tv, minimal

TWEAK_MDEFONT_USE_ONLY_LIMITED_FONT_SIZE_SET	wonko

	Only allow certain font sizes. This can be used to emulate bitmap
	fonts while still using scalable fonts. Only the font sizes set
	in TWEAK_MDEFONT_LIMITED_FONT_SIZE_SET will be used, so whenever
	a font is loaded, the closest match in size from the requested
	size to the given set is used.

	Define		: USE_ONLY_LIMITED_FONT_SIZE_SET
	Depends on	: API_MDEFONT
	Category	: workaround
	Enabled for	: 
	Disabled for	: desktop, smartphone, tv, minimal, mini

TWEAK_MDEFONT_LIMITED_FONT_SIZE_SET				wonko

	The list of font sizes to use when TWEAK_MDEFONT_USE_ONLY_LIMITED_FONT_SIZE_SET
	is turned on.

	Define		: LIMITED_FONT_SIZE_SET
	Value		: { 8, 10, 12, 16, 24 }
	Depends on	: TWEAK_MDEFONT_USE_ONLY_LIMITED_FONT_SIZE_SET
	Category	: setting

TWEAK_MDEFONT_FREETYPE_ALWAYS_RENDER		timj

	This tweak will force the freetype font implementation to always
	render the glyphs, even if they are only used for string width.
	If this tweak is not enabled the glyph will be loaded without
	rendering when calculating string width. As a result of this the 
	visible glyphs will be loaded twise, once without rendering and 
	once with.

	Define		: MDF_FREETYPE_ALWAYS_RENDER
	Depends on	: TWEAK_MDEFONT_FREETYPE_FONTENGINE
	Category	: setting
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_MDEFONT_FREETYPE_USE_LIGHT_AUTOHINTER	  wonko

	enables freetype's light auto-hinting mode - less hinting
	yields blurrier glyphs but produce better shapes. for more
	information, see freetype's documentation.

	Define		: MDF_FT_USE_LIGHT_AUTOHINTER
	Depends on	: TWEAK_MDEFONT_FREETYPE_FONTENGINE
	Category	: setting
	Enabled for	: none
	Disabled for	: desktop, smartphone, tv, minimal, mini

TWEAK_MDEFONT_FREETYPE_PCF_FONT_SUPPORT      landell
	Should support for PCF fonts be enabled?
	Freetype supports PCF bitmap fonts but does not give accurate data for
	font metrics and unicode blocks. This tweak enables extraction of
	such data.

	Define      : MDF_FREETYPE_PCF_FONT_SUPPORT
	Depends on  : TWEAK_MDEFONT_FREETYPE_FONTENGINE
	category    : workaround
	Enabled for : none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_MDEFONT_FREETYPE_SLANT_FACTOR			wonko
	Slanting is made for scalable fonts for which an italic version
	does not exist. The amount of slant applied can be controlled
	with this tweak. The value is in 16.16 fixpoint.

	Define		: MDF_FT_SLANT_FACTOR
	Value		: (1 << 14)
	Disabled for    : desktop, smartphone, tv, minimal, mini
	Depends on	: TWEAK_MDEFONT_FREETYPE_FONTENGINE
	category	: setting

TWEAK_MDEFONT_FONT_FACE_CACHE_SIZE 	   	      		wonko

	the number of fonts to hold in the font face cache. with a
	larger cache, font faces don't have to be loaded as often, but
	the memory usage will increase.

	Category		: memory, performance
	Define	      		: MDF_FONT_FACE_CACHE_SIZE
	Depends on		: API_MDEFONT
	Value			: 10
	Value for desktop	: 20
	Value for tv		: 12
	Value for smartphone	: 10
	Value for minimal	: 2
	Disabled for		: mini

TWEAK_MDEFONT_CODEPAGES_FROM_OS2_TABLE				wonko

	get codepage support from font (e.g. OS/2 table). font engines
	that support fetching fonts' codepage support should enable
	this tweak and set m_codepages correspondingly in
	implementation of MDF_FontEngine::GetFontInfo. m_codepages is
	a 64-bit mask (represented as 2 UINT32s), and correspond to
	ulCodePageRange[1,2] in the OS/2 opentype table. see
	documentation of opentype OS/2 table for meaning of individual
	bits.
	the codepage support is used by opera's font switching
	functionality.

	category	: setting
	Define		: MDF_CODEPAGES_FROM_OS2_TABLE
	Depends on	: API_MDEFONT
	Conflicts with	: 
	Enabled for	: desktop, smartphone, tv
	Disabled for	: minimal, mini

TWEAK_MDEFONT_FONT_ADVANCE_CACHE					wonko

	Keep a bigger cache for glyph advances only. No rasterization
	data is stored, just the advances, which will speed up text
	measuring (but not text rendering). This in turn might help
	speed up layout of big pages containing lots of different
	characters.

	Category	      : memory, performance
	Define		      : MDF_FONT_ADVANCE_CACHE
        Depends on	      : API_MDEFONT
	Enabled for	      : desktop, smartphone, tv
	Disabled for	      : minimal, mini

TWEAK_MDEFONT_ADVANCE_CACHE_SIZE		wonko

	Number of advances stored in the advance cache.
	Should not be smaller than glyph cache size

	size considerations:
	* jouyou kanji - 1956 (from 2010)
	* china - some ministry of education or whatnot in taiwan has
	  published a list of 4808 standardized (traditional) chinese
	  characters
	~1000 glyphs seems reasonable for CJK

	Category		  : memory, performance
	Define 	  	   	  : MDF_ADVANCE_CACHE_SIZE
	Depends on		  : TWEAK_MDEFONT_FONT_ADVANCE_CACHE
	Value			  : 1024
	Disabled for		  : desktop, smartphone, tv, minimal

TWEAK_MDEFONT_ADVANCE_CACHE_HASH_SIZE	wonko

	Number of buckets in the advance cache.
	should be *prime*, and probably not smaller than (commonly
	used part of) ascii range

	See TWEAK_MDEFONT_FONT_ADVANCE_CACHE for more info

	Category		  : memory, performance
	Define 	  	   	  : MDF_ADVANCE_CACHE_HASH_SIZE
	Depends on		  : TWEAK_MDEFONT_FONT_ADVANCE_CACHE
	Value			  : 257
	Disabled for		  : desktop, smartphone, tv, minimal

TWEAK_MDEFONT_GLYPH_CACHE_SIZE			dblizniak

	Number of glyphs which are going to be cached in memory. 100
	is a good (maybe large) number for western web pages. 400+ is
	good for asian languages.  Glyph Cache Size shouldn't be
	bigger than the advance cache size.
	NOTE it should be RAM size limited instead of num glyphs.

	Define	      	 	: MDF_GLYPH_CACHE_SIZE
	Depends on	      	: MDF_FONT_GLYPH_CACHE
	Value			: 100
	Disabled for		: desktop, smartphone, tv, minimal, mini
	Category	      	: memory, performance

TWEAK_MDEFONT_GLYPH_CACHE_HASH_SIZE			dblizniak

	The size of hashtable for glyphs - should be *prime*.
	See TWEAK_MDEFONT_GLYPH_CACHE_SIZE for more info

	Define	      	  	: MDF_GLYPH_CACHE_HASH_SIZE
	Depends on	      	: MDF_FONT_GLYPH_CACHE
	Value			: 101
	Disabled for		: desktop, smartphone, tv, minimal, mini
	Category	      	: memory, performance

TWEAK_MDEFONT_OPENTYPE_SUPPORT				wonko

	Enables support for opentype font tables. OpenType is a font
	format that provides additional information of advanced
	typographical features such as ligature substitution, and
	context-sensitive glyph placement.

	Define	      : MDF_OPENTYPE_SUPPORT
	Depends on    : API_MDEFONT
	Conflicts with: MDF_AGFA_WTLE_SUPPORT
	Category      : setting
	Enabled for   : desktop, smartphone, tv
	Disabled for  : minimal, mini

TWEAK_MDEFONT_OPENTYPE_CACHE_SIZE			wonko

	Controlls the number of OTHandlers the system keeps in
	memory. Whenever OpenType is needed to draw a string properly
	(eg for indic scripts) a handler is needed. Each font (for
	which OpenType drawing is used) will need its own handler.

	Define	     	     : OPENTYPE_CACHE_SIZE
	Value	     	     : 5
	Value for desktop    : 10
	Value for smartphone : 6
	Value for tv	     : 4
	Value for minimal    : 1
	Depends on	     : TWEAK_MDEFONT_OPENTYPE_SUPPORT
	Category	     : memory, performance

TWEAK_MDEFONT_APPLY_KERNING				wonko

	Controlls whether or not kerning should be applied to
	text. Kerning adds more or less space between defined glyph
	pairs, making sequences such as WA look better. The downside
	to kerning is that it requires looking up glyph id:s when
	measuring and drawing text, which is somewhat expensive.

	Define	      	      : MDF_KERNING
	Depends on	      : API_MDEFONT
	Category	      : setting
	Enabled for	      : none
	Disabled for	      : desktop, smartphone, tv, minimal, mini
