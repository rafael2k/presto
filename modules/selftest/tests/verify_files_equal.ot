/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright 2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "selftest.verify_files_equal";
require init;

include "modules/doc/frm_doc.h";
include "modules/ecmascript/ecmascript.h";

test("verify_files_equal: equal")
	file uni filename1 "test_file_1.bin";
	file uni filename2 "test_file_1_copy.bin";
	file uni filename3 "test_file_4.bin";
	file uni filename4 "test_file_4_copy.bin";
{
	verify_files_equal(filename1, filename2);
	verify_files_equal(filename3, filename4);
}

test("verify_files_equal: not equal") fails;
	file uni filename1 "test_file_1.bin";
	file uni filename2 "test_file_2.bin";
{
	verify_files_equal(filename1, filename2);
}

test("verify_files_equal: same size, not equal") fails;
	file uni filename1 "test_file_1.bin";
	file uni filename2 "test_file_3.bin";
{
	verify_files_equal(filename1, filename2);
}

test("verify_files_equal: large, same size, not equal") fails;
	file uni filename1 "test_file_4.bin";
	file uni filename2 "test_file_5.bin";
{
	verify_files_equal(filename1, filename2);
}

test("Helper: add files to EcmaScript runtime")
	file uni filename1 "test_file_1.bin";
	file uni filename2 "test_file_1_copy.bin";
{
	state.doc->ConstructDOMEnvironment();
	ES_Runtime* rt = state.doc->GetESRuntime();
	ES_Object* global_object = rt->GetGlobalObjectAsPlainObject();
	ES_Value val;
	val.type = VALUE_STRING;
	val.value.string = filename1;
	rt->PutName(global_object, UNI_L("filename1"), val);
	val.value.string = filename2;
	rt->PutName(global_object, UNI_L("filename2"), val);
}

test("verify_files_equal (EcmaScript): equal")
	language ecmascript;
{
	verify_files_equal(filename1, filename2);
}
