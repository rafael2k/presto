# Tweaks for the selftest module

TWEAK_ST_NUM_TEMP_BUFFERS	marcusc

	Number of temporary buffers used ST_up, ST_down etc. 3 works fine for now. Might
	be increased if overwriting of buffers becomes a problem.

	Category: setting
	Define: ST_NUM_TEMP_BUFFERS
	Depends on: nothing
	Value: 3
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_OVERRIDE_SELTEST_OUTPUT    danielb

	Makes selftests redirect the output to OperaSelftestDispatcher
	if it is running. This is used by core-gogi to display the output
	in the UI when using the opera:selftest page.

	Category: setting
	Define: OVERRIDE_SELFTEST_OUTPUT
	Depends on: nothing
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_API_EXPORT					peter

	The macro SELFTESTAPI is prepended to the symbols necessary to make the
	external API of selftest visible. This is used by the Linux SDK, which
	compiles with -fvisibility=hidden to produce an optimised shared object,
	but still want these symbols to be visible.

	For GCC, use: __attribute__ ((visibility("default")))

	Category: performance
	Depends on: FEATURE_SELFTEST
	Define: SELFTESTAPI
	Value: /*nothing*/
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_DEMENTED             eddy

	Enable self-tests (generally in debug-related modules, seeking to check
	that debug code does trigger when it should) which, by design, violate
	APIs in ways apt to cause crashes or other misbehaviour in any tests
	unfortunate enough to be run in the aftermath.  Tests which deliberately
	perform such demented things should require ST_DEMENTED; and be
	accompanied by a comment explaining why the test exists and what's so
	dangerous about it.

	Define: ST_DEMENTED
	Category: setting
	Depends on: FEATURE_SELFTEST
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_SKIP_KNOWN_CRASHERS            eddy

	Disable self-tests known to lead to crashes, on any profile, when all
	modules' selftests are run end-to-end in a single simple --test run.
	Such tests should require undefined ST_SKIP_KNOWN_CRASHERS; and be
	accompanied by a comment indicating the bug report for the crasher.

	This tweak should be disabled for core, so that the crashing tests get
	dealt with by core but project teams can still run selftests sensibly.

	Define: ST_SKIP_KNOWN_CRASHERS
	Category: workaround
	Depends on: FEATURE_SELFTEST
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_SKIP_KNOWN_FAILURES            eddy

	Disable self-tests known to fail, on any profile, when all modules'
	selftests are run end-to-end in a single simple --test run. Such tests
	should require undefined ST_SKIP_KNOWN_FAILURES; and be accompanied
	by a comment indicating the bug report for the failure.

	This tweak should be disabled for core, so that the failing tests get
	dealt with by core but project teams can still detect where they've got
	failures that weren't present in the core release they're using.

	Define: ST_SKIP_KNOWN_FAILURES
	Category: workaround
	Depends on: FEATURE_SELFTEST
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ST_SKIP_KNOWN_ASSERTS         eddy

	Disable self-tests known to cause assertion failures, on any profile,
	when all modules' selftests are run end-to-end in a single simple --test
	run. Such tests should require undefined ST_SKIP_KNOWN_ASSERTS; and
	be accompanied by a comment indicating the bug report for the failure.

	This tweak should be disabled for core, so that the assertion failures get
	dealt with by core but project teams can still detect where they've got
	assertion failures that weren't present in the core release they're using.

	Define: ST_SKIP_KNOWN_ASSERTS
	Category: workaround
	Depends on: FEATURE_SELFTEST
	Disabled for: desktop, smartphone, tv, minimal, mini
