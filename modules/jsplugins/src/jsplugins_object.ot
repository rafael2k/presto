/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (c) 1995-2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "jsplugins.object.static";

require init;
require JS_PLUGIN_SUPPORT;
require STATIC_JSPLUGINS;

include "modules/jsplugins/jsplugin.h";
include "modules/jsplugins/src/js_plugin_manager.h";
include "modules/jsplugins/src/js_plugin_context.h";
include "modules/jsplugins/src/js_plugin_object.h";
include "modules/jsplugins/src/jsplugins_selftest.h";
include "modules/dochand/win.h";

global
{
}

setup
{
	// Create a security domain that allows everything
	JS_Plugin_SecurityDomain *sec_dom = OP_NEW(JS_Plugin_SecurityDomain, ());
	sec_dom->ConstructCallback();
	g_jsPluginManager->AllowPluginFrom("JSP_Selftests", sec_dom);
	// Add selftest plugin
	g_jsPluginManager->AddStaticPlugin("JSP_Selftests", &jsp::capabilities);
	// Clear selftest data
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	// Raise the current window if possible
	state.window->Raise();
}

html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest'></object>"
	"</body>"
	"</html>"
}

test("Instantiated through OBJECT tag")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLE_OBJECT_CALLED) != 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLED_MIME_TYPE) != 0);
}

test("TV callback not supported")
	require undefined JS_PLUGIN_ATVEF_VISUAL;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_VISUAL_SUPPORTED) == 0);
}

test("TV callback supported")
	require defined JS_PLUGIN_ATVEF_VISUAL;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_VISUAL_SUPPORTED) != 0);
}

test("Need a visible window to test callbacks")
	require success "TV callback supported";
	disabled; // This seems to fail randomly
{
	// We must have a visible window to be able to test these, otherwise
	// we (correctly) do not get any callbacks.
	// This will fail if -nowindow is used, among others.
	verify(state.window->IsVisibleOnScreen());
}

test("TV callbacks were called")
	require success "TV callback supported";
	require success "Need a visible window to test callbacks";
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_BECOME_VISIBLE_CALLED) != 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_POSITION_CALLED) != 0);
}

test("CORE-33151: unloading = FALSE passed to TV callback")
	require success "TV callbacks were called";
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_UNLOADED) == 0);
}

test("CORE-33151: Unload page with a plugin")
	require success "CORE-33151: unloading = FALSE passed to TV callback";
	language ecmascript;
{
	document.location.href = "opera:about";
}

test("CORE-33151: unloading = TRUE passed to TV callback")
	require success "CORE-33151: Unload page with a plugin";
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_UNLOADED) != 0);
}

test("HBB-70: Set up, part 1")
	require success "CORE-33151: Unload page with a plugin";
{
	// Clear selftest data
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
}

test("HBB-70: Set up, part 2")
	require success "CORE-33151: Unload page with a plugin";
	language ecmascript;
{
	/* NOTE: You might get a DOM assertion here, stating that we are running
	 * scripts in a non-scriptable document. According to Jens L, this is an
	 * issue with selftest itself: "When the assert fails, the selftest
	 * system is trying to start an ecmascript test in the opera:about
	 * document that an earlier test loaded."
	 */
	history.go(-1);
}

test("TV callbacks called on history navigation")
	require success "HBB-70: Set up, part 2";
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_BECOME_VISIBLE_CALLED) != 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_POSITION_CALLED) != 0);
}

test("Setup non-visual test")
{
	// Clear selftest data
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLE_OBJECT_CALLED) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLED_MIME_TYPE) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_BECOME_VISIBLE_CALLED) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_POSITION_CALLED) == 0);
}

html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest2'></object>"
	"</body>"
	"</html>"
}

test("Non-visual: Instantiated through OBJECT tag")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLE_OBJECT_CALLED) != 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_HANDLED_MIME_TYPE) != 0);
}

test("Non-visual: TV callbacks were not called")
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_BECOME_VISIBLE_CALLED) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_TV_POSITION_CALLED) == 0);
}

exit
{
	g_jsPluginManager->RemoveStaticPlugin("JSP_Selftests");
}
