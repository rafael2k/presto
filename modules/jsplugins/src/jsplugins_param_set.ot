/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (c) 1995-2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "jsplugins.object.param_set";

require init;
require JS_PLUGIN_SUPPORT;
require STATIC_JSPLUGINS;

include "modules/jsplugins/src/js_plugin_manager.h";
include "modules/jsplugins/src/jsplugins_selftest.h";

setup
{
	// Create a security domain that allows everything
	JS_Plugin_SecurityDomain *sec_dom = OP_NEW(JS_Plugin_SecurityDomain, ());
	sec_dom->ConstructCallback();
	g_jsPluginManager->AllowPluginFrom("JSP_Selftests", sec_dom);
	// Add selftest plugin
	g_jsPluginManager->AddStaticPlugin("JSP_Selftests", &jsp::capabilities);
	// Clear selftest data
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	jsp::reset_param_set_test_data();
}


html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest.param.listener' id='testobj'></object>"
	"</body>"
	"</html>"
}


test("Test param set listener supported")
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_SUPPORTED) != 0);
}


test("Setting up")
	language ecmascript;
{
	var testobj = document.getElementById('testobj');
	var param = document.createElement('param');
	param.setAttribute('name','aname');
	param.setAttribute('value','avalue');
	testobj.appendChild(param);
}


test("Test param set listener called at added param")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) != 0);
	verify(jsp::get_latest_param_set_name().Compare("aname") == 0);
	verify(jsp::get_latest_param_set_value().Compare("avalue") == 0);
}


test("Reset all test data")
	language c++;
{
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	jsp::reset_param_set_test_data();
}


html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest.param.listener' id='testobj'>"
	  "<param name='testparam_name' value='testparam_value'/>"
	"</object>"
	"</body>"
	"</html>"
}


test("Test param set listener called at embedded param")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) != 0);
	verify(jsp::get_latest_param_set_name().Compare("testparam_name") == 0);
	verify(jsp::get_latest_param_set_value().Compare("testparam_value") == 0);

	// reset flags
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
}


test("Setting up")
	language ecmascript;
{
	var params = document.getElementsByTagName('param');
	verify(params.length == 1);
	params[0].value = 'other_value';
}


test("Test param set listener called at updated value")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) != 0);

	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_NAME_UPDATED) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_VALUE_UPDATED) != 0);

	verify(jsp::get_latest_param_set_name().Compare("testparam_name") == 0);
	verify(jsp::get_latest_param_set_value().Compare("other_value") == 0);

	// reset flags
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
}


test("Setting up")
	language ecmascript;
{
	var params = document.getElementsByTagName('param');
	verify(params.length == 1);
	params[0].name = 'other_name';
}


test("Test param set listener called at updated name")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) != 0);

	// first called with value NULL on old name
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_VALUE_NULL) != 0);

	// then called with new name and value
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_NAME_UPDATED) != 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_VALUE_UPDATED) != 0);
	verify(jsp::get_latest_param_set_name().Compare("other_name") == 0);
	verify(jsp::get_latest_param_set_value().Compare("other_value") == 0);

	// reset flags
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
}


test("Setting up")
	language ecmascript;
{
	var params = document.getElementsByTagName('param');
	verify(params.length == 1);
	params[0].parentNode.removeChild(params[0]);
}


test("Test param set listener called with null when removed")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) != 0);

	// called with value NULL on old name
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_NAME_UPDATED) == 0);
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_VALUE_NULL) != 0);
	verify(jsp::get_latest_param_set_name().Compare("other_name") == 0);
	verify(jsp::get_latest_param_set_value().IsEmpty());
}


test("Reset all test data")
	language c++;
{
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	jsp::reset_param_set_test_data();
}


html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest.param.listener' id='testobj'>"
	  "<param name='first' value='value1'/>"
	  "<param name='second' value='value2'/>"
	  "<param name='third' value='value3'/>"
	"</object>"
	"</body>"
	"</html>"
}


test("Test param set listener called 3 times when 3 params")
	language c++;
{
	verify(jsp::get_param_set_called_count() == 3);
}


test("Reset all test data")
	language c++;
{
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	jsp::reset_param_set_test_data();
}


html
{
	"<html>"
	"<body>"
	"<object type='image/vnd.opera.jsplugins.selftest.unreg.param.listener' id='testobj'></object>"
	"</body>"
	"</html>"
}


test("Setting up")
	language ecmascript;
{
	var testobj = document.getElementById('testobj');
	var param = document.createElement('param');
	param.setAttribute('name','aname');
	param.setAttribute('value','avalue');
	testobj.appendChild(param);
}


test("Test unregistered listener not called")
	language c++;
{
	verify((g_jsplugins_selftest_bits & JSP_SELFTEST_PARAM_SET_CALLED) == 0);
}


exit
{
	g_opera->jsplugins_module.ResetDynamicSelftestBits();
	jsp::reset_param_set_test_data();
	g_jsPluginManager->RemoveStaticPlugin("JSP_Selftests");
}
