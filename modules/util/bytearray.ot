/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2010 Opera Software AS.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "util.bytearray";

include "modules/util/bytearray.h";

test("ByteArray.ByteArray")
{
	ByteArray buf;
	verify(buf.Length() == 0);
	verify(!buf.GetStorage());
}

test("ByteArray.Append")
{
	const char* char_buffer = "\0ab\0";
	ByteArray buf;
	verify(buf.Length() == 0);
	verify_success(buf.Append(char_buffer, 4));
	verify(buf.Length() == 4);

	char* storage = buf.GetStorage();
	verify(storage);
	verify(op_memcmp(storage, char_buffer, 4) == 0);

	for (int i = 0; i < 999; i++)
	{
		verify_success(buf.Append(char_buffer, 4));
	}

	verify(buf.Length() == 4000);

	storage = buf.GetStorage();
	verify(storage);

	for (int j = 0; j < 1000; j++)
	{
		verify(op_memcmp(storage, char_buffer, 4) == 0);
		storage += 4;
	}
}

test("ByteArray.AppendZeroes")
{
	ByteArray buf;
	verify(buf.Length() == 0);
	verify_success(buf.AppendZeroes(1213));
	verify(buf.Length() == 1213);
	verify(buf.GetStorage());
	for (int i = 0; i < 1213; i++)
		verify(buf.GetStorage()[i] == '\0');
}

test("ByteArray.FreeStorage")
{
	ByteArray buf;

	verify(buf.Length() == 0);
	verify(!buf.GetStorage());
	buf.FreeStorage();
	verify(buf.Length() == 0);
	verify(!buf.GetStorage());

	verify_success(buf.AppendZeroes(1213));
	verify(buf.Length() == 1213);
	verify(buf.GetStorage());

	buf.FreeStorage();

	verify(buf.Length() == 0);
	verify(!buf.GetStorage());
}
