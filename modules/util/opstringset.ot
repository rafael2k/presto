/* -*- Mode: c++; tab-width: 4; c-basic-offset: 4; coding: iso-8859-1 -*-
 *
 * Copyright (C) 2002-2005 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "util.opstringset";

include "modules/util/opstringset.h";

// Make sure it reports that it's empty when uninitialized.
test("Uninitialized size")
{
	OpStringSet strSet;
	verify(strSet.Size() == 0);
}

// Make sure it's empty after being passed an empty string.
test("Init - empty string")
{
	OpStringSet strSet;
	strSet.InitL(UNI_L(""));
	verify(strSet.Size() == 0);
}

// Make sure it reports the right number of elements when there are no dupes.
test("Init - unique entries")
{
	OpStringSet strSet;
	strSet.InitL(UNI_L(" sprite  coke	fanta pepsi \ntrocadero julmust "));
	verify(strSet.Size() == 6);
}

// Make sure it reports the right number of elements when there are dupes.
test("Init - duplicate entries")
{
	OpStringSet strSet;
	strSet.InitL(UNI_L("sprite  coke		sprite julmust \nfanta pepsi trocadero julmust julmust "));
	verify(strSet.Size() == 6);
}

// Make sure it breaks the "words" up correctly.
test("Init - correct parsing")
{
	OpStringSet strSet;
	strSet.InitL(UNI_L("\n	sprite   coke fanta	\rpepsi trocadero julmust"));
	BOOL sprite = FALSE,
		 coke = FALSE,
		 fanta = FALSE,
		 pepsi = FALSE,
		 trocadero = FALSE,
		 julmust = FALSE;
	for (int i = 0; i < strSet.Size(); ++i)
	{
		if (strSet.GetString(i) == UNI_L("sprite"))
			sprite = TRUE;
		else if (strSet.GetString(i) == UNI_L("coke"))
			coke = TRUE;
		else if (strSet.GetString(i) == UNI_L("fanta"))
			fanta = TRUE;
		else if (strSet.GetString(i) == UNI_L("pepsi"))
			pepsi = TRUE;
		else if (strSet.GetString(i) == UNI_L("trocadero"))
			trocadero = TRUE;
		else if (strSet.GetString(i) == UNI_L("julmust"))
			julmust = TRUE;
	}
	verify(sprite && coke && fanta && pepsi && trocadero && julmust);
}

// Try the relative complement of A and B where B is a subset of A.
test("RelativeComplement A-B, A superset of B")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L("sprite coke sprite julmust fanta pepsi trocadero julmust julmust"));
	setB.InitL(UNI_L("coke sprite julmust"));
	result.RelativeComplementL(setA, setB);

	BOOL fanta = FALSE,
		 pepsi = FALSE,
		 trocadero = FALSE;
	for (int i = 0; i < result.Size(); ++i)
	{
		if (result.GetString(i) == UNI_L("fanta"))
			fanta = TRUE;
		else if (result.GetString(i) == UNI_L("pepsi"))
			pepsi = TRUE;
		else if (result.GetString(i) == UNI_L("trocadero"))
			trocadero = TRUE;
	}

	verify(result.Size() == 3 && fanta && pepsi && trocadero);
}

// Try the relative complement of A and B where B is a superset of A.
test("RelativeComplement A-B, A subset of B")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L("coke sprite julmust"));
	setB.InitL(UNI_L("sprite coke sprite julmust fanta pepsi trocadero julmust julmust"));
	result.RelativeComplementL(setA, setB);

	verify(result.Size() == 0);
}

// Try the relative complement of A and B where A and B are equal.
test("RelativeComplement A-B, A == B")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L("sprite coke sprite julmust fanta pepsi trocadero julmust julmust"));
	setB.InitL(UNI_L("sprite coke sprite julmust fanta pepsi trocadero julmust julmust"));
	result.RelativeComplementL(setA, setB);

	verify(result.Size() == 0);
}

// Try the relative complement of A and B where B is the empty set.
test("RelativeComplement A-B, B empty set")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L("coke sprite julmust"));
	setB.InitL(UNI_L(""));
	result.RelativeComplementL(setA, setB);

	verify(result.Size() == 3);
}

// Try the relative complement of A and B where A is the empty set.
test("RelativeComplement A-B, A empty set")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L(""));
	setB.InitL(UNI_L("coke sprite julmust"));
	result.RelativeComplementL(setA, setB);

	verify(result.Size() == 0);
}

// Try the relative complement of A and B where A and B are empty sets.
test("RelativeComplement A-B, A and B empty sets")
{
	OpStringSet setA,
				setB,
				result;
	setA.InitL(UNI_L(""));
	setB.InitL(UNI_L(""));
	result.RelativeComplementL(setA, setB);

	verify(result.Size() == 0);
}
