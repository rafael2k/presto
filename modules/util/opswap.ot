group "util.opswap";

include "modules/util/opswap.h";

test("op_swap(): primitive type")
{
	int x = 0;
	int y = 1;
	op_swap(x, y);
	verify(x == 1);
	verify(y == 0);
}

test("op_swap(): struct of primitive types")
{
	OpPoint x(0, 0);
	OpPoint y(1, 1);
	op_swap(x, y);
	verify(x == OpPoint(1, 1));
	verify(y == OpPoint(0, 0));
}

test("op_swap(): OpAutoPtr") leakcheck;
{
	int* i = OP_NEW(int, (0));
	OpAutoPtr<int> x(i);
	OpAutoPtr<int> y;
	op_swap(x, y);
	verify(x.get() == NULL);
	verify(y.get() == i);
}

test("op_swap(): OpString8")
{
	OpString8 x;
	verify_success(x.Set("0"));
	OpString8 y;
	verify_success(y.Set("1"));
	op_swap(x, y);
	verify_string(x, "1");
	verify_string(y, "0");
}

test("op_swap(): OpString")
{
	OpString x;
	verify_success(x.Set(UNI_L("0")));
	OpString y;
	verify_success(y.Set(UNI_L("1")));
	op_swap(x, y);
	verify_string(x, UNI_L("1"));
	verify_string(y, UNI_L("0"));
}
