/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2007 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Karlsson
*/

group "util.opguid";

include "modules/util/opguid.h";
require UTIL_GUID_GENERATE_SUPPORT;

global
{
	OpGuid nilguid;
}

setup
{
	op_memset(nilguid, 0, sizeof (OpGuid));
}

test("Generating UUIDs")
{
	// Generate ten GUIDs and make sure they are well-formed, different
	// and non-null
	OpGuid guid[10]; /* ARRAY OK 2009-04-24 johanh */
	op_memset(guid, 0, sizeof (OpGuid) * 10);

	for (int i = 0; i < 10; ++ i)
	{
		// Generate
		verify(OpStatus::IsSuccess(g_opguidManager->GenerateGuid(guid[i])));

		// Check that the required data fields make sense

		// Allow version 1 (time-based, what we generate), version 2 (DEC),
		// and version 4 (random). Version 3 and 5 are used to generate a
		// UUID for a specific host name, and will return the same value
		// each time they are generated.
		unsigned int version =
			((static_cast<unsigned char *>(guid[i])[6]) & 0xF0) >> 4;
		verify(version == 1 || version == 2 || version == 4);

		// Check variant, the 1 1 1 sequence is reserved for future use,
		// so disallow for now.
		unsigned int variant =
			((static_cast<unsigned char *>(guid[i])[8]) & 0xE0) >> 5;
		verify(variant != 7);

		// Check that the UUID is not the nil UUID
		verify(op_memcmp(&guid[i], &nilguid, sizeof (OpGuid)) != 0);

		// Check that the UUID is unique
		for (int j = 0; j < i; ++ j)
		{
			verify(op_memcmp(&guid[i], &guid[j], sizeof (OpGuid)) != 0);
		}
	}
}

test("Convert to string")
{
	char s[40]; /* ARRAY OK 2009-04-24 johanh */
	OpGUIDManager::ToString(nilguid, s, 40);
	verify(0 == op_strcmp(s, "00000000-0000-0000-0000-000000000000"));

	/* DNS name space ID from RFC 4122 */
	const unsigned char dnsguid[16] =
		{ 0x6b, 0xa7, 0xb8, 0x10, 0x9d, 0xad, 0x11, 0xd1,
		  0x80, 0xb4, 0x00, 0xc0, 0x4f, 0xd4, 0x30, 0xc8 };
	OpGUIDManager::ToString(dnsguid, s, 40);
	verify(0 == op_strcmp(s, "6ba7b810-9dad-11d1-80b4-00c04fd430c8"));
}
