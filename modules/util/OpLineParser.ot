/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4; c-file-style:"stroustrup" -*-
 *
 * Copyright (C) 1995-2006 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "util.oplineparser";

include "modules/locale/oplanguagemanager.h";
include "modules/locale/locale-enum.h";
include "modules/util/opstring.h";

include "modules/util/OpLineParser.h";

test("OpLineParser") require ABOUT_DESKTOP_ABOUT;
{
	OpString ref1, text1, string;
	OpString8 token;
	uni_char str[64]; /* ARRAY OK 2009-04-03 adame */
	Str::LocaleString id(Str::NOT_A_STRING);
	OP_STATUS ret;
	INT32 value;

	g_languageManager->GetStringL(Str::SI_IDABOUT_ABOUT, ref1);

	uni_snprintf(str, 64, UNI_L("%d, SI_IDABOUT_ABOUT1, 42, \"foo\""), Str::SI_IDABOUT_ABOUT);

	OpLineParser line(str);
	ret = line.GetNextLanguageString(text1, &id);
	verify(ret == OpStatus::OK);

	verify(uni_strcmp(text1.CStr(), ref1.CStr()) == 0);
	verify(id == Str::SI_IDABOUT_ABOUT);

	line.GetNextTokenWithoutTrailingDigits(token);
	verify(token.Compare("SI_IDABOUT_ABOUT") == 0);

	line.GetNextStringOrValue(string, value);
	line.GetNextStringOrValue(string, value);
	verify(string.Compare(UNI_L("foo")) == 0);
	verify(value == 42);
}

test("OpLineString") require ABOUT_DESKTOP_ABOUT;
{
	OpString text, ref;
	OpString8 t8, string;
	OpLineString str;
	OP_STATUS ret;
	Str::LocaleString id(Str::NOT_A_STRING);

	ret = str.WriteToken8("foo");
	verify(ret == OpStatus::OK);

	ret = str.WriteSeparator(',');
	verify(ret == OpStatus::OK);
	ret = str.WriteTokenWithTrailingDigits("\"SI_IDABOUT_ABOUT\"", Str::SI_IDABOUT_ABOUT);
	verify(ret == OpStatus::OK);
	ret = str.WriteValue(Str::SI_IDABOUT_ABOUT, FALSE);
	verify(ret == OpStatus::OK);
	ret = str.WriteString(UNI_L("\"SI_IDABOUT_ABOUT\""));
	verify(ret == OpStatus::OK);

	OpLineParser line(str.GetString());
	line.GetNextToken8(t8);
	verify(t8.Compare("foo") == 0);

	line.GetNextTokenWithoutTrailingDigits(string);
	verify(string.Compare("\"SI_IDABOUT_ABOUT\"") == 0);

	g_languageManager->GetStringL(Str::SI_IDABOUT_ABOUT, ref);
	line.GetNextLanguageString(text, &id);
	verify(text.Compare(ref) == 0);
	verify(id == Str::SI_IDABOUT_ABOUT);
}
