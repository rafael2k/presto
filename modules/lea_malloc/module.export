API_DLM_CHECK			eddy

	Provide lea_malloc_check_state (q.v.) so that code outside this module
	can provoke a check of this module's internal sanity.  This check is
	only fully effective if you enable OP_ASSERT (see API_DBG_OPASSERT),
	since it checks each detail. However, the mere fact of traversing the
	memory data structures does also serve as a check, since it is apt to
	turn any memory abuse into a crash relatively soon after the abuse,
	rather than at a random later time. (Please see the memory module for
	more sophisticated memory debugging tools.)

	Defines: LEA_MALLOC_EXTERN_CHECK
	Depends on: FEATURE_3P_LEA_MALLOC

API_DLM_CONSTRAIN		jb

	Makes it possible to fail allocations originating from (selected parts
	of) libopera, without affecting allocations from other parts of the
	program or shared libraries.  This makes it possible to constrain memory
	usage to some extent even when non oom-safe libraries are used.  Also
	provides for "fake" alloc/free to enable tracking of memory use by
	third-party libraries.

	Defines: LEA_MALLOC_API_CONSTRAIN
	Depends on: CONSTRAIN_OPERA_MEMORY_USAGE

API_DLM_FULL_MEMAPI		eddy

	Include all functions of the standard memory API, not just the ones used
	directly by Opera.  You need this if FEATURE_LEA_MALLOC_PREFIX is off
	and your binary loads shared libraries - either via shared linkage or as
	plugins - which might conceivably call functions in this full API.

	Defines: LEA_MALLOC_FULL_MEMAPI
	Depends on: FEATURE_3P_LEA_MALLOC

API_DLM_SINGLE_BLOCK		eddy

	Provides the SingleBlockHeap class (see lea_monoblock) as replacement
	for FEATURE_LEA_MALLOC_MONOLITHIC.

	Defines: LEA_MALLOC_MONOBLOCK
	Depends on: FEATURE_3P_LEA_MALLOC

API_DLM_GET_MALLOC_STATE_SIZE	johanh

	Provides the get_malloc_state_size() function for querying the size
	needed for lea_malloc's internal malloc_state object.

	Defines: LEA_MALLOC_API_GET_STATE_SIZE
	Depends on: FEATURE_3P_LEA_MALLOC
