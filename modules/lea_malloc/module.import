API_PI_OPMEMORY_MALLOC_LOCK		johanh

	Try to use externally provided locking functions for wrapping
	all calls to the primary API (i.e. malloc(), free() and friends).

	Only needed if we need to lock our primary API at all.

	See pi/system/OpMemory.h for how to implement the locking functions.

	Import if: FEATURE_3P_LEA_MALLOC, TWEAK_LEA_MALLOC_LOCK
	Import if: FEATURE_3P_LEA_MALLOC, TWEAK_MEMORY_USE_LOCKING

API_MEM_OPERA_SBRK			mortenro

	Import the 'op_sbrk()' API from the memory module when
	lea_malloc is configured to do so. This may be desirable on
	medium end devices with an operating system that supports
	virtual allocation on the memory-page level, and where the
	existing allocation mechanisms does not match the
	requirements of 'sbrk()' very well.

	Import if: FEATURE_3P_LEA_MALLOC, TWEAK_LEA_MALLOC_USE_OPERA_SBRK

API_MEM_OPERA_MMAP			mortenro

	Import the 'op_mmap()' API from the memory module when
	lea_malloc is configured to do so. This may be desirable
	for similar reasons to API_MEM_OPERA_SBRK above.
	One such reason could be e.g. on Windows Mobile where
	the predictability of VirtualAlloc() is dependent on the
	size of the allocation.  By using the Opera mmap-emulation
	layer, such problems can be controlled better.

	Import if: FEATURE_3P_LEA_MALLOC, TWEAK_LEA_MALLOC_USE_OPERA_MMAP
