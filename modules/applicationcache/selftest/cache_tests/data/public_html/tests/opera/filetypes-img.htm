<html manifest="/applicationcache/tests/opera/resources/filetypes-img.manifest">
<head>
   <title>Test that various page dependency types listed in manifest are usable when server not responding</title>
<script>
webserver       = window.opener.opera.io.webserver;
verifyTest      = window.opener.verifyTest;
getTestCount    = window.opener.getTestCount;
pauseWebserver  = window.opener.pauseWebserver;
wakeUpWebserver = window.opener.wakeUpWebserver;
checkWebserverStatus = window.opener.checkWebserverStatus;

var resultstr   = "";
</script>

<script>
function log(result, message)
{
  if (window.opener == null)
     {
      document.getElementById('result').innerHTML += result;
      if (result != "PASS")
         { document.getElementById('result').innerHTML += ": " + message + "<br>"; }
     }
  else
     {
      if (result == "PASS")   { verifyTest(window, true, message); }
      else                    { verifyTest(window, false, message); }
     }
}

function errlog(result, message)
{ log(result, "Received unexpected '" + message + "' event:" + resultstr); }

function test(e)
{
   var refimght       = 512;
   var refimgactualht = document.getElementById("imgbotmarker").offsetTop - document.getElementById("imgtopmarker").offsetTop;

   if (refimgactualht < refimght)        // Test Image: Broken image icon is never as big as test image (512x512)
      { log("FAIL", "IMG: Expected height of image is at least " + refimght + "px, got: " + refimgactualht); }
   else
      { log("PASS", ""); }
}

function fail()
{
  errlog("FAIL", "NOUPDATE");
}

function SetupServer()
{
  if (getTestCount() > 0)
  {
    applicationCache.addEventListener('noupdate', fail, false);
    pauseWebserver();
    if (checkWebserverStatus())
      { log("FAIL", "Web server is on when it should be off"); }
  }

  applicationCache.addEventListener('cached', test, false);
  applicationCache.addEventListener('error', test, false);
}

</script>
</head>

<body onload="SetupServer();">

<div id="imgtopmarker">before image</div>
<div><img src="resources/lenna.png"></div>
<div id="imgbotmarker">after image</div>

<div id="result"></div>

</body>
</html>