<html manifest="/applicationcache/swapcache-withmanifest-withchange-checkcontent.manifest">
<head>
  <title>Manifest is present and attempt is made to trigger update() and then swapCache() methods with manifest changing between checks. 
   XHR is used to test that accessing old content doesn't work, while the new content does.</title>
<script>
webserver    = window.opener.opera.io.webserver;
verifyTest   = window.opener.verifyTest;
getTestCount = window.opener.getTestCount;
pauseWebserver  = window.opener.pauseWebserver;
wakeUpWebserver = window.opener.wakeUpWebserver;
checkWebserverStatus = window.opener.checkWebserverStatus;

var resultstr  = "";
var triggered  = 0;

function log(result, message)
{ 
   if (result == "PASS")
      { 
       document.getElementById('result').innerHTML += result; 
       verifyTest(window, true, message);
      }
   else
      {
       document.getElementById('result').innerHTML += ": " + message + "<br>";
       verifyTest(window, false, message);
       }
}

function errlog(result, message)
{ log(result, "Received unexpected '" + message + "' event. Pending events: " + resultstr); }

function verifyLoad(url, expected)
{
   var req = new XMLHttpRequest();
   expected = expected || "";

   req.open("GET", url, false);
   req.send();
   if (req.status == 200)
      {
       if (req.responseText.indexOf(expected) == -1)  { return 1; }  // Expected pattern not found
       else                                           { return 2; }  // FOUND!
      }
   else 
      { return 0; }
}

function attemptUpdate()
{
   try
      {
       triggered = 1;
       applicationCache.update();
      }
   catch (e)
      { log("FAIL", "Exception detected when trying to execute update() on applicationCache; code " + e.code); }
}

function attemptSwap()
{
   try
      { applicationCache.swapCache(); }
   catch (e)
      { log("FAIL", "Exception detected when trying to execute swapCache() on applicationCache; code " + e.code); }
}

function checkevents()
{
   var theresult = -1;

   if (triggered == 0)
      { attemptUpdate(); }
   else
      {
       attemptSwap();
       pauseWebserver();
       if (checkWebserverStatus())
          { log("FAIL", "Web server is on when it should be off"); }

       theresult = verifyLoad("resources/swapcache-checkcontent1.txt", 
               "swapcache-checkcontent1.txt. It is awesome.");
       if (theresult != 0)
          { log("FAIL", "'swapcache-checkcontent1.txt' was reachable when it shouldn't be"); }
       else
          {
           theresult = verifyLoad("resources/swapcache-checkcontent2.txt", 
                       "swapcache-checkcontent2.txt. It is pretty.");
           if (theresult == 0)
              { log("FAIL", "Could not access 'swapcache-checkcontent2.txt'"); }
           else if (theresult == 1)
              { log("FAIL", "Incorrect content received for 'swapcache-checkcontent2.txt'"); }
           else
              { log("PASS", ""); }
          }
      }

}

function test()
{
   applicationCache.onchecking    = function() { resultstr += "CHECKING"; }
   applicationCache.onnoupdate    = function() { resultstr += "-NOUPDATE"; checkevents(); }
   applicationCache.ondownloading = function() { resultstr += "-DOWNLOADING"; }
   applicationCache.oncached      = function() { resultstr += "-CACHED"; checkevents(); }
   applicationCache.onupdateready = function() { resultstr += "-UPDATEREADY"; checkevents(); }
   applicationCache.onobsolete    = function() { errlog("FAIL", "OBSOLETE"); }
   applicationCache.onerror       = function() { errlog("FAIL", "ERROR"); }
}

function SetupServer(thefile)
{
	webserver.addEventListener("swapcache-withmanifest-withchange-checkcontent.manifest", 
						function(e)
               {
                if (e.connection.closed)     { return; }
                var response = e.connection.response;
                response.setResponseHeader("Content-Type", "text/cache-manifest");  
                response.write("CACHE MANIFEST\n");
                response.write("CACHE:\n");
                if (triggered == 0)
								   { response.write("/applicationcache/tests/opera/resources/swapcache-checkcontent1.txt\n"); }
                else
                   { response.write("/applicationcache/tests/opera/resources/swapcache-checkcontent2.txt\n"); }
                response.close();	
               }, false);

test();
}
</script>
</head>

<body onload="SetupServer();">

<p>Manifest is present and attempt is made to trigger update() and then swapCache() methods with manifest changing between checks. 
   XHR is used to test that accessing old content doesn't work, while the new content does. 
   Should say "PASS"</p>

<div id="result"></div>

</body>
</html>
