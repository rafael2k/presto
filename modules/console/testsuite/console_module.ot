/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2007 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Karlsson
*/

group "console.console_module";
require init;
require OPERA_CONSOLE;

include "modules/console/console_module.h";
include "modules/console/opconsoleengine.h";

// -- Tests --------------------------------------------------------------

test("FreeCachedData")
{
	// First post a message to the console
	OpConsoleEngine::Message msg(OpConsoleEngine::SelfTest, OpConsoleEngine::Verbose);
	verify(OpStatus::IsSuccess(msg.context.Set("SelfTest")));
	verify(OpStatus::IsSuccess(msg.message.Set("TestSelf")));
	unsigned int msgnum = static_cast<unsigned int>(-1);
	TRAPD(rc, msgnum = g_console->PostMessageL(&msg));
	verify(OpStatus::IsSuccess(rc));

	// Now check the current state and do a
	// FreeCachedData, which should clear the console
	unsigned int lowest  = g_console->GetLowestId();
	unsigned int highest = g_console->GetHighestId();

	g_opera->console_module.FreeCachedData(TRUE);
	verify(g_console->GetLowestId()   > lowest);
	verify(g_console->GetHighestId() == highest);
	verify(g_console->GetLowestId()   > highest);
	verify(g_console->GetMessage(msgnum) == NULL);
}
