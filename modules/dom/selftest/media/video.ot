/* -*- Mode: js; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2008-2011 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "DOM.Media.Video";
require MEDIA_HTML_SUPPORT;
require init;
language ecmascript;

html
{
	//! <html><body><video id="video"></video></body></html>
}

test("Setup")
{
	video = document.getElementById("video");
	verify(video);
}

test("reading HTMLVideoElement instance constants")
	require success "Setup";
{
	verify(video.NETWORK_EMPTY == 0);
	verify(video.NETWORK_IDLE == 1);
	verify(video.NETWORK_LOADING == 2);
	verify(video.NETWORK_NO_SOURCE == 3);

	verify(video.HAVE_NOTHING == 0);
	verify(video.HAVE_METADATA == 1);
	verify(video.HAVE_CURRENT_DATA == 2);
	verify(video.HAVE_FUTURE_DATA == 3);
	verify(video.HAVE_ENOUGH_DATA == 4);
}

test("HTMLVideoElement inheritance")
	require success "Setup";
{
	verify(video instanceof HTMLElement);
	verify(video instanceof HTMLMediaElement);
	verify(video instanceof HTMLVideoElement);
	verify(!(video instanceof HTMLAudioElement));

	verify(typeof video.foo == "undefined");
	HTMLElement.prototype.foo = 1;
	verify(video.foo == 1);
	HTMLMediaElement.prototype.foo = 2;
	verify(video.foo == 2);
	HTMLVideoElement.prototype.foo = 3;
	verify(video.foo == 3);
	HTMLAudioElement.prototype.foo = 4;
	verify(video.foo == 3);
	video.foo = 5;
	verify(video.foo == 5);
}

test("HTMLVideoElement instance interface types")
	require success "Setup";
{
	verify(typeof video.error == "object");
	verify(typeof video.src == "string");
	verify(typeof video.currentSrc == "string");
	verify(typeof video.networkState == "number");
	verify(typeof video.preload == "string");
	verify(video.buffered instanceof TimeRanges);
	verify(typeof video.buffered == "object");
	verify(typeof video.buffered.length == "number");
	verify(typeof video.buffered.start == "function");
	verify(typeof video.buffered.end == "function");
	verify(typeof video.load == "function");
	verify(typeof video.canPlayType == "function");
	verify(typeof video.readyState == "number");
	verify(typeof video.seeking == "boolean");
	verify(typeof video.currentTime == "number");
	verify(typeof video.duration == "number");
	verify(typeof video.paused == "boolean");
	verify(typeof video.defaultPlaybackRate == "number");
	verify(typeof video.playbackRate == "number");
	verify(video.played instanceof TimeRanges);
	verify(typeof video.played == "object");
	verify(typeof video.played.length == "number");
	verify(typeof video.played.start == "function");
	verify(typeof video.played.end == "function");
	verify(video.seekable instanceof TimeRanges);
	verify(typeof video.seekable == "object");
	verify(typeof video.seekable.length == "number");
	verify(typeof video.seekable.start == "function");
	verify(typeof video.seekable.end == "function");
	verify(typeof video.ended == "boolean");
	verify(typeof video.autoplay == "boolean");
	verify(typeof video.loop == "boolean");
	verify(typeof video.play == "function");
	verify(typeof video.pause == "function");
	verify(typeof video.controls == "boolean");
	verify(typeof video.volume == "number");
	verify(typeof video.muted == "boolean");
	verify(typeof video.defaultMuted == "boolean");

	verify(typeof video.width == "number");
	verify(typeof video.height == "number");
	verify(typeof video.videoWidth == "number");
	verify(typeof video.videoHeight == "number");
	verify(typeof video.poster == "string");
}

test("attribute reflection")
	require success "Setup";
{
	// defaults
	verify(video.src == "");
	verify(video.poster == "");
	verify(video.autoplay == false);
	verify(video.loop == false);
	verify(video.controls == false);
	verify(video.width == 0);
	verify(video.height == 0);

	// html -> DOM
	video.setAttribute("src", "src0");
	verify(video.src.substring(video.src.length-4) == "src0");
	video.setAttribute("poster", "poster0");
	verify(video.poster.substring(video.poster.length-7) == "poster0");
	video.setAttribute("autoplay", "autoplay");
	verify(video.autoplay == true);
	video.setAttribute("loop", "loop");
	verify(video.loop == true);
	video.setAttribute("controls", "controls");
  verify(video.controls == true);

	// DOM -> html
	video.src = "src1";
	verify(video.getAttribute("src") == "src1");
	video.poster = "poster1";
	verify(video.getAttribute("poster") == "poster1");
	video.autoplay = false;
	verify(!video.hasAttribute("autoplay"));
	video.autoplay = true;
	verify(video.hasAttribute("autoplay"));
	video.loop = false;
	verify(!video.hasAttribute("loop"));
	video.loop = true;
	verify(video.hasAttribute("loop"));
	video.controls = false;
	verify(!video.hasAttribute("controls"));
	video.controls = true;
	verify(video.hasAttribute("controls"));
}
