group "DOM.Core.Element.properties.innerHTML";
require init;

language ecmascript;

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #1")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  div1.innerHTML = "[text]";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "#text");
  verify(div1.firstChild.nodeValue == "[text]");
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #2")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  div1.innerHTML = "<span></span>";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "SPAN");
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #3")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  div1.innerHTML = "<span>[text]</span>";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "SPAN");
  verify(div1.firstChild.firstChild);
  verify(div1.firstChild.firstChild == div1.firstChild.lastChild);
  verify(div1.firstChild.firstChild.nodeName == "#text");
  verify(div1.firstChild.firstChild.nodeValue == "[text]");
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #4")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  div1.innerHTML = "<span></span><span></span>";

  var newspan1 = div1.firstChild;
  verify(newspan1);
  verify(newspan1.parentNode == div1);
  verify(newspan1.nodeName == "SPAN");

  var newspan2 = newspan1.nextSibling;
  verify(newspan2);
  verify(newspan2 == div1.lastChild);
  verify(newspan2.parentNode == div1);
  verify(newspan2.nodeName == "SPAN");
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "[old-text]"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #5")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldtext = div1.firstChild;
  verify(oldtext);
  verify(oldtext.nodeName == "#text");
  verify(oldtext.nodeValue == "[old-text]");

  div1.innerHTML = "[new-text]";

  var newtext = div1.firstChild;
  verify(newtext);
  verify(newtext != oldtext);
  verify(newtext == div1.lastChild);
  verify(newtext.nodeName == "#text");
  verify(newtext.nodeValue == "[new-text]");
  verify(newtext.parentNode == div1);
  verify(oldtext.parentNode == null);
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "<span></span>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #6")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldspan = div1.firstChild;
  verify(oldspan);
  verify(oldspan.nodeName == "SPAN");
  verify(oldspan.parentNode == div1);

  div1.innerHTML = "<span></span>";

  var newspan = div1.firstChild;
  verify(newspan);
  verify(newspan != oldspan);
  verify(newspan == div1.lastChild);
  verify(newspan.nodeName == "SPAN");
  verify(newspan.parentNode == div1);
  verify(oldspan.parentNode == null);
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "<span></span>"
        "<span></span>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #7")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldspan1 = div1.firstChild;
  verify(oldspan1);
  verify(oldspan1.nodeName == "SPAN");
  verify(oldspan1.parentNode == div1);

  var oldspan2 = oldspan1.nextSibling;
  verify(oldspan2);
  verify(oldspan2.nodeName == "SPAN");
  verify(oldspan2.parentNode == div1);

  div1.innerHTML = "<span></span>";

  var newspan = div1.firstChild;
  verify(newspan);
  verify(newspan != oldspan1);
  verify(newspan == div1.lastChild);
  verify(newspan.nodeName == "SPAN");
  verify(newspan.parentNode == div1);
  verify(oldspan1.parentNode == null);
  verify(oldspan1.nextSibling == null);
  verify(oldspan2.parentNode == null);
  verify(oldspan2.previousSibling == null);
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "<span>[old-text]</span>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML #8")
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldspan = div1.firstChild;
  verify(oldspan);
  verify(oldspan.nodeName == "SPAN");
  verify(oldspan.parentNode == div1);

  var oldtext = oldspan.firstChild;
  verify(oldtext);
  verify(oldtext.nodeName == "#text");
  verify(oldtext.nodeValue == "[old-text]");

  div1.innerHTML = "<span>[new-text]</span>";

  var newspan = div1.firstChild;
  verify(newspan);
  verify(newspan != oldspan);
  verify(newspan == div1.lastChild);
  verify(newspan.nodeName == "SPAN");
  verify(newspan.parentNode == div1);

  var newtext = newspan.firstChild;
  verify(newtext);
  verify(newtext != oldtext);
  verify(newtext == newspan.lastChild);
  verify(newtext.nodeName == "#text");
  verify(newtext.nodeValue == "[new-text]");
  verify(newtext.parentNode == newspan);
  verify(oldtext.parentNode == oldspan);
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #1")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (ev.target.nodeName != "#text" || ev.target.nodeValue != "[text]")
      nodeinserted = "DOMNodeInserted: wrong target";
    else if (ev.target.parentNode != div1)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else
      nodeinserted = "ok";
  }

  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  div1.innerHTML = "[text]";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "#text");
  verify(div1.firstChild.nodeValue == "[text]");

  if (nodeinserted != "ok")
    throw nodeinserted;
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #2")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (ev.target.nodeName != "SPAN")
      nodeinserted = "DOMNodeInserted: wrong target";
    else if (ev.target.parentNode != div1)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else
      nodeinserted = "ok";
  }

  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  div1.innerHTML = "<span></span>";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "SPAN");

  if (nodeinserted != "ok")
    throw nodeinserted;
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #3")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (ev.target.nodeName != "SPAN")
      nodeinserted = "DOMNodeInserted: wrong target";
    else if (ev.target.parentNode != div1)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else if (!ev.target.firstChild || ev.target.firstChild.nodeName != "#text" || ev.target.firstChild.nodeValue != "[text]")
      nodeinserted = "DOMNodeInserted: wrong target.firstChild";
    else
      nodeinserted = "ok";
  }

  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  div1.innerHTML = "<span>[text]</span>";

  verify(div1.firstChild);
  verify(div1.firstChild == div1.lastChild);
  verify(div1.firstChild.nodeName == "SPAN");
  verify(div1.firstChild.firstChild);
  verify(div1.firstChild.firstChild == div1.firstChild.lastChild);
  verify(div1.firstChild.firstChild.nodeName == "#text");
  verify(div1.firstChild.firstChild.nodeValue == "[text]");

  if (nodeinserted != "ok")
    throw nodeinserted;
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #4")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var nodeinserted = "DOMNodeInserted: no event";
  var nodeinserted_counter = 0;
  function handleDOMNodeInserted(ev)
  {
    var error;

    switch (++nodeinserted_counter)
    {
    case 1:
      if (ev.target.nodeName != "SPAN")
        error = "DOMNodeInserted: wrong target";
      else if (ev.target.id == "span2")
        error = "DOMNodeInserted: wrong target (span2 before span1)";
      else if (ev.target.id != "span1")
        error = "DOMNodeInserted: wrong target (wrong id: " + ev.target.id + ")";
      else if (ev.target.parentNode != div1)
        error = "DOMNodeInserted: not inserted yet";
      else if (ev.target.nextSibling != null)
        error = "DOMNodeInserted: target has nextSibling already";
      else
        error = "ok";
      break;

    case 2:
      if (ev.target.nodeName != "SPAN")
        error = "DOMNodeInserted: wrong target";
      else if (ev.target.id != "span2")
        error = "DOMNodeInserted: wrong target (wrong id: " + ev.target.id + ")";
      else if (ev.target.parentNode != div1)
        error = "DOMNodeInserted: not inserted yet";
      else if (ev.target.previousSibling == null || ev.target.previousSibling.id != "span1")
        error = "DOMNodeInserted: wrong target.previousSibling";
      else
        error = "ok";
      break;

    default:
      error = "DOMNodeInserted: bogus event";
    }

    if (error)
      if (nodeinserted == "ok" || nodeinserted == "DOMNodeInserted: no event")
        nodeinserted = error;
      else
        nodeinserted += "\n" + error;
  }

  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  div1.innerHTML = "<span id='span1'></span><span id='span2'></span>";

  var newspan1 = div1.firstChild;
  verify(newspan1);
  verify(newspan1.parentNode == div1);
  verify(newspan1.nodeName == "SPAN");
  verify(newspan1.id == "span1");

  var newspan2 = newspan1.nextSibling;
  verify(newspan2);
  verify(newspan2 == div1.lastChild);
  verify(newspan2.parentNode == div1);
  verify(newspan2.nodeName == "SPAN");
  verify(newspan2.id == "span2");

  if (nodeinserted != "ok")
    throw nodeinserted;
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "<span></span>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #5")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldspan = div1.firstChild;
  verify(oldspan);
  verify(oldspan.nodeName == "SPAN");
  verify(oldspan.parentNode == div1);

  var noderemoved = "DOMNodeRemoved: no event";
  function handleDOMNodeRemoved(ev)
  {
    if (ev.target != oldspan)
      noderemoved = "DOMNodeRemoved: wrong target";
    else if (ev.target.parentNode != div1)
      noderemoved = "DOMNodeRemoved: already removed";
    else
      noderemoved = "ok";
  }

  document.addEventListener("DOMNodeRemoved", handleDOMNodeRemoved, true);

  div1.innerHTML = "<span></span>";

  var newspan = div1.firstChild;
  verify(newspan);
  verify(newspan != oldspan);
  verify(newspan == div1.lastChild);
  verify(newspan.nodeName == "SPAN");
  verify(newspan.parentNode == div1);
  verify(oldspan.parentNode == null);

  if (noderemoved != "ok")
    throw noderemoved;
}

html
{
  "<html>"
    "<head></head>"
    "<body>"
      "<div>"
        "<span></span>"
        "<span></span>"
      "</div>"
    "</body>"
  "</html>"
}

test("Element.innerHTML Mutation Events #6")
  require DOM2_MUTATION_EVENTS;
{
  var div1 = document.firstChild.lastChild.firstChild;
  verify(div1 && div1.nodeName == "DIV");

  var oldspan1 = div1.firstChild;
  verify(oldspan1);
  verify(oldspan1.nodeName == "SPAN");
  verify(oldspan1.parentNode == div1);

  var oldspan2 = oldspan1.nextSibling;
  verify(oldspan2);
  verify(oldspan2.nodeName == "SPAN");
  verify(oldspan2.parentNode == div1);

  var noderemoved = "DOMNodeRemoved: no event";
  var noderemoved_counter = 0;
  function handleDOMNodeRemoved(ev)
  {
    var error;

    switch (++noderemoved_counter)
    {
    case 1:
      if (ev.target != oldspan1)
        error = "DOMNodeRemoved: wrong target";
      else if (ev.target.parentNode != div1)
        error = "DOMNodeRemoved: already removed";
      else
        error = "ok";
      break;

    case 2:
      if (ev.target != oldspan2)
        error = "DOMNodeRemoved: wrong target";
      else if (ev.target.parentNode != div1)
        error = "DOMNodeRemoved: already removed";
      else
        error = "ok";
      break;

    default:
      error = "DOMNodeRemoved: bogus event";
    }

    if (noderemoved == "ok" || noderemoved == "DOMNodeRemoved: no event")
      noderemoved = error;
    else
      noderemoved += "\n" + error;
  }
  document.addEventListener("DOMNodeRemoved", handleDOMNodeRemoved, true);

  div1.innerHTML = "<span></span>";

  var newspan = div1.firstChild;
  verify(newspan);
  verify(newspan != oldspan1);
  verify(newspan == div1.lastChild);
  verify(newspan.nodeName == "SPAN");
  verify(newspan.parentNode == div1);
  verify(oldspan1.parentNode == null);
  verify(oldspan1.nextSibling == null);
  verify(oldspan2.parentNode == null);
  verify(oldspan2.previousSibling == null);

  if (noderemoved != "ok")
    throw noderemoved;
}
