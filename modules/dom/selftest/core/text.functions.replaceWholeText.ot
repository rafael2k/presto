group "DOM.Core.Text.functions.replaceWholeText";
require init;

language ecmascript;

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with no siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #1")
{
  var container = document.getElementById("container");
  verify(container);

  var target = container.childNodes[0];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.nodeValue == "replacement");
  verify(target.parentNode == container);
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with one following sibling

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #2")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var target = container.childNodes[0];
  var victim1 = container.childNodes[1];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text2");
  verify(victim1.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with two following siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
        "<span/>"
        "text3"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #3")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var target = container.childNodes[0];
  var victim1 = container.childNodes[1];
  var victim2 = container.childNodes[2];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text2");
  verify(victim1.parentNode == null);
  verify(victim2.nodeValue == "text3");
  verify(victim2.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with one preceding sibling

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #4")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var victim1 = container.childNodes[0];
  var target = container.childNodes[1];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text1");
  verify(victim1.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with two preceding siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
        "<span/>"
        "text3"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #5")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var victim1 = container.childNodes[0];
  var victim2 = container.childNodes[1];
  var target = container.childNodes[2];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text1");
  verify(victim1.parentNode == null);
  verify(victim2.nodeValue == "text2");
  verify(victim2.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with one preceding and one
// following siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
        "<span/>"
        "text3"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #6")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var victim1 = container.childNodes[0];
  var target = container.childNodes[1];
  var victim2 = container.childNodes[2];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text1");
  verify(victim1.parentNode == null);
  verify(victim2.nodeValue == "text3");
  verify(victim2.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") with two preceding and one
// following siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
        "<span/>"
        "text3"
        "<span/>"
        "text4"
        "<span/>"
        "text5"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #7")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var victim1 = container.childNodes[0];
  var victim2 = container.childNodes[1];
  var target = container.childNodes[2];
  var victim3 = container.childNodes[3];
  var victim4 = container.childNodes[4];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text1");
  verify(victim1.parentNode == null);
  verify(victim2.nodeValue == "text2");
  verify(victim2.parentNode == null);
  verify(victim3.nodeValue == "text4");
  verify(victim3.parentNode == null);
  verify(victim4.nodeValue == "text5");
  verify(victim4.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on CDATA section with no
// siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "<![CDATA[text1]]>"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #8")
{
  var container = document.getElementById("container");
  verify(container);

  var target = container.childNodes[0];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.nodeValue == "replacement");
  verify(target.parentNode == container);
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on CDATA section with one
// following Text sibling

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "<![CDATA[text1]]>"
        "<span/>"
        "text2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #9")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var target = container.childNodes[0];
  var victim1 = container.childNodes[1];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text2");
  verify(victim1.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on Text with one following
// CDATA section sibling

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "<![CDATA[text2]]>"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #10")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var target = container.childNodes[0];
  var victim1 = container.childNodes[1];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text2");
  verify(victim1.parentNode == null);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on Text surrounded by comments
// and other text (testing that nothing inappropriate is replaced.)

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "protected1"
        "<!--comment1-->"
        "text1"
        "<!--comment2-->"
        "protected2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #11")
{
  var container = document.getElementById("container");
  verify(container);

  var protected1 = container.childNodes[0];
  var comment1 = container.childNodes[1];
  var target = container.childNodes[2];
  var comment2 = container.childNodes[3];
  var protected2 = container.childNodes[4];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == comment1);
  verify(target.nextSibling == comment2);
  verify(protected1.nodeValue == "protected1");
  verify(protected1.nextSibling == comment1);
  verify(protected2.nodeValue == "protected2");
  verify(protected2.previousSibling == comment2);
  verify(comment1.nodeValue == "comment1");
  verify(comment1.nextSibling == target);
  verify(comment2.nodeValue == "comment2");
  verify(comment2.previousSibling == target);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on Text surrounded by
// processing instructions and other text (testing that nothing
// inappropriate is replaced.)

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "protected1"
        "<?target1 data1?>"
        "text1"
        "<?target2 data2?>"
        "protected2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #12")
{
  var container = document.getElementById("container");
  verify(container);

  var protected1 = container.childNodes[0];
  var pi1 = container.childNodes[1];
  var target = container.childNodes[2];
  var pi2 = container.childNodes[3];
  var protected2 = container.childNodes[4];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == pi1);
  verify(target.nextSibling == pi2);
  verify(protected1.nodeValue == "protected1");
  verify(protected1.nextSibling == pi1);
  verify(protected2.nodeValue == "protected2");
  verify(protected2.previousSibling == pi2);
  verify(pi1.nodeValue == "data1");
  verify(pi1.nextSibling == target);
  verify(pi2.nodeValue == "data2");
  verify(pi2.previousSibling == target);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") on Text surrounded by elements
// with text nodes and other text (testing that nothing inappropriate
// is replaced.)

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "protected1"
        "<span>span1</span>"
        "text1"
        "<span>span2</span>"
        "protected2"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #13")
{
  var container = document.getElementById("container");
  verify(container);

  var protected1 = container.childNodes[0];
  var span1 = container.childNodes[1];
  var target = container.childNodes[2];
  var span2 = container.childNodes[3];
  var protected2 = container.childNodes[4];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == span1);
  verify(target.nextSibling == span2);
  verify(protected1.nodeValue == "protected1");
  verify(protected1.nextSibling == span1);
  verify(protected2.nodeValue == "protected2");
  verify(protected2.previousSibling == span2);
  verify(span1.textContent == "span1");
  verify(span1.nextSibling == target);
  verify(span2.textContent == "span2");
  verify(span2.previousSibling == target);
}

// --------------------------------------------------------------------
// text1.replaceWholeText("replacement") while listening for all those
// nasty mutation events.

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "text1"
        "<span/>"
        "text2"
        "<span/>"
        "text3"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.replaceWholeText #6")
{
  var container = document.getElementById("container");
  verify(container);

  /* Remove spans that divide our text nodes during parsing. */
  for (var spans = document.getElementsByTagNameNS("http://www.w3.org/1999/xhtml", "span"); spans.length != 0;)
    spans.item(0).parentNode.removeChild(spans.item(0));

  var eventsReceived = [];

  document.addEventListener("DOMNodeRemoved", function (ev)
    {
      eventsReceived.push(ev.type + ":" + ev.target.nodeName + ":" + ev.target.nodeValue);
    }, true);

  document.addEventListener("DOMCharacterDataModified", function (ev)
    {
      eventsReceived.push(ev.type + ":" + ev.target.nodeName + ":" + ev.target.nodeValue + ":" + ev.prevValue + "=>" + ev.newValue);
    }, true);

  var victim1 = container.childNodes[0];
  var target = container.childNodes[1];
  var victim2 = container.childNodes[2];
  var returned = target.replaceWholeText("replacement");

  verify(target == returned);
  verify(target.parentNode == container);
  verify(target.nodeValue == "replacement");
  verify(target.previousSibling == null);
  verify(target.nextSibling == null);
  verify(victim1.nodeValue == "text1");
  verify(victim1.parentNode == null);
  verify(victim2.nodeValue == "text3");
  verify(victim2.parentNode == null);

  eventsReceived = eventsReceived.sort().join(", ");

  verify(eventsReceived == "DOMCharacterDataModified:#text:replacement:text2=>replacement, DOMNodeRemoved:#text:text1, DOMNodeRemoved:#text:text3");
}
