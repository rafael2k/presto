group "DOM.Core.Document.functions.createAttribute.HTML";
require init;

language ecmascript;

html
{
  "<html><body></body></html>"
}

test("Call: Document.createAttribute #1")
{
  var attr = document.createAttribute("class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #2")
{
  var attr = document.createAttribute("foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #5")
  require undefined USE_HTML_PARSER_FOR_XML; // It will be too like XML 1.0 where this test requires XML 1.1
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

group "DOM.Core.Document.functions.createAttribute.XML10";
require init;

language ecmascript;

xml
{
  "<?xml version='1.0'?><!DOCTYPE root [<!ELEMENT root EMPTY>]><root/>"
}

test("Call: Document.createAttribute #1")
{
  var attr = document.createAttribute("class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #2")
{
  var attr = document.createAttribute("foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #5")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

group "DOM.Core.Document.functions.createAttribute.XML11";
require init;

language ecmascript;

xml
{
  "<?xml version='1.1'?><!DOCTYPE root [<!ELEMENT root EMPTY>]><root/>"
}

test("Call: Document.createAttribute #1")
{
  var attr = document.createAttribute("class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #2")
{
  var attr = document.createAttribute("foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttribute #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttribute #5")
  require undefined USE_HTML_PARSER_FOR_XML; // It will be too like XML 1.0 where this test requires XML 1.1
{
  var attr, exception;
  try
  {
    attr = document.createAttribute("\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.localName == null);
  verify(attr.nodeName == "\u1000");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

group "DOM.Core.Document.functions.createAttributeNS.HTML";
require init;

language ecmascript;

html
{
  "<html><body></body></html>"
}

test("Call: Document.createAttributeNS #1")
{
  var attr = document.createAttributeNS("http://www.w3.org/1999/xhtml", "class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.w3.org/1999/xhtml");
  verify(attr.prefix == null);
  verify(attr.localName == "class");
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #2")
{
  var attr = document.createAttributeNS("http://www.example.org/", "foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == null);
  verify(attr.localName == "foo");
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #5")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #6")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == "foo");
  verify(attr.localName == "bar");
  verify(attr.nodeName == "foo:bar");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

test("Call: Document.createAttributeNS #7")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", ":foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #8")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #9")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

group "DOM.Core.Document.functions.createAttributeNSNS.XML10";
require init;

language ecmascript;

xml
{
  "<?xml version='1.0'?><!DOCTYPE root [<!ELEMENT root EMPTY>]><root/>"
}

test("Call: Document.createAttributeNS #1")
{
  var attr = document.createAttributeNS("http://www.w3.org/1999/xhtml", "class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.w3.org/1999/xhtml");
  verify(attr.prefix == null);
  verify(attr.localName == "class");
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #2")
{
  var attr = document.createAttributeNS("http://www.example.org/", "foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == null);
  verify(attr.localName == "foo");
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #5")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #6")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == "foo");
  verify(attr.localName == "bar");
  verify(attr.nodeName == "foo:bar");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

test("Call: Document.createAttributeNS #7")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", ":foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #8")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #9")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

group "DOM.Core.Document.functions.createAttributeNSNS.XML11";
require init;

language ecmascript;

xml
{
  "<?xml version='1.1'?><!DOCTYPE root [<!ELEMENT root EMPTY>]><root/>"
}

test("Call: Document.createAttributeNS #1")
{
  var attr = document.createAttributeNS("http://www.w3.org/1999/xhtml", "class");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.w3.org/1999/xhtml");
  verify(attr.prefix == null);
  verify(attr.nodeName == "class");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #2")
{
  var attr = document.createAttributeNS("http://www.example.org/", "foo");

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
}

test("Call: Document.createAttributeNS #3")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #4")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "0");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr == undefined);
  verify(typeof exception == "object" && exception != null);
  verify(exception.code == DOMException.INVALID_CHARACTER_ERR);
}

test("Call: Document.createAttributeNS #5")
  require undefined USE_HTML_PARSER_FOR_XML; // It will be too like XML 1.0 where this test requires XML 1.1
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "\u1000");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == null);
  verify(attr.nodeName == "\u1000");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

test("Call: Document.createAttributeNS #6")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == "http://www.example.org/");
  verify(attr.prefix == "foo");
  verify(attr.localName == "bar");
  verify(attr.nodeName == "foo:bar");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}

test("Call: Document.createAttributeNS #7")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS("http://www.example.org/", ":foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #8")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo:bar");
  }
  catch(e)
  {
    exception = e;
  }

  verify(exception);
  verify(exception.code == DOMException.NAMESPACE_ERR);
}

test("Call: Document.createAttributeNS #9")
{
  var attr, exception;
  try
  {
    attr = document.createAttributeNS(null, "foo");
  }
  catch(e)
  {
    exception = e;
  }

  verify(attr);
  verify(attr.nodeType == Node.ATTRIBUTE_NODE);
  verify(attr.namespaceURI == null);
  verify(attr.prefix == null);
  verify(attr.nodeName == "foo");
  verify(attr.nodeValue == "");
  verify(exception == undefined);
}
