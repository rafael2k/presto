group "DOM.Core.Text.functions.splitText";
require init;

language ecmascript;

// --------------------------------------------------------------------
// Text.splitText(3) with no siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "012345"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #1")
{
  var container = document.getElementById("container");
  verify(container);

  var oldtext = container.childNodes[0];
  var newtext = oldtext.splitText(3);

  verify(oldtext.nodeValue == "012");
  verify(newtext.nodeValue == "345");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == null);
  verify(newtext.nextSibling == null);
  verify(newtext.previousSibling == oldtext);
}

// --------------------------------------------------------------------
// Text.split(3) with siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "<span/>"
        "012345"
        "<span/>"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #2")
{
  var container = document.getElementById("container");
  verify(container);

  var span1 = container.childNodes[0];
  var oldtext = container.childNodes[1];
  var span2 = container.childNodes[2];

  var newtext = oldtext.splitText(3);

  verify(oldtext.nodeValue == "012");
  verify(newtext.nodeValue == "345");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == span1);
  verify(newtext.nextSibling == span2);
  verify(newtext.previousSibling == oldtext);
}

// --------------------------------------------------------------------
// Text.splitText(0) with no siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "012345"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #3")
{
  var container = document.getElementById("container");
  verify(container);

  var oldtext = container.childNodes[0];
  var newtext = oldtext.splitText(0);

  verify(oldtext.nodeValue == "");
  verify(newtext.nodeValue == "012345");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == null);
  verify(newtext.nextSibling == null);
  verify(newtext.previousSibling == oldtext);
}

// --------------------------------------------------------------------
// Text.splitText(6) with no siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "012345"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #4")
{
  var container = document.getElementById("container");
  verify(container);

  var oldtext = container.childNodes[0];
  var newtext = oldtext.splitText(6);

  verify(oldtext.nodeValue == "012345");
  verify(newtext.nodeValue == "");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == null);
  verify(newtext.nextSibling == null);
  verify(newtext.previousSibling == oldtext);
}

// --------------------------------------------------------------------
// Text.splitText(6) with no siblings

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "012345"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #5")
{
  var container = document.getElementById("container");
  verify(container);

  var oldtext = container.childNodes[0];
  oldtext.nodeValue = "";
  var newtext = oldtext.splitText(0);

  verify(oldtext.nodeValue == "");
  verify(newtext.nodeValue == "");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == null);
  verify(newtext.nextSibling == null);
  verify(newtext.previousSibling == oldtext);
}

// --------------------------------------------------------------------
// Text.splitText(3) while listening for all those
// nasty mutation events.

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "012345"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #6")
{
  var container = document.getElementById("container");
  verify(container);

  var eventsReceived = [];

  document.addEventListener("DOMNodeInserted", function (ev)
    {
      eventsReceived.push(ev.type + ":" + ev.target.nodeName + ":" + ev.target.nodeValue);
    }, true);

  document.addEventListener("DOMCharacterDataModified", function (ev)
    {
      eventsReceived.push(ev.type + ":" + ev.target.nodeName + ":" + ev.target.nodeValue + ":" + ev.prevValue + "=>" + ev.newValue);
    }, true);

  var oldtext = container.childNodes[0];
  var newtext = oldtext.splitText(3);

  verify(oldtext.nodeValue == "012");
  verify(newtext.nodeValue == "345");
  verify(oldtext.parentNode == container);
  verify(newtext.parentNode == container);
  verify(oldtext.nextSibling == newtext);
  verify(oldtext.previousSibling == null);
  verify(newtext.nextSibling == null);
  verify(newtext.previousSibling == oldtext);

  eventsReceived = eventsReceived.sort().join(", ");

  verify(eventsReceived == "DOMCharacterDataModified:#text:012:012345=>012, DOMNodeInserted:#text:345");
}

// --------------------------------------------------------------------
// Text.splitText() returns cdata

xml
{
  "<html xmlns='http://www.w3.org/1999/xhtml'>"
    "<body>"
      "<div id='container'>"
        "<![CDATA[This is filler text]]>"
      "</div>"
    "</body>"
  "</html>"
}

test("Call: Text.splitText #7")
{
  verify(document);
  verify(document.getElementById);

  var container = document.getElementById("container");
  verify(container);

  var second = container.firstChild.splitText(0);
  verify(second);
  verify(second.nodeType == 4);
}
