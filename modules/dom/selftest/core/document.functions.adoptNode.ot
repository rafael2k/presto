group "DOM.Core.Document.functions.adoptNode";
require init;

include "modules/doc/frm_doc.h";
include "modules/dochand/fdelm.h";
include "modules/ecmascript/ecmascript.h";

/* The document in the iframe is the same as dom/selftest/core/document.functions.adoptNode.html. */

html
{
  "<html>"
    "<body>"
      "<iframe id='iframe1' src='data:text/html;base64,PGh0bWw+CiAgPGJvZHk+CiAgICA8cD5FbXB0eSBkb2N1bWVudC48L3A+CiAgPC9ib2R5Pgo8L2h0bWw+Cg=='></iframe>"
      "<div id='div1' class='foo' style='background-color: red'><span id='span1'/></div>"
    "</body>"
  "</html>"
}

test("Document.adoptNode #1")
  language ecmascript;
{
  window.div1 = document.getElementById('div1');
  window.div1_attributes = window.div1.attributes;
  window.div1_attributes0 = window.div1_attributes[0];
  window.div1_attributes1 = window.div1_attributes[1];
  window.div1_attributes2 = window.div1_attributes[2];
  window.div1_style = window.div1.style;
  window.div1_currentStyle = window.div1.currentStyle;
  window.div1_childNodes = window.div1.childNodes;
  window.span1 = div1_childNodes[0];
  window.span1_attributes = window.span1.attributes;
  window.span1_attributes0 = window.span1_attributes[0];

  window.iframe1 = document.getElementById('iframe1');
  window.iframe1.contentDocument.adoptNode(div1);

  verify(window.div1.ownerDocument == iframe1.contentDocument);
  verify(window.div1_attributes0.ownerDocument == iframe1.contentDocument);
  verify(window.div1_attributes1.ownerDocument == iframe1.contentDocument);
  verify(window.div1_attributes2.ownerDocument == iframe1.contentDocument);
  verify(window.span1.ownerDocument == iframe1.contentDocument);
  verify(window.span1_attributes0.ownerDocument == iframe1.contentDocument);
}

test("Document.adoptNode #1 (C++)")
  language c++;
  require success "Document.adoptNode #1";
{
  ES_Runtime *runtime = state.doc->GetESRuntime();
  ES_Runtime *expected = state.doc->GetIFrmRoot()->FirstChild()->GetCurrentDoc()->GetESRuntime();

  ES_Object *global = reinterpret_cast<ES_Object *>(runtime->GetGlobalObject());
  EcmaScript_Object *object;
  ES_Value value;

  verify(runtime->GetName(global, UNI_L("div1"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("div1_attributes"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("div1_attributes0"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("div1_attributes1"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("div1_attributes2"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("div1_style"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

#ifdef CURRENT_STYLE_SUPPORT
  verify(runtime->GetName(global, UNI_L("div1_currentStyle"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);
#endif // CURRENT_STYLE_SUPPORT

  verify(runtime->GetName(global, UNI_L("div1_childNodes"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("span1"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("span1_attributes"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);

  verify(runtime->GetName(global, UNI_L("span1_attributes0"), &value) == OpBoolean::IS_TRUE);
  verify(value.type == VALUE_OBJECT);
  verify((object = ES_Runtime::GetHostObject(value.value.object)) != NULL);
  verify(object->GetRuntime() == expected);
}
