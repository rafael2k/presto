/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2011 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "DOM.Core.Attribute.classList";
require init;

include "modules/dom/src/domenvironmentimpl.h";
include "modules/dom/src/domcore/domdoc.h";
include "modules/dom/src/domcore/element.h";

language ecmascript;

test("DOMTokenList")
{
	verify("DOMTokenList" in window);
	verify(DOMTokenList);
	verify(DOMTokenList.prototype);
	verify(DOMTokenList.prototype.constructor);
	verify(DOMTokenList.prototype.constructor === DOMTokenList);
	verify(DOMTokenList.prototype.constructor.prototype === DOMTokenList.prototype);
}

html
{
	//! <span>contents</span>
}
test("Simple classList DOMTokenList methods in created element")
{
	var created_element = document.createElement('testelement');
	verify(created_element);
	var cl = created_element.classList;
	verify(cl);
	cl.add('a');
	verify(cl[0] == 'a');
	verify(cl[1] === undefined);
	verify(cl.item(0) == 'a');
	verify(cl.item(1) === null);

	cl[0] = 'b';
	cl[1] = 'b';
	verify(cl.item(0) == 'a');
	verify(cl.item(1) == null);
}

test("Simple classList DOMTokenList methods in created element (strict)")
    require ES_CARAKAN;
{
	var created_element = document.createElement('testelement');
	verify(created_element);
	var cl = created_element.classList;
	verify(cl);
	cl.add('a');
	verify(cl[0] == 'a');
	verify(cl[1] === undefined);
	verify(cl.item(0) == 'a');
	verify(cl.item(1) === null);

	// Ensure strict mode using a function wrapper.
	function test_strict()
	{
		"use strict";
		try {
			cl[0] = 'b';
			cl[1] = 'b';
			// Must throw TypeError in strict mode.
			verify(false);
		} catch (e) {
			verify(e instanceof TypeError);
		}
		verify(cl.item(0) == 'a');
		verify(cl.item(1) == null);
		try {
			cl.length = 3;
			// Must throw TypeError in strict mode.
			verify(false);
		} catch (e) {
			verify(e instanceof TypeError);
		}
	}
	test_strict();
}

html
{
	//! <span>contents</span>
}
test("Existance of classList DOMTokenList methods in existing element")
{
	var el = document.querySelector('span');
	verify("classList" in el);
	var cl = el.classList;
	verify(cl === el.classList);
	verify(cl instanceof DOMTokenList);
	verify(cl.item);
	verify(cl.toggle);
	verify(cl.contains);
	verify(cl.remove);
	verify(cl.add);
	verify(cl.toString);
}

xml
{
	//! <svg xmlns="http://www.w3.org/2000/svg">
	//!     <rect width="10%" height="10%" />
	//! </svg>
}
test("SVG: Existance of classList DOMTokenList methods in existing element")
{
	var el = document.querySelector('rect');
	verify("classList" in el);
	var cl = el.classList;
	verify(cl === el.classList);
	verify(cl instanceof DOMTokenList);
	verify(cl.item);
	verify(cl.toggle);
	verify(cl.contains);
	verify(cl.remove);
	verify(cl.add);
	verify(cl.toString);
}

xml
{
	//! <svg xmlns="http://www.w3.org/2000/svg">
	//! <style>
	//!     .a {fill:red;}
	//!     .d {fill:green;}
	//! </style>
	//! <circle r="10" class="a b c">
	//!     <set attributeName="class" to="b d" dur="1s" fill="freeze"/>
	//! </circle>
	//! </svg>
}
test("SVG: classList value for animated class attribute") async;
{
	function after_animation()
	{
		var circle = document.querySelector('circle');
		var ok = true;
		if(ok) ok = circle.classList == 'b d';
		if(ok) ok = circle.classList[0] == 'b';
		if(ok) ok = circle.classList[1] == 'd';
		if (ok)
			ST_passed();
		else
			ST_failed('Wrong value of classList after SVG animation.',"","");
	}
	setTimeout(after_animation, 2000);
}

test("Garbage collector does not scare us - 1.")
{
	d = document.createElement('div');
	var classList = d.classList;
	d.classList.life = 42;
	verify(d.classList.life == 42);
	classList = null;
}
test("Garbage collector does not scare us - 2.")
language C++;
{
	g_ecmaManager->GarbageCollect();
}
test("Garbage collector does not scare us - 3.")
{
	verify(d.classList.life == 42);
}

html
{
	//! <span>contents</span>
}
test("Iteration over classList DOMTokenList created element")
{
	var el = document.createElement('testelement');
	var cl = el.classList;
	el.className = 'a';
	cl.add('b');
	cl.add('c');
	var seen_a = false;
	var seen_b = false;
	var seen_c = false;
	var seen_length = false;
	var seen_add = false;
	var seen_toString = false;
	var seen_toggle = false;
	var seen_remove = false;
	var seen_item = false;
	var seen_contains = false;
	for (i in cl)
	{
		if (i == 0)
		{
			verify(!seen_a);
			seen_a = true;
			verify(cl[i] == 'a');
		}
		else if (i == 1)
		{
			verify(!seen_b);
			seen_b = true;
			verify(cl[i] == 'b');
		}
		else if (i == 2)
		{
			verify(!seen_c);
			seen_c = true;
			verify(cl[i] == 'c');
		}
		else if (i == 'length'){ verify(!seen_length); seen_length = true;}
		else if (i == 'add'){ verify(!seen_add); seen_add = true;}
		else if (i == 'toString'){ verify(!seen_toString); seen_toString = true;}
		else if (i == 'toggle'){ verify(!seen_toggle); seen_toggle = true;}
		else if (i == 'remove'){ verify(!seen_remove); seen_remove = true;}
		else if (i == 'item'){ verify(!seen_item); seen_item = true;}
		else if (i == 'contains'){ verify(!seen_contains); seen_contains = true;}
	}
	verify(seen_a);
	verify(seen_b);
	verify(seen_c);
	verify(seen_length);
	verify(seen_add);
	verify(seen_toString);
	verify(seen_toggle);
	verify(seen_remove);
	verify(seen_item);
	verify(seen_contains);
}

table html_or_svg
{
	{html, "HTML", "<span class='a	 b a c'>contents</span>"}
	{svg, "SVG", "<svg xmlns='http://www.w3.org/2000/svg'><rect width='10%' height='10%' class='a	 b a c' /></svg>"}
}
foreach(doc_type, doc_type_str, doc_contents) from html_or_svg
{
	doc_type{doc_contents}
	test(doc_type_str " Simple classList DOMTokenList methods")
	{
		var el_name = doc_type_str == "HTML" ? 'span' : 'rect';
		var attrib_after_parse = doc_type_str == "HTML" ? 'a	 b a c' : 'a  b a c'; // XML normalizes tab to plain space.

		var classlist = document.querySelector(el_name).classList;
		verify(classlist == attrib_after_parse);
		verify(classlist[0] == 'a');
		verify(classlist[1] == 'b');
		verify(classlist[2] == 'a');
		verify(classlist[3] == 'c');
		verify(classlist.item(0) == 'a');
		verify(classlist.item(1) == 'b');
		verify(classlist.item(2) == 'a');
		verify(classlist.item(3) == 'c');
		verify(classlist.contains('a'));
		verify(classlist.contains('b'));
		verify(classlist.contains('c'));
		verify(!classlist.contains('d'));

		classlist.add('d');
		verify(classlist.contains('a'));
		verify(classlist.contains('b'));
		verify(classlist.contains('c'));
		verify(classlist.contains('d'));
		verify(!classlist.contains('e'));
		verify(classlist == attrib_after_parse + ' d');

		classlist.remove('a');
		verify(!classlist.contains('a'));
		verify(classlist.contains('b'));
		verify(classlist.contains('c'));
		verify(classlist.contains('d'));
		verify(!classlist.contains('e'));
		verify(classlist == 'b c d');

		classlist.toggle('b');
		verify(!classlist.contains('a'));
		verify(!classlist.contains('b'));
		verify(classlist.contains('c'));
		verify(classlist.contains('d'));
		verify(!classlist.contains('e'));
		verify(classlist == 'c d');

		classlist.toggle('a');
		verify(classlist.contains('a'));
		verify(!classlist.contains('b'));
		verify(classlist.contains('c'));
		verify(classlist.contains('d'));
		verify(!classlist.contains('e'));
		verify(classlist == 'c d a');

		var classlist_after = document.querySelector(el_name).classList;
		verify(classlist_after == 'c d a');
	}
}

html
{
	//! <style>
	//!     .a {background-color: red;}
	//!     .A {background-color: green;}
	//! </style>
	//! <span>contents1</span>
	//! <span class='a'>reference</span>
}

// DOMTokenList is always case sensitive, and so classList.
// But underlying CSS class selector matching in quirks mode
// is case insensitive, which results in inconsistency between
// view (as a result of CSS class selector matching) and classList.
test("Case sensitivity of classList DOMTokenList methods in quirks mode")
{
	var classlist = document.querySelector('span').classList;
	classlist.add('a');
	classlist.add('A');
	verify(document.querySelector('span').className == 'a A');
	verify(classlist.item(0) == 'a');
	verify(classlist.item(1) == 'A');
	verify(classlist.contains('A'));
	verify(classlist.contains('a'));
	var first_color = window.getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	var second_color = window.getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color == second_color);

	classlist.remove('a');
	verify(classlist.item(0) == 'A');
	verify(classlist.contains('A'));
	verify(!classlist.contains('a'));
	classlist.remove('A');
	verify(!classlist.contains('A'));
	verify(!classlist.contains('a'));

	verify(document.querySelector('span').classList == '');
	classlist.toggle('a');
	classlist.toggle('A');
	verify(classlist.contains('A'));
	verify(classlist.contains('a'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color == second_color);
	classlist.toggle('a');
	classlist.toggle('A');
	verify(!classlist.contains('A'));
	verify(!classlist.contains('a'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color != second_color);
	verify(document.querySelector('span').classList == '');
}

html
{
	//! <!doctype html>
	//! <style>
	//!     .a {background-color: red;}
	//!     .A {background-color: green;}
	//! </style>
	//! <span>contents</span>
	//! <span class="a">reference</span>
}

test("Case sensitivity of classList DOMTokenList methods in standards mode")
{
	var classlist = document.querySelector('span').classList;

	classlist.add('a');
	classlist.add('A');
	verify(classlist.item(0) == 'a');
	verify(classlist.item(1) == 'A');
	verify(classlist.contains('A'));
	verify(classlist.contains('a'));
	var first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	var second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color != second_color);

	classlist.remove('a');
	verify(classlist.item(0) == 'A');
	verify(classlist.contains('A'));
	verify(!classlist.contains('a'));
	classlist.remove('A');
	verify(!classlist.contains('A'));
	verify(!classlist.contains('a'));
	verify(document.querySelector('span').classList == '');

	classlist.toggle('a');
	verify(classlist.contains('a'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color == second_color);
	classlist.toggle('a');
	verify(!classlist.contains('a'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color != second_color);
	verify(document.querySelector('span').classList == '');

	classlist.toggle('A');
	verify(classlist.contains('A'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color != second_color);
	classlist.toggle('A');
	verify(!classlist.contains('A'));
	first_color = getComputedStyle(document.querySelectorAll('span')[0],null).backgroundColor;
	second_color = getComputedStyle(document.querySelectorAll('span')[1],null).backgroundColor;
	verify (first_color != second_color);
	verify(document.querySelector('span').classList == '');
}

test("classList reflects class attribute, DOMTokenList methods")
{
	var classlist = document.querySelector('span').classList;
	verify(classlist == '');
	classlist.add('a');
	verify(classlist == 'a');
	verify(document.querySelector('span').classList == 'a');
	verify(document.querySelector('span').className == 'a');

	classlist.remove('a');
	verify(classlist == '');
	verify(document.querySelector('span').classList == '');
	verify(document.querySelector('span').className == '');

	classlist.toggle('a');
	verify(classlist == 'a');
	verify(document.querySelector('span').classList == 'a');
	verify(document.querySelector('span').className == 'a');

	classlist.toggle('b');
	verify(classlist == 'a b');
	verify(document.querySelector('span').classList == 'a b');
	verify(document.querySelector('span').className == 'a b');

	document.querySelector('span').className = 'c';
	verify(document.querySelector('span').classList == 'c');
	verify(document.querySelector('span').className == 'c');
	verify(classlist == 'c');
}

table quirks_or_standards_mode
{
	{"standards", "<!doctype html><span>contents</span>"}
	{"quirks", "<span>other</span>"}
}
foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}

	test(html_type " classList DOMTokenList.toString()")
	{
		verify(document.querySelector('span').classList.toString() == '');
		document.querySelector('span').className = '';
		verify(document.querySelector('span').classList.toString() == '');
		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = delimiting_characters[i_char];
			verify(document.querySelector('span').classList.toString() == delimiting_characters[i_char]);

			var classstring = delimiting_characters[i_char] + 'a';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.toString() == classstring);

			classstring = 'a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.toString() == classstring);

			classstring = 'a' + delimiting_characters[i_char] + 'b';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.toString() == classstring);
		}
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}
	test(html_type " classList DOMTokenList.length")
	{
		verify(document.querySelector('span').classList.length == 0);

		var longclassname = 'a';
		for (var i = 0; i < 15; i++)
			longclassname += longclassname;
		document.querySelector('span').className = longclassname;
		verify(document.querySelector('span').classList.length == 1);

		document.querySelector('span').className = 'a b a c';
		verify(document.querySelector('span').classList.length == 4);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = delimiting_characters[i_char];
			verify(document.querySelector('span').classList.length == 0);

			var classstring = delimiting_characters[i_char] + 'a';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 1);

			classstring = 'a' + delimiting_characters[i_char] + 'b';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 2);

			classstring = 'a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 1);

			classstring = 'a' + delimiting_characters[i_char] + 'b';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 2);

			classstring = ' a b' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 2);

			classstring = ' a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.length == 1);
		}

		document.querySelector('span').className = 'a a A A';
		verify(document.querySelector('span').classList.length == 4);
		document.querySelector('span').classList.add('b');
		document.querySelector('span').classList.add('B');
		document.querySelector('span').classList.add('b');
		document.querySelector('span').classList.add('B');
		verify(document.querySelector('span').classList.length == 6);
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}

	test(html_type " classList DOMTokenList.item()")
	{
		verify(document.querySelector('span').classList.item(-1) === null);
		verify(document.querySelector('span').classList.item(0) === null);
		verify(document.querySelector('span').classList.item(1) === null);
		verify(document.querySelector('span').classList.item(2) === null);

		var longclassname = 'a';
		for (var i = 0; i < 15; i++)
			longclassname += longclassname;
		document.querySelector('span').className = longclassname;
		verify(document.querySelector('span').classList.item(-1) === null);
		verify(document.querySelector('span').classList.item(0) == longclassname);
		verify(document.querySelector('span').classList.item(1) === null);

		document.querySelector('span').className = 'a b a c';
		verify(document.querySelector('span').classList.item(-1) === null);
		verify(document.querySelector('span').classList.item(0) == 'a');
		verify(document.querySelector('span').classList.item(1) == 'b');
		verify(document.querySelector('span').classList.item(2) == 'a');
		verify(document.querySelector('span').classList.item(3) == 'c');
		verify(document.querySelector('span').classList.item(4) === null);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = delimiting_characters[i_char];
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === null);
			verify(document.querySelector('span').classList.item(1) === null);

			var classstring = delimiting_characters[i_char] + 'a';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === null);

			classstring = 'a' + delimiting_characters[i_char] + 'b';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === 'b');
			verify(document.querySelector('span').classList.item(2) === null);

			classstring = 'a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === null);

			classstring = 'a' + delimiting_characters[i_char] + 'b';
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === 'b');
			verify(document.querySelector('span').classList.item(2) === null);

			classstring = ' a b' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === 'b');
			verify(document.querySelector('span').classList.item(2) === null);

			classstring = ' a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.item(-1) === null);
			verify(document.querySelector('span').classList.item(0) === 'a');
			verify(document.querySelector('span').classList.item(1) === null);
		}
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}

	test(html_type " classList DOMTokenList array")
	{
		verify(document.querySelector('span').classList[-1] === undefined);
		verify(document.querySelector('span').classList[0] === undefined);
		verify(document.querySelector('span').classList[1] === undefined);
		verify(document.querySelector('span').classList[2] === undefined);

		document.querySelector('span').classList[0] = 'b';
		verify(document.querySelector('span').classList[-1] === undefined);
		verify(document.querySelector('span').classList[0] === undefined);
		verify(document.querySelector('span').classList[1] === undefined);
		verify(document.querySelector('span').classList[2] === undefined);

		document.querySelector('span').className = 'a';
		verify(document.querySelector('span').classList[-1] === undefined);
		verify(document.querySelector('span').classList[0] == 'a');
		verify(document.querySelector('span').classList[1] === undefined);
		verify(document.querySelector('span').classList[2] === undefined);

		document.querySelector('span').classList[0] = 'b';
		verify(document.querySelector('span').classList[-1] === undefined);
		verify(document.querySelector('span').classList[0] == 'a');
		verify(document.querySelector('span').classList[1] === undefined);
		verify(document.querySelector('span').classList[2] === undefined);
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}
	test(html_type " classList DOMTokenList.contains()")
	{
		verify(!document.querySelector('span').classList.contains('b'));

		var catched = false;
		try{
			document.querySelector('span').classList.contains('');
		}catch(e){
			verify(e.code == DOMException.SYNTAX_ERR);
			catched=true;
			verify(document.querySelector('span').classList == '');
		}
		verify(catched);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = '';
			catched = false;
			try{
				document.querySelector('span').classList.contains(delimiting_characters[i_char]);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			catched = false;
			try{
				var classstring = delimiting_characters[i_char] + 'a';
				document.querySelector('span').classList.contains(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.contains(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char];
				document.querySelector('span').classList.contains(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			document.querySelector('span').className = 'c d';
			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.contains(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == 'c d');
			}
			verify(catched);

			var classstring = ' a b' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.contains('a'));
			verify(document.querySelector('span').classList.contains('b'));

			classstring = ' a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			verify(document.querySelector('span').classList.contains('a'));
		}

		var longclassname = 'a';
		for (var i = 0; i < 15; i++)
			longclassname += longclassname;
		document.querySelector('span').className = longclassname;
		verify(document.querySelector('span').classList.contains(longclassname));

		document.querySelector('span').className = '';
		verify(!document.querySelector('span').classList.contains('b'));
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}
	test(html_type " classList DOMTokenList.add()")
	{
		document.querySelector('span').classList.add('b');
		verify(document.querySelector('span').classList == 'b');

		document.querySelector('span').className = '';
		var catched = false;
		try{
			document.querySelector('span').classList.add('');
		}catch(e){
			verify(e.code == DOMException.SYNTAX_ERR);
			catched=true;
			verify(document.querySelector('span').classList == '');
		}
		verify(catched);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = '';
			catched = false;
			try{
				document.querySelector('span').classList.add(delimiting_characters[i_char]);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			catched = false;
			try{
				var classstring = delimiting_characters[i_char] + 'a';
				document.querySelector('span').classList.add(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.add(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char];
				document.querySelector('span').classList.add(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			document.querySelector('span').className = 'c d';
			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.add(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == 'c d');
			}
			verify(catched);

			var classstring = ' a b' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			document.querySelector('span').classList.add('a');
			verify(document.querySelector('span').classList == classstring);

			classstring = ' a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			document.querySelector('span').classList.add('b');
			verify(document.querySelector('span').classList == classstring + 'b');
		}

		document.querySelector('span').className = '';
		document.querySelector('span').classList.add('b');
		verify(document.querySelector('span').classList == 'b');
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}
	test(html_type " classList DOMTokenList.remove()")
	{
		var catched = false;
		try{
			document.querySelector('span').classList.remove('');
		}catch(e){
			verify(e.code == DOMException.SYNTAX_ERR);
			catched=true;
			verify(document.querySelector('span').classList == '');
		}
		verify(catched);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = '';
			catched = false;
			try{
				document.querySelector('span').classList.remove(delimiting_characters[i_char]);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			catched = false;
			try{
				var classstring = delimiting_characters[i_char] + 'a';
				document.querySelector('span').classList.remove(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.remove(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			try{
				var classstring = 'a' + delimiting_characters[i_char];
				document.querySelector('span').classList.remove(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(catched);

			document.querySelector('span').className = 'a b';
			try{
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				document.querySelector('span').classList.remove(classstring);
			}catch(e){
				catched=true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == 'a b');
			}
			verify(catched);
		}

		var return_value = undefined;
		document.querySelector('span').className = 'a';
		return_value = document.querySelector('span').classList.remove('a');
		verify(return_value === undefined);
		return_value = document.querySelector('span').classList.remove('a');
		verify(return_value === undefined);
	}
}

foreach(html_type, html_contents) from quirks_or_standards_mode
{
	html{html_contents}
	test(html_type " classList DOMTokenList.toggle()")
	{
		var toggled = false;
		try {
			toggled = document.querySelector('span').classList.toggle('');
		} catch(e) {
			verify(e.code == DOMException.SYNTAX_ERR);
			catched = true;
			verify(document.querySelector('span').classList == '');
		}
		verify(!toggled);
		verify(catched);

		var delimiting_characters = ' \t\r\n\f';
		for (i_char in delimiting_characters)
		{
			document.querySelector('span').className = '';
			var toggled = undefined;
			var catched = false;

			// toggle(whitespace);
			try {
				toggled = document.querySelector('span').classList.toggle(delimiting_characters[i_char]);
			} catch(e) {
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				catched = true;
				verify(document.querySelector('span').classList == '');
			}
			verify(toggled === undefined);
			verify(catched);

			// toggle(whitespace + 'a');
			catched = false;
			try {
				var classstring = delimiting_characters[i_char] + 'a';
				toggled = document.querySelector('span').classList.toggle(classstring);
			} catch(e) {
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				catched = true;
				verify(document.querySelector('span').classList == '');
			}
			verify(toggled === undefined);
			verify(catched);

			// toggle('a' + whitespace);
			catched = false;
			try {
				var classstring = 'a' + delimiting_characters[i_char];
				toggled = document.querySelector('span').classList.toggle(classstring);
			} catch(e) {
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				catched = true;
				verify(document.querySelector('span').classList == '');
			}
			verify(toggled === undefined);
			verify(catched);

			// toggle('a' + whitespace + 'b');
			catched = false;
			try {
				var classstring = 'a' + delimiting_characters[i_char] + 'b';
				toggled = document.querySelector('span').classList.toggle(classstring);
			} catch(e) {
				catched = true;
				verify(e.code == DOMException.INVALID_CHARACTER_ERR);
				verify(document.querySelector('span').classList == '');
			}
			verify(toggled === undefined);
			verify(catched);

			// toggle('b') for already exisiting className = 'a' + whitespace.
			var classstring = 'a' + delimiting_characters[i_char];
			document.querySelector('span').className = classstring;
			toggled = document.querySelector('span').classList.toggle('b');
			verify(toggled === true);
			verify(document.querySelector('span').classList == classstring + 'b');
		}

		// Return value.
		document.querySelector('span').className = '';
		toggled = document.querySelector('span').classList.toggle('a');
		verify(toggled === true);
		toggled = document.querySelector('span').classList.toggle('b');
		verify(toggled === true);
		verify(document.querySelector('span').classList == 'a b');
		toggled = document.querySelector('span').classList.toggle('b');
		verify(toggled === false);
		toggled = document.querySelector('span').classList.toggle('a');
		verify(toggled === false);
	}
}

