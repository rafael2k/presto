// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
group "DOM.NumberConversion";
require init;

include "modules/dom/src/domobj.h";

language c++;

table tests_uint32 (double, unsigned int)
{
	{0, 0}
	{1, 1}
	{4232332323232., 1789536672}
	{4294967296.0, 0}
	{4294967297.1, 1}
	{4294967298.2, 2}
	{4294967298.6, 2}
	{4294967299.6, 3}
	{-1, 4294967295u}
	{-2, 4294967294u}
	{-2147483648.0, 2147483648u}
	{-2147483649.0, 2147483647u}
	{-2147483650.0, 2147483646u}
	{-4294967295.0, 1}
	{-4294967296.0, 0}
	{-4294967297.1, 4294967295u}
	{-4294967298.8, 4294967294u}
}

test("TruncateDoubleToUInt")
{
	iterate (value, expected) from tests_uint32
	{
		verify(DOM_Object::TruncateDoubleToUInt(value) == expected);
	}
}

table tests_int32 (double, int)
{
	{0, 0}
	{-1, -1}
	{-4232332323232., -1789536672}
	{-2147483649.0, 2147483647}
	{-2147483648.0, INT_MIN}
	{-2147483647.0, -2147483647}
	{-2147483646.0, -2147483646}
	{4294967296.0, 0}
	{4294967297.1, 1}
	{4294967298.2, 2}
	{4294967298.6, 2}
}

test("TruncateDoubleToInt")
{
	iterate (value, expected) from tests_int32
	{
		verify(DOM_Object::TruncateDoubleToInt(value) == expected);
	}
}

table tests_uint64 (double, double)
{
	{0, 0}
	{1, 1}
	{4232332323232., 4232332323232.}
	{4294967296.0, 4294967296.0}
	{4294967297.1, 4294967297.}
	{4294967298.2, 4294967298.}
	{4294967298.6, 4294967298.}
	{-1, 18446744073709551615.}
	{-2, 18446744073709551614.}
	{-2147483648.0, 18446744071562067968.}
	{-2147483649.0, 18446744071562067967.}
	{-2147483650.0, 18446744071562067966.}
	{-4294967295.0, 18446744069414584321.}
	{-4294967296.0, 18446744069414584320.}
	{-4294967297.1, 18446744069414584319.}
	{-4294967298.8, 18446744069414584318.}
}

test("ConvertDoubleToUnsignedLongLong")
{
	iterate (value, expected) from tests_uint64
	{
		double result;
		BOOL ok = DOM_Object::ConvertDoubleToUnsignedLongLong(value, DOM_Object::ModuloRange, result);
		verify(ok && result == expected);
	}
}

table tests_int64 (double, double)
{
	{0, 0}
	{1, 1}
	{4232332323232., 4232332323232.}
	{4294967296.0, 4294967296.0}
	{4294967297.1, 4294967297.}
	{4294967298.2, 4294967298.}
	{4294967298.6, 4294967298.}
	{-1, -1}
	{-2, -2}
	{-2147483648.0, -2147483648.}
	{-2147483649.0, -2147483649.}
	{-2147483650.0, -2147483650.}
	{-4294967295.0, -4294967295.}
	{-4294967296.0, -4294967296.}
	{-4294967297.1, -4294967297.}
	{-4294967298.8, -4294967298.}
}

test("ConvertDoubleToLongLong")
{
	iterate (value, expected) from tests_int64
	{
		double result;
		BOOL ok = DOM_Object::ConvertDoubleToLongLong(value, DOM_Object::ModuloRange, result);
		verify(ok && result == expected);
	}
}
