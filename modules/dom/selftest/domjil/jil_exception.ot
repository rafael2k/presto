/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright 2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "DOM.JIL.Widget.Exception";

require GADGET_SUPPORT;
require DOM_JIL_API_SUPPORT;
include "modules/security_manager/include/security_manager.h";
include "modules/gadgets/gadget_selftest_utils.h";

global
{
	OpSecurityManager::PrivilegedBlock disable_security;
	GadgetSelftestUtils g_utils;
}

exit
{
	g_utils.UnloadGadget();
}

table dummy1(const char *) filelist "widget_exception_test_wgt" recursively;

test("Load Widget")
	file zip_file "widget_exception_test_wgt/config.xml";
	async;
{
	OP_GADGET_STATUS status = g_utils.LoadGadgetForSelftest(zip_file, URL_GADGET_INSTALL_CONTENT);

	if (OpStatus::IsError(status))
		ST_failed("Unable to install test widget, status: %d", status);
	else if (status != OpGadgetStatus::OK_SIGNATURE_VERIFICATION_IN_PROGRESS)
		ST_passed();
}

test("Test ExceptionTypes")
	language ecmascript;
	require success "Load Widget";
{
	verify(Widget.ExceptionTypes.UNSUPPORTED == "unsupported");
	verify(Widget.ExceptionTypes.SECURITY == "security");
	verify(Widget.ExceptionTypes.INVALID_PARAMETER == "invalid_parameter");
	verify(Widget.ExceptionTypes.UNKNOWN == "unknown");
}

test("Test Exception")
	language ecmascript;
	require success "Test ExceptionTypes";
{
	var exception = new Widget.Exception;
	exception.message = "schab";
	exception.type = Widget.ExceptionTypes.UNSUPPORTED;
	try{
		throw exception;
	} catch(e) {
		verify(e);
		verify(e instanceof Widget.Exception);
		verify(e instanceof Error);
		verify(e.message == "schab");
		verify(e.type == Widget.ExceptionTypes.UNSUPPORTED);
	}
	exception.message = "wieprzowina";
	exception.type = Widget.ExceptionTypes.SECURITY;
	try{
		throw exception;
	} catch(e) {
		verify(e);
		verify(e.message == "wieprzowina");
		verify(e.type == Widget.ExceptionTypes.SECURITY);
	}
	exception.message = "boczek";
	exception.type = Widget.ExceptionTypes.INVALID_PARAMETER;
	try{
		throw exception;
	} catch(e) {
		verify(e);
		verify(e.message == "boczek");
		verify(e.type == Widget.ExceptionTypes.INVALID_PARAMETER);
	}
	exception.message = "golonka";
	exception.type = Widget.ExceptionTypes.SECURITY;
	try{
		throw exception;
	} catch(e) {
		verify(e);
		verify(e.message == "golonka");
		verify(e.type == Widget.ExceptionTypes.SECURITY);
	}
}

test("Test exception thrown by a method")
	language ecmascript;
	require success "Load Widget";
{
	try
	{
		Widget.preferenceForKey(null);	// throws INVALID_PARAMETER
	}
	catch(e)
	{
		verify(e instanceof Error);
		verify(e instanceof Widget.Exception);
		verift(e.type == Widget.ExceptionTypes.INVALID_PARAMETER);
	}
}
