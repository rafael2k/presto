/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright 2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "DOM.JIL.Widget.Events";

require GADGET_SUPPORT;
require DOM_JIL_API_SUPPORT;
include "modules/security_manager/include/security_manager.h";
include "modules/gadgets/gadget_selftest_utils.h";

global
{
	OpSecurityManager::PrivilegedBlock disable_security;
	GadgetSelftestUtils g_utils;
}

exit
{
	g_utils.UnloadGadget();
}

table dummy1(const char *) filelist "widget_1.2_test_wgt" recursively;

test("Load Widget 1.2 test gadget")
	file zip_file "widget_1.2_test_wgt/config.xml";
	async;
{
	OP_GADGET_STATUS status = g_utils.LoadGadgetForSelftest(zip_file, URL_GADGET_INSTALL_CONTENT);

	if (OpStatus::IsError(status))
		ST_failed("Unable to install test widget, status: %d", status);
	else if (status != OpGadgetStatus::OK_SIGNATURE_VERIFICATION_IN_PROGRESS)
		ST_passed();
}

test("Test 1.2 existance")
	language ecmascript;
	require success "Load Widget 1.2 test gadget";
{
	verify(Widget);
}

test("Test initial values of Widget events")
	language ecmascript;
	require success "Test 1.2 existance";
{
	verify(Widget.onRestore == null);
	verify(Widget.onMaximize == null);
	verify(Widget.onFocus == null);
	verify(Widget.onWakeup == null);
}

test("Test asigning values to Widget events")
	language ecmascript;
	require success "Test initial values of Widget events";
{
	function handle0()
	{
		verify(false);
	}
	Widget.onRestore = handle0;
	Widget.onMaximize = handle0;
	Widget.onFocus = handle0;
	Widget.onWakeup = handle0;
	verify(Widget.onRestore);
	verify(Widget.onMaximize);
	verify(Widget.onFocus);
	verify(Widget.onWakeup);

	Widget.onRestore = null;
	Widget.onMaximize = null;
	Widget.onFocus = null;
	Widget.onWakeup = null;
	verify(Widget.onRestore == null);
	verify(Widget.onMaximize == null);
	verify(Widget.onFocus == null);
	verify(Widget.onWakeup == null);
}
