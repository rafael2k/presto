/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright 2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.
** It may not be distributed under any circumstances.
*/

group "DOM.JIL.Telephony.CallRecord";

require GADGET_SUPPORT;
require DOM_JIL_API_SUPPORT;
include "modules/security_manager/include/security_manager.h";
include "modules/gadgets/gadget_selftest_utils.h";

global
{
	OpSecurityManager::PrivilegedBlock disable_security;
	GadgetSelftestUtils g_utils;
}

exit
{
	g_utils.UnloadGadget();
}

table dummy1(const char *) filelist "telephony_test_wgt" recursively;

test("Load Telephony test gadget")
	file zip_file "telephony_test_wgt/config.xml";
	async;
{
	OP_GADGET_STATUS status = g_utils.LoadGadgetForSelftest(zip_file, URL_GADGET_INSTALL_CONTENT);

	if (OpStatus::IsError(status))
		ST_failed("Unable to install test widget, status: %d", status);
	else if (status != OpGadgetStatus::OK_SIGNATURE_VERIFICATION_IN_PROGRESS)
		ST_passed();
}

test("Telephony.CallRecord initial properties")
	language ecmascript;
	require success "Load Telephony test gadget";
{
	var cr = new Widget.Telephony.CallRecord;
	verify(cr.callRecordAddress === undefined);
	verify(cr.callRecordId === undefined);
	verify(cr.callRecordName === undefined);
	verify(cr.callRecordType === undefined);
	verify(cr.durationSeconds === undefined);
	// For dates we only support null.
	// In practice null vs. undefined shouldn't matter
	verify(cr.startTime == null);

	verify(cr instanceof Widget.Telephony.CallRecord);
}

test("Telephony.CallRecord put properties")
	language ecmascript;
	require success "Telephony.CallRecord initial properties";
{
	var cr = new Widget.Telephony.CallRecord;

	cr.callRecordAddress = 'address';
	cr.callRecordId = 'id';
	cr.callRecordName = 'name';
	cr.callRecordType = Widget.Telephony.CallRecordTypes.OUTGOING;
	cr.durationSeconds = 7;
	var now = new Date();
	cr.startTime = now;

	verify(cr.callRecordAddress == 'address');
	verify(cr.callRecordId == 'id');
	verify(cr.callRecordName == 'name');
	verify(cr.callRecordType == Widget.Telephony.CallRecordTypes.OUTGOING);
	verify(cr.durationSeconds == 7);
	verify(cr.startTime == now.toString());
}

test("Telephony.CallRecord put wrong properties")
	language ecmascript;
	require success "Telephony.CallRecord initial properties";
{
	var cr = new Widget.Telephony.CallRecord;

	cr.callRecordAddress = 7;
	cr.callRecordId = 8;
	cr.callRecordName = 9;
	cr.callRecordType = 10;
	var error_caught = false;
	try {
		cr.durationSeconds = 'a';
	} catch(e) {
		error_caught = true;
		verify(e.message == 'TYPE_MISMATCH_ERR');
		verify(e.name == 'Error');
	}
	verify(error_caught == true);
	error_caught = false;
	try {
		cr.startTime = 'b';
	} catch(e) {
		error_caught = true;
		verify(e.message == 'TYPE_MISMATCH_ERR');
		verify(e.name == 'Error');
	}
	verify(error_caught == true);

	verify(cr.callRecordAddress == '7');
	verify(cr.callRecordId == '8');
	verify(cr.callRecordName == '9');
	verify(cr.callRecordType == '10');
	verify(cr.durationSeconds === undefined);
	verify(cr.startTime == null);
}

