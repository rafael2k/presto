// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
group "DOM.textselection";

include "modules/dom/src/dominternaltypes.h";
include "modules/doc/frm_doc.h";

require init;

require DOM_SELECTION_SUPPORT;

language ecmascript;

html
{
	"<html><head><title>Select node testcase</title></head><body>"
		"<h3>Select node testcase</h3><p>"
		"This is test <strong id='elm'>some</strong> "
		"<span id='empty'></span>contents.</p>"
		"<p id='last'>Last text</p></body></html>"
}

test("document.selection gone")
{
	verify(!('selection' in document));
}



test("Select element with addRange")
{
	verify("getSelection" in window);
	var sel = window.getSelection();
	verify(sel);
	verify("createRange" in document);
	var rng = document.createRange();
	verify(rng);
	verify("selectNode" in rng);
	var elm = document.getElementById('elm');
	verify(elm);
	rng.selectNode(elm);
	verify("removeAllRanges" in sel);
	verify("addRange" in sel);
	sel.removeAllRanges();
	sel.addRange(rng);

	// Check that it was actually selected
	verify(window.getSelection() == "some");
}

html
{
	//! <html><head><title></title></head><body>
	//! <p>This text should be selected.</p></body></html>
}

test("selection.extend")
	require DOCUMENT_EDIT_SUPPORT;
{
	var log=document.getElementsByTagName('p')[0].firstChild;
	verify(log.data=='This text should be selected.');
	var sel = window.getSelection();
	verify(sel);
	document.designMode='on';
	sel.collapse(log,log.data.length);
	// Check that it was actually selected
	verify(sel == "");
	sel.extend(log,0);
	verify(sel == 'This text should be selected.');
}

html
{
	//! <!DOCTYPE html><html><head>
	//! <title>contenteditable removeallranges</title></head>
	//! <body>
	//!   <div contentEditable id="e">foo</div>
	//! </body></html>
}

test("removeAllRanges shouldn't affect activeElement")
	require DOCUMENT_EDIT_SUPPORT;
{
	// Bug CORE-22416
	var e = document.getElementById('e');
	verify(e);
	e.focus();
	verify(document.activeElement == e);
	getSelection().removeAllRanges();
	verify(document.activeElement == e);
	var r = document.createRange();
	verify(r);
	r.setStart(e.firstChild, 0);
	r.setEnd(e.firstChild, 0);
	getSelection().addRange(r);
	verify(document.activeElement == e);
}

html
{
	//! <!DOCTYPE html><html><head>
	//! <title>form element removeallranges</title></head>
	//! <body>
	//!   <textarea id="e">foo</textarea>
	//! </body></html>
}

test("removeAllRanges shouldn't affect activeElement, form element")
{
	var e = document.getElementById('e');
	verify(e);
	e.focus();
	verify(document.activeElement == e);
	getSelection().removeAllRanges();
	verify(document.activeElement == e);
	var r = document.createRange();
	verify(r);
	r.setStart(e.firstChild, 0);
	r.setEnd(e.firstChild, 0);
	getSelection().addRange(r);
	verify(document.activeElement == e);
}

html
{
	//! <!DOCTYPE html><html>
	//! <body><p>abcdefg<b>hiklmnopqr</b>stuvwxyz</p></body></html>
}

test("selectAllChildren")
{
	var sel = getSelection();
	verify(sel);

	var p = document.getElementsByTagName('p')[0];
	verify(p);

	sel.selectAllChildren(p);
	verify(String(sel) == p.textContent);
	verify(sel.getRangeAt(0).commonAncestorContainer == p);

	p = p.firstChild;
	verify(p && p.nodeType == Node.TEXT_NODE);

	sel.selectAllChildren(p);
	verify(String(sel) == "");
	verify(sel.getRangeAt(0).commonAncestorContainer == p);
}

html
{
	//! <!DOCTYPE html><html>
	//! <body><input type="button" onclick="javascript:void();" value="Test" /></body></html>
}

test("Adding a collapsed range to a selection")
	require DOCUMENT_EDIT_SUPPORT;
{
	document.designMode = 'on';
	var button = document.getElementsByTagName('input')[0];
	verify(button);
	button.click();
	var s = window.getSelection();
	verify(s);
	var r = s.getRangeAt(0);
	verify(r);
	r.collapse(1);
	verify(r.collapsed);
	s.removeAllRanges();
	s.addRange(r);
	s = window.getSelection();
	verify(s);
	r = s.getRangeAt(0);
	verify(r);
	verify(r.collapsed);
}

exit
{
	state.doc->GetHLDocProfile()->SetHandleScript(TRUE);
#ifdef DOCUMENT_EDIT_SUPPORT
	state.doc->SetEditable(FramesDocument::DESIGNMODE_OFF);
#endif // DOCUMENT_EDIT_SUPPORT
}
