/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2010 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "DOM.opera.widgetmanager";
language ecmascript;
require defined(DOM_WIDGETMANAGER_SUPPORT) || defined(DOM_UNITEAPPMANAGER_SUPPORT) || defined(DOM_EXTENSIONMANAGER_SUPPORT);

include "modules/ecmascript/ecmascript.h";
include "modules/prefs/prefsmanager/collections/pc_webserver.h";
include "modules/gadgets/OpGadgetManager.h";
include "modules/doc/frm_doc.h";

html
{
	""
}


test("opera.widgetManager presence")
	require DOM_WIDGETMANAGER_SUPPORT;
{
	verify(opera.widgetManager);
}

test("opera.widgetManager API presence")
	require success "opera.widgetManager presence";
{
	verify(opera.widgetManager.install);
	verify(opera.widgetManager.uninstall);
	verify(opera.widgetManager.run);
	verify(opera.widgetManager.kill);
	verify(opera.widgetManager.checkForUpdate);
	verify(opera.widgetManager.setWidgetMode);
}

test("opera.widgetManager.widgets presence")
	require success "opera.widgetManager presence";
{
	verify(opera.widgetManager.widgets);
}

test("opera.widgetManager.widgets.count")
	require success "opera.widgetManager.widgets presence";
{
	var wdgts = opera.widgetManager.widgets;
	var count;
	for (count = 0; wdgts[count]; ++ count)
	{
	}
	verify(count == wdgts.count);
}

test("opera.uniteApplicationManager presence")
	require DOM_UNITEAPPMANAGER_SUPPORT;
{
	verify(opera.uniteApplicationManager);
}

test("opera.uniteApplicationManager API presence")
	require success "opera.uniteApplicationManager presence";
{
	verify(opera.uniteApplicationManager.install);
	verify(opera.uniteApplicationManager.uninstall);
	verify(opera.uniteApplicationManager.run);
	verify(opera.uniteApplicationManager.kill);
	verify(opera.uniteApplicationManager.checkForUpdate);
}

test("opera.uniteApplicationManager.widgets presence")
	require success "opera.uniteApplicationManager presence";
{
	verify(opera.uniteApplicationManager.widgets);
}

test("opera.uniteApplicationManager.widgets.count")
	require success "opera.uniteApplicationManager.widgets presence";
{
	var wdgts = opera.uniteApplicationManager.widgets;
	var count;
	for (count = 0; wdgts[count]; ++ count)
	{
	}
	verify(count == wdgts.count);
}

test("Home app present")
	language c++;
	require success "opera.uniteApplicationManager.widgets presence";
{
	bool unite_running = false;
#ifdef WEBSERVER_SUPPORT
	/* Check if the preconditions for installing the 'home app' have been
	   fulfilled and one or more gadgets have been installed.

	   Not 100%, but good enough to not require restarts on changing the
	   below prefs. */
	if (g_pcwebserver->GetIntegerPref(PrefsCollectionWebserver::WebserverAlwaysOn) && g_pcwebserver->GetIntegerPref(PrefsCollectionWebserver::WebserverEnable))
		unite_running = g_gadget_manager->NumGadgets() > 0;
#endif // WEBSERVER_SUPPORT
	ES_Runtime *source_runtime = state.doc->GetESRuntime();
	ES_Value value;

	value.type = VALUE_BOOLEAN;
	value.value.boolean = unite_running;
	verify_success(source_runtime->PutName(source_runtime->GetGlobalObject(), UNI_L("unite_running"), value));
}

test("Home app installed")
	require success "Home app present";
{
	verify(typeof unite_running == 'boolean');
	var min = unite_running ? 0 : (-1);
	verify(opera.uniteApplicationManager.widgets.count > min);
}

test("opera.extensionManager presence")
	require DOM_EXTENSIONMANAGER_SUPPORT;
{
	verify(opera.extensionManager);
}

test("opera.extensionManager API presence")
	require success "opera.extensionManager presence";
{
	verify(opera.extensionManager.install);
	verify(opera.extensionManager.uninstall);
	verify(opera.extensionManager.run);
	verify(opera.extensionManager.kill);
	verify(opera.extensionManager.checkForUpdate);
}

test("opera.extensionManager.widgets presence")
	require success "opera.extensionManager presence";
{
	verify(opera.extensionManager.widgets);
}

test("opera.extensionManager.widgets.count")
	require success "opera.extensionManager.widgets presence";
{
	var wdgts = opera.extensionManager.widgets;
	var count;
	for (count = 0; wdgts[count]; ++ count)
	{
	}
	verify(count == wdgts.count);
}
