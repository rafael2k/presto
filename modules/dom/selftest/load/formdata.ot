// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-

group "DOM.Load.FormData";
require init;
require DOM_HTTP_SUPPORT;
require _FILE_UPLOAD_SUPPORT_;

include "modules/forms/formvalue.h";
include "modules/logdoc/htm_elm.h";

language ecmascript;

html "";

test("Constructor")
{
	verify("FormData" in window);
	verify(FormData.prototype);
	verify(FormData.prototype.constructor);
	verify(FormData.prototype.constructor === FormData);
}

test("Prototype")
{
	verify("FormData" in window);
	verify(FormData.prototype);
	var p = FormData.prototype;
	verify("append" in p);
}

test("Instance #1")
{
	verify("FormData" in window);
	var f = new FormData();
	verify(f);

	verify("append" in f);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="submit-name" type="text" value="thing">
	//! <input name="filen" type="file" max="4">
	//! </form></body></html>
}

test("Instance #2")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	verify("append" in f);
}

test("append #1")
{
	verify("FormData" in window);
	var f = new FormData();
	verify(f);

	verify("append" in f);
	f.append("a", "b");
	f.append("b", "c");
	f.append("num", 2);
	f.append("null", null);
	f.append("undefined", f.foo);
	f.append("getter", {toString: function () { return "v"; }});
}

test("append #2")
{
	verify("FormData" in window);
	var f = new FormData();
	verify(f);

	verify("append" in f);
	try {
		f.append();
		verify(!"Method has 2 required arguments, should throw.");
	} catch (e) {
		verify(e.message.indexOf("WRONG_ARGUMENTS_ERR") == 0);
	}
	try {
		f.append("a");
		verify(!"Method has 2 required arguments, should throw.");
	} catch (e) {
		verify(e.message.indexOf("WRONG_ARGUMENTS_ERR") == 0);
	}
}

test("FormData form #1")
{
	verify("FormData" in window);
	var f = new FormData();
	verify(f);

	verify("append" in f);
	f.append("a", "baz");
	f.append("foo", true);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"a\"') >= 0);
	/* NOTE: not using RegExp literals for the benefit of
	   all versions of pike and the selftest parser. */
	verify(str.search(new RegExp("^baz$")));
	verify(str.indexOf('name=\"foo\"') >= 0);
	verify(str.search(new RegExp("^true$")));
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="submit-name" type="text" value="thing">
	//! <input name="r1" type="radio" value="g1" checked>
	//! <input name="r2" type="radio" value="g1">
	//! <select name="selecteds" multiple>
	//!  <option value="a1" selected>a</option>
	//!  <option value="b1" selected>b</option>
	//!  <option value="c1">c</option>
	//! </select>
	//! </form></body></html>
}

test("FormData form #2")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"submit-name\"') >= 0);
	verify(str.search(new RegExp("^thing$")));
	verify(str.indexOf('name=\"r1\"') >= 0);
	verify(str.search(new RegExp("^g1$")));
	verify(str.indexOf('name=\"selecteds\"') >= 0);
	verify(str.search(new RegExp("^a1$")));
	verify(str.indexOf('name=\"selecteds\"') >= 0);
	verify(str.search(new RegExp("^b1$")));
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="button-name" type="button" value="thing">
	//! </form></body></html>
}

test("FormData form #3")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"button-name\"') < 0);
	verify(str.search(new RegExp("^thing$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="checkbox-name" type="checkbox" value="thing">
	//! </form></body></html>
}

test("FormData form #4")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"checkbox-name\"') < 0);
	verify(str.search(new RegExp("^thing$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="radio-name" type="radio" value="thing">
	//! </form></body></html>
}

test("FormData form #5")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"radio-name\"') < 0);
	verify(str.search(new RegExp("^thing$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input type="radio" value="thing" checked>
	//! </form></body></html>
}

test("FormData form #6")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.search(new RegExp("^thing$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="submit-name" type="submit" value="thing">
	//! </form></body></html>
}

test("FormData form #7")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"submit-name\"') < 0);
	verify(str.search(new RegExp("^thing$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="checkbox-name" type="checkbox" checked>
	//! </form></body></html>
}

test("FormData form #8")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"checkbox-name\"') >= 0);
	verify(str.search(new RegExp("^on$")));
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="radio-name" type="radio" checked>
	//! </form></body></html>
}

test("FormData form #9")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"radio-name\"') >= 0);
	verify(str.search(new RegExp("^on$")));
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input name="radio-name" type="radio" checked disabled>
	//! </form></body></html>
}

test("FormData form #10")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"radio-name\"') < 0);
	verify(str.search(new RegExp("^on$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <datalist>
	//! <input name="radio-name" type="radio" checked>
	//! </datalist>
	//! </form></body></html>
}

test("FormData form #12")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"radio-name\"') < 0);
	verify(str.search(new RegExp("^on$")) < 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input id="F1" name="file-name" type="file">
	//! </form></body></html>
}

test("Setup form #13")
    language C++;
    file uni testfile_uni "input/abc.txt";
{
	HTML_Element* file_input = find_element_id("F1");
	verify(file_input);
	FormValue* form_value = file_input->GetFormValue();
	verify(form_value);
	verify_success(form_value->SetValueFromText(file_input, testfile_uni));
}

test("FormData form #13")
	require success "Setup form #13";
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"file-name\"') >= 0);
	verify(str.indexOf('filename=\"abc.txt\"') >= 0);
	var pos = str.indexOf('text/plain');
	verify(pos >= 0);
	verify(str.search(new RegExp("INPUT")) >= 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input id="b" name="button_name" type="text" value="a"></input>
	//! </form></body></html>
}

test("FormData form #14")
{
	verify("FormData" in window);
	verify(document);
	verify(document.forms);
	var b = document.getElementById("b");
	verify(b);
	var expected = "h\u00e5!";
	b.value = expected;
	verify(b.value == expected);
	var f = new FormData(document.forms[0]);
	verify(f);

	var str = f.toUploadString();
	verify(str.indexOf(expected) >= 0);
}

html
{
	//! <html><body>
	//! <form action="http://localhost:8080/lek.jsp" method="post"
	//!       enctype="multipart/form-data">
	//! <input id="F1" name="file-name" type="file">
	//! </form></body></html>
}

test("Setup form #15")
    language C++;
    file uni testfile_uni "input/abc.txt";
{
	HTML_Element* file_input = find_element_id("F1");
	verify(file_input);
	FormValue* form_value = file_input->GetFormValue();
	verify(form_value);
	verify_success(form_value->SetValueFromText(file_input, testfile_uni));
}

test("FormData form #15")
	require success "Setup form #15";
{
	verify("FormData" in window);
	verify(document);
	verify("getElementById" in document);
	var file = document.getElementById("F1");
	verify(file);
	verify("files" in file);
	verify(file.files.length > 0);
	var f1 = file.files[0];
	verify(f1);
	f1 = f1.slice(1, 10);
	verify(f1);

	var f = new FormData();
	verify(f);
	f.append("my-field", f1, "my-blob");

	var str = f.toUploadString();
	verify(str.indexOf('name=\"my-field\"') >= 0);
	verify(str.indexOf('filename=\"my-blob\"') >= 0);
	verify(str.indexOf('application/octet-stream') >= 0);
	verify(str.search(new RegExp("^NPUT", "m")) >= 0);
}

test("FormData form #16")
{
	verify("FormData" in window);
	verify(document);
	verify("getElementById" in document);
	var u = new Uint8Array(2);
	verify(u);

	// Test hack: toUploadString() assumes the upload buffer is UTF-8 encoded,
	// and decode it as such, hence write the encoded representiation
	// of U+00F8 (oslash) into the byte array.
	u[0] = 0xc3;
	u[1] = 0xb8;
	var f1 = new Blob([" hey", "world", u.buffer]);
	verify(f1);
	f1 = f1.slice(1, 100);
	verify(f1);

	var f = new FormData();
	verify(f);
	f.append("my-field", f1);

	var str = f.toUploadString();
	verify(str.indexOf('name=\"my-field\"') >= 0);
	verify(str.indexOf('filename=\"blob\"') >= 0);
	verify(str.indexOf('application/octet-stream') >= 0);
	verify(str.search(new RegExp("^heyworld\u00f8", "m")) >= 0);
}

test("FormData clone #1")
	require DOM_WEBWORKERS_SUPPORT;
	async;
{
	verify("FormData" in window);
	var f = new FormData();
	verify(f);

	verify("append" in f);
	f.append("foo", "bar");

	function checkUpload(f)
	{
		var str = f.toUploadString();
		verify(str.indexOf('name=\"foo\"') >= 0);
		verify(str.search(new RegExp("^bar$")));
	}
	checkUpload(f);

	/* An echo worker; verify that FormData is cloned across OK. */
	var w = new Worker('data:application/x-javascript,onmessage=function(e){postMessage(e.data);}');
	function on_message(e)
	{
		if (e.data instanceof FormData)
		{
			checkUpload(e.data);
			ST_passed();
		}
		else
			ST_failed("e.data was '" + e.data + "', expected FormData", "formdata.ot", 1);
		try { w.terminate(); } catch(e){};
	}
	function on_error(e)
	{
		ST_failed("Exception raised: " + e.message, "formdata.ot", 1);
		try { w.terminate(); } catch(e){};
	}
	w.onmessage = on_message;
	w.onerror = on_error;
	w.postMessage(f);
}
