group "DOM.HTML.HTMLTableElement.properties.basic";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<thead>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</thead>"
        "<tfoot>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tfoot>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
      "<table align='center' bgColor='#0088ff' summary='[summary]' width='80%' border='10' frame='above' rules='rows' cellpadding='5' cellspacing='20'>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
      "</table>"
    "</body>"
  "</html>"
}

test("Setup")
{
  checkProperties_HasProperty = function checkProperties_HasProperty(node, properties)
  {
    for (var index = 0; index < properties.length; ++index)
      if (!(properties[index] in node))
        throw "HasProperty: '" + properties[index] + "' not found";
    return true;
  }

  checkProperties_Enumerate = function checkProperties_Enumerate(node, properties)
  {
    outer: for (var index = 0; index < properties.length; ++index)
    {
      for (var property in node)
        if (property == properties[index])
          continue outer;
      throw "Enumerate: '" + properties[index] + "' not found";
    }
    return true;
  }

  checkProperties_Get = function checkProperties_Get(node, properties, values)
  {
    for (var index = 0; index < properties.length; ++index)
    {
      if (properties[index] in values)
        if (!(node[properties[index]] == values[properties[index]]))
          throw "Get: '" + properties[index] + "' wrong, is '" + node[properties[index]] + "', should be '" + values[properties[index]] + "'";
    }
    return true;
  }

  checkProperties_PutNotAllowed = function checkProperties_PutNotAllowed(node, properties)
  {
    "use strict";
    for (var index = 0; index < properties.length; ++index)
    {
      var error = null;
      try
      {
        old_value = node[properties[index]];
        if (typeof(old_value) == "string")
          new_value = 10;
        else
          new_value = "foo";
        node[properties[index]] = new_value;
        if (!(node[properties[index]] == old_value))
          error = "PutNotAllowed: '" + properties[index] + "' changed value and didn't throw exception";
        else
          error = "PutNotAllowed: '" + properties[index] + "' didn't throw exception";
      }
      catch(e)
      {
        if (!(e instanceof TypeError))
          error = "PutNotAllowed: '" + properties[index] + "' threw exception other than TypeError";
        else
          if (!(node[properties[index]] == old_value))
            error = "PutNotAllowed: '" + properties[index] + "' threw exception but changed value";
      }
      if (error != null)
        throw error;
    }
    return true;
  }

  properties = [ "caption", "tHead", "tFoot", "rows", "tBodies", "align",
                 "bgColor", "border", "cellPadding", "cellSpacing",
                 "frame", "rules", "summary", "width" ];

  table1 = document.getElementsByTagNameNS("*", "table").item(0);
  verify(table1);
  verify(table1.toString() == "[object HTMLTableElement]");

  table2 = document.getElementsByTagNameNS("*", "table").item(1);
  verify(table2);
  verify(table2.toString() == "[object HTMLTableElement]");

  caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  verify(caption1);
  verify(caption1.toString() == "[object HTMLTableCaptionElement]");

  thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  verify(thead1);
  verify(thead1.toString() == "[object HTMLTableSectionElement]");

  tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  verify(tfoot1);
  verify(tfoot1.toString() == "[object HTMLTableSectionElement]");

  tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);
  verify(tbody1);
  verify(tbody1.toString() == "[object HTMLTableSectionElement]");

  tbody2 = document.getElementsByTagNameNS("*", "tbody").item(1);
  verify(tbody2);
  verify(tbody2.toString() == "[object HTMLTableSectionElement]");

  tbody3 = document.getElementsByTagNameNS("*", "tbody").item(2);
  verify(tbody3);
  verify(tbody3.toString() == "[object HTMLTableSectionElement]");
}

test("HTMLTableElement [[HasProperty]]")
  require success "Setup";
{
  checkProperties_HasProperty(table1, properties);
  checkProperties_Enumerate(table1, properties);
}

test("HTMLTableElement [[Get]] #1")
  require success "Setup";
{
  checkProperties_Get(table1, properties, { caption: caption1,
                                            tHead: thead1,
                                            tFoot: tfoot1,
                                            align: "",
                                            bgColor: "",
                                            border: "",
                                            cellPadding: "",
                                            cellSpacing: "",
                                            frame: "",
                                            rules: "",
                                            summary: "",
                                            width: "" });
}

test("HTMLTableElement [[Get]] #2")
  require success "Setup";
{
  checkProperties_Get(table2, properties, { caption: null,
                                            tHead: null,
                                            tFoot: null,
                                            align: "center",
                                            bgColor: "#0088ff",
                                            border: "10",
                                            cellPadding: "5",
                                            cellSpacing: "20",
                                            frame: "above",
                                            rules: "rows",
                                            summary: "[summary]",
                                            width: "80%" });
}

group "DOM.HTML.HTMLTableElement.properties.rows";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<thead>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</thead>"
        "<tfoot>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tfoot>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
      "<table align='center' bgColor='#0088ff' summary='[summary]' width='80%' border='10' frame='above' rules='rows' cellpadding='5' cellspacing='20'>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
      "</table>"
    "</body>"
  "</html>"
}

test("Setup")
{
  table1 = document.getElementsByTagNameNS("*", "table").item(0);
  table2 = document.getElementsByTagNameNS("*", "table").item(1);
  caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);
  tbody2 = document.getElementsByTagNameNS("*", "tbody").item(1);
  tbody3 = document.getElementsByTagNameNS("*", "tbody").item(2);
}

test("HTMLTableElement.rows #1")
{
  var rows = table1.rows;
  verify(rows == table1.rows);
  verify(rows.toString() == "[object HTMLCollection]");
  verify(rows.length == 8);
  verify(rows.item(0) == thead1.childNodes.item(0));
  verify(rows.item(1) == thead1.childNodes.item(1));
  verify(rows.item(2) == tfoot1.childNodes.item(0));
  verify(rows.item(3) == tfoot1.childNodes.item(1));
  verify(rows.item(4) == tbody1.childNodes.item(0));
  verify(rows.item(5) == tbody1.childNodes.item(1));
  verify(rows.item(6) == tbody2.childNodes.item(0));
  verify(rows.item(7) == tbody2.childNodes.item(1));
}

test("HTMLTableElement.rows #2")
{
  var rows = table2.rows;
  verify(rows == table2.rows);
  verify(rows.toString() == "[object HTMLCollection]");
  verify(rows.length == 3);
  verify(rows.item(0) == tbody3.childNodes.item(0));
  verify(rows.item(1) == tbody3.childNodes.item(1));
  verify(rows.item(2) == tbody3.childNodes.item(2));
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td>"
            "<table><tbody><tr><td></td></tr></tbody></table>"
          "</td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.rows #3")
{
  var rows = document.getElementsByTagName("table")[0].rows;
  verify(rows.toString() == "[object HTMLCollection]");
  verify(rows.length == 3);
  var tr1 = document.getElementsByTagName("tr")[0];
  var tr2 = document.getElementsByTagName("tr")[1];
  var tr3 = document.getElementsByTagName("tr")[2];
  var tr4 = document.getElementsByTagName("tr")[3];

  verify(rows.item(0) == tr1);
  verify(rows.item(1) == tr3);
  verify(rows.item(2) == tr4);
}


group "DOM.HTML.HTMLTableElement.properties.tBodies";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<thead>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</thead>"
        "<tfoot>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tfoot>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
      "<table align='center' bgColor='#0088ff' summary='[summary]' width='80%' border='10' frame='above' rules='rows' cellpadding='5' cellspacing='20'>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
        "<tr><td></td></tr>"
      "</table>"
    "</body>"
  "</html>"
}

test("Setup")
{
  table1 = document.getElementsByTagNameNS("*", "table").item(0);
  table2 = document.getElementsByTagNameNS("*", "table").item(1);
  caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);
  tbody2 = document.getElementsByTagNameNS("*", "tbody").item(1);
  tbody3 = document.getElementsByTagNameNS("*", "tbody").item(2);
}

test("HTMLTableElement.tBodies #1")
{
  var tBodies = table1.tBodies;
  verify(tBodies == table1.tBodies);
  verify(tBodies.toString() == "[object HTMLCollection]");
  verify(tBodies.length == 2);
  verify(tBodies.item(0) == tbody1);
  verify(tBodies.item(1) == tbody2);
}

test("HTMLTableElement.tBodies #2")
{
  var tBodies = table2.tBodies;
  verify(tBodies == table2.tBodies);
  verify(tBodies.toString() == "[object HTMLCollection]");
  verify(tBodies.length == 1);
  verify(tBodies.item(0) == tbody3);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td>"
            "<table><tbody><tr><td></td></tr></tbody></table>"
          "</td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tBodies #3")
{
  var tBodies = document.getElementsByTagName("table")[0].tBodies;
  verify(tBodies.toString() == "[object HTMLCollection]");
  verify(tBodies.length == 2);
  var tbody1 = document.getElementsByTagName("tbody")[0];
  var tbody2 = document.getElementsByTagName("tbody")[1];
  var tbody3 = document.getElementsByTagName("tbody")[2];
  verify(tBodies.item(0) == tbody1);
  verify(tBodies.item(1) == tbody3);
}


group "DOM.HTML.HTMLTableElement.properties.cells";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td>"
            "<table><tbody><tr><td></td></tr></tbody></table>"
          "</td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td><td></td></tr>"
        "</tbody>"
        "<tfoot>"
          "<tr><td></td></tr>"
        "</tbody>"
        "<thead>"
          "<tr><th></th></tr>"
          "<tr><td></td><td></td></tr>"
          "<tr><th></th></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.cells #1")
{
  var cells = document.getElementsByTagName("table")[0].cells;
  verify(cells.toString() == "[object HTMLCollection]");
  verify(cells.length == 10);
  var td1 = document.getElementsByTagName("td")[0];
  var td2 = document.getElementsByTagName("td")[1];
  var td3 = document.getElementsByTagName("td")[2];
  var td4 = document.getElementsByTagName("td")[3];
  var th1 = document.getElementsByTagName("th")[0];
  var th2 = document.getElementsByTagName("th")[1];
  verify(cells.item(0) == td1);
  verify(cells.item(1) == td3);
  verify(cells.item(2) == td4);

  verify(cells.item(5) == th1);

  verify(cells.item(8) == th2);
}


// --------------------------------------------------------------------

group "DOM.HTML.HTMLTableElement.properties.caption";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.caption [[Put]] #1")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  verify(table1.caption == null);

  table1.caption = caption1;

  verify(table1.caption == caption1);
  verify(caption1.parentNode == table1);
}

test("HTMLTableElement.caption [[Put]] #2")
  require success "HTMLTableElement.caption [[Put]] #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var caption2 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  verify(table1.caption == caption1);
  verify(caption1.parentNode == table1);

  table1.caption = caption2;

  verify(table1.caption == caption2);
  verify(caption1.parentNode == null);
  verify(caption2.parentNode == table1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<thead>"
          "<tr><td></td></tr>"
        "</thead>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.caption [[Put]] #3")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  var caption1 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  verify(table1.caption == null);
  verify(table1.tHead == thead1);

  table1.caption = caption1;

  verify(table1.caption == caption1);
  verify(table1.tHead == thead1);
  verify(caption1.parentNode == table1);
  verify(caption1.nextSibling == thead1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == thead1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tfoot>"
          "<tr><td></td></tr>"
        "</tfoot>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.caption [[Put]] #4")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  var caption1 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  verify(table1.caption == null);
  verify(table1.tFoot == tfoot1);

  table1.caption = caption1;

  verify(table1.caption == caption1);
  verify(table1.tFoot == tfoot1);
  verify(caption1.parentNode == table1);
  verify(caption1.nextSibling == tfoot1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == tfoot1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.caption [[Put]] #5")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);
  var caption1 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  verify(table1.caption == null);
  verify(table1.tBodies.item(0) == tbody1);

  table1.caption = caption1;

  verify(table1.caption == caption1);
  verify(table1.tBodies.item(0) == tbody1);
  verify(caption1.parentNode == table1);
  verify(caption1.nextSibling == tbody1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == tbody1);
}

// --------------------------------------------------------------------

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.caption [[Put]] Mutation Events #1")
  require DOM2_MUTATION_EVENTS;
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (nodeinserted != "DOMNodeInserted: no event")
      nodeinserted = "DOMNodeInserted: bogus event";
    else if (ev.target != caption1)
      nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
    else if (ev.relatedNode != table1)
      nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
    else if (ev.target.parentNode != ev.relatedNode)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else
      nodeinserted = "ok";
  }
  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  verify(table1.caption == null);

  table1.caption = caption1;

  verify(table1.caption == caption1);
  verify(caption1.parentNode == table1);

  if (nodeinserted != "ok")
    throw nodeinserted;
}

test("HTMLTableElement.caption [[Put]] Mutation Events #2")
  require DOM2_MUTATION_EVENTS;
  require success "HTMLTableElement.caption [[Put]] Mutation Events #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var caption2 = document.createElementNS("http://www.w3.org/1999/xhtml", "caption");

  var noderemoved = "DOMNodeRemoved: no event";
  var nodeinserted = "DOMNodeInserted: no event";
  var unexpected = "ok";
  function handleEvent(ev)
  {
    if (ev.type == "DOMNodeRemoved")
      if (noderemoved != "DOMNodeRemoved: no event")
        noderemoved = "DOMNodeRemoved: bogus event";
      else if (ev.target != caption1)
        noderemoved = "DOMNodeRemoved: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        noderemoved = "DOMNodeRemoved: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        noderemoved = "DOMNodeRemoved: already removed";
      else
        noderemoved = "ok";
    else if (ev.type == "DOMNodeInserted")
      if (nodeinserted != "DOMNodeInserted: no event")
        nodeinserted = "DOMNodeInserted: bogus event";
      else if (ev.target != caption2)
        nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        nodeinserted = "DOMNodeInserted: not inserted yet";
      else
        nodeinserted = "ok";
    else
      unexpected = ev.type + ": unexpected event";
  }
  document.addEventListener("DOMNodeRemoved", handleEvent, true);
  document.addEventListener("DOMNodeInserted", handleEvent, true);

  verify(table1.caption == caption1);
  verify(caption1.parentNode == table1);

  table1.caption = caption2;

  verify(table1.caption == caption2);
  verify(caption1.parentNode == null);
  verify(caption2.parentNode == table1);

  if (noderemoved != "ok")
    throw noderemoved;
  if (nodeinserted != "ok")
    throw nodeinserted;
  if (unexpected != "ok")
    throw unexpected;
}

// --------------------------------------------------------------------

group "DOM.HTML.HTMLTableElement.properties.tHead";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #1")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  verify(table1.tHead == null);

  table1.tHead = thead1;

  verify(table1.tHead == thead1);
  verify(thead1.parentNode == table1);
}

test("HTMLTableElement.tHead [[Put]] #2")
  require success "HTMLTableElement.tHead [[Put]] #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  var thead2 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  verify(table1.tHead == thead1);
  verify(thead1.parentNode == table1);

  table1.tHead = thead2;

  verify(table1.tHead == thead2);
  verify(thead1.parentNode == null);
  verify(thead2.parentNode == table1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #3")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  verify(table1.caption == caption1);
  verify(table1.tHead == null);

  table1.tHead = thead1;

  verify(table1.caption == caption1);
  verify(table1.tHead == thead1);
  verify(thead1.parentNode == table1);
  verify(thead1.previousSibling == caption1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == thead1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tfoot>"
          "<tr><td></td></tr>"
        "</tfoot>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #4")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");
  var tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);

  verify(table1.tHead == null);
  verify(table1.tFoot == tfoot1);

  table1.tHead = thead1;

  verify(table1.tHead == thead1);
  verify(table1.tFoot == tfoot1);
  verify(thead1.parentNode == table1);
  verify(thead1.nextSibling == tfoot1);
  verify(table1.childNodes.item(0) == thead1);
  verify(table1.childNodes.item(1) == tfoot1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<tfoot>"
          "<tr><td></td></tr>"
        "</tfoot>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #5")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");
  var tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);

  verify(table1.caption == caption1);
  verify(table1.tHead == null);
  verify(table1.tFoot == tfoot1);

  table1.tHead = thead1;

  verify(table1.caption == caption1);
  verify(table1.tHead == thead1);
  verify(table1.tFoot == tfoot1);
  verify(thead1.parentNode == table1);
  verify(thead1.previousSibling == caption1);
  verify(thead1.nextSibling == tfoot1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == thead1);
  verify(table1.childNodes.item(2) == tfoot1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #6")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  verify(table1.tHead == null);
  verify(table1.tBodies.item(0) == tbody1);

  table1.tHead = thead1;

  verify(table1.tHead == thead1);
  verify(table1.tBodies.item(0) == tbody1);
  verify(thead1.parentNode == table1);
  verify(thead1.nextSibling == tbody1);
  verify(table1.childNodes.item(0) == thead1);
  verify(table1.childNodes.item(1) == tbody1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<tbody>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] #7")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");
  var tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);

  verify(table1.caption == caption1);
  verify(table1.tHead == null);
  verify(table1.tBodies.item(0) == tbody1);

  table1.tHead = thead1;

  verify(table1.caption == caption1);
  verify(table1.tHead == thead1);
  verify(table1.tBodies.item(0) == tbody1);
  verify(thead1.parentNode == table1);
  verify(thead1.previousSibling == caption1);
  verify(thead1.nextSibling == tbody1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == thead1);
  verify(table1.childNodes.item(2) == tbody1);
}

// --------------------------------------------------------------------

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tHead [[Put]] Mutation Events #1")
  require DOM2_MUTATION_EVENTS;
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (nodeinserted != "DOMNodeInserted: no event")
      nodeinserted = "DOMNodeInserted: bogus event";
    else if (ev.target != thead1)
      nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
    else if (ev.relatedNode != table1)
      nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
    else if (ev.target.parentNode != ev.relatedNode)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else
      nodeinserted = "ok";
  }
  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  verify(table1.tHead == null);

  table1.tHead = thead1;

  verify(table1.tHead == thead1);
  verify(thead1.parentNode == table1);

  if (nodeinserted != "ok")
    throw nodeinserted;
}

test("HTMLTableElement.tHead [[Put]] Mutation Events #2")
  require DOM2_MUTATION_EVENTS;
  require success "HTMLTableElement.tHead [[Put]] Mutation Events #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  var thead2 = document.createElementNS("http://www.w3.org/1999/xhtml", "thead");

  var noderemoved = "DOMNodeRemoved: no event";
  var nodeinserted = "DOMNodeInserted: no event";
  var unexpected = "ok";
  function handleEvent(ev)
  {
    if (ev.type == "DOMNodeRemoved")
      if (noderemoved != "DOMNodeRemoved: no event")
        noderemoved = "DOMNodeRemoved: bogus event";
      else if (ev.target != thead1)
        noderemoved = "DOMNodeRemoved: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        noderemoved = "DOMNodeRemoved: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        noderemoved = "DOMNodeRemoved: already removed";
      else
        noderemoved = "ok";
    else if (ev.type == "DOMNodeInserted")
      if (nodeinserted != "DOMNodeInserted: no event")
        nodeinserted = "DOMNodeInserted: bogus event";
      else if (ev.target != thead2)
        nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        nodeinserted = "DOMNodeInserted: not inserted yet";
      else
        nodeinserted = "ok";
    else
      unexpected = ev.type + ": unexpected event";
  }
  document.addEventListener("DOMNodeRemoved", handleEvent, true);
  document.addEventListener("DOMNodeInserted", handleEvent, true);

  verify(table1.tHead == thead1);
  verify(thead1.parentNode == table1);

  table1.tHead = thead2;

  verify(table1.tHead == thead2);
  verify(thead1.parentNode == null);
  verify(thead2.parentNode == table1);

  if (noderemoved != "ok")
    throw noderemoved;
  if (nodeinserted != "ok")
    throw nodeinserted;
  if (unexpected != "ok")
    throw unexpected;
}

// --------------------------------------------------------------------

group "DOM.HTML.HTMLTableElement.properties.tFoot";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] #1")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  verify(table1.tFoot == null);

  table1.tFoot = tfoot1;

  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);
}

test("HTMLTableElement.tFoot [[Put]] #2")
  require success "HTMLTableElement.tFoot [[Put]] #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  var tfoot2 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);

  table1.tFoot = tfoot2;

  verify(table1.tFoot == tfoot2);
  verify(tfoot1.parentNode == null);
  verify(tfoot2.parentNode == table1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] #3")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var caption1 = document.getElementsByTagNameNS("*", "caption").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  verify(table1.caption == caption1);
  verify(table1.tFoot == null);

  table1.tFoot = tfoot1;

  verify(table1.caption == caption1);
  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);
  verify(tfoot1.previousSibling == caption1);
  verify(table1.childNodes.item(0) == caption1);
  verify(table1.childNodes.item(1) == tfoot1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<thead>"
          "<tr><td></td></tr>"
        "</thead>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] #4")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  verify(table1.tHead == thead1);
  verify(table1.tFoot == null);

  table1.tFoot = tfoot1;

  verify(table1.tHead == thead1);
  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);
  verify(tfoot1.previousSibling == thead1);
  verify(table1.childNodes.item(0) == thead1);
  verify(table1.childNodes.item(1) == tfoot1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tbody>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] #5")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");
  var tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);

  verify(table1.tFoot == null);
  verify(table1.tBodies.item(0) == tbody1);

  table1.tFoot = tfoot1;

  verify(table1.tFoot == tfoot1);
  verify(table1.tBodies.item(0) == tbody1);
  verify(tfoot1.parentNode == table1);
  verify(tfoot1.nextSibling == tbody1);
  verify(table1.childNodes.item(0) == tfoot1);
  verify(table1.childNodes.item(1) == tbody1);
}

html
{
  "<html>"
    "<body>"
      "<table>"
        "<thead>"
          "<tr><td></td></tr>"
        "</thead>"
        "<tbody>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] #6")
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var thead1 = document.getElementsByTagNameNS("*", "thead").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");
  var tbody1 = document.getElementsByTagNameNS("*", "tbody").item(0);

  verify(table1.tHead == thead1);
  verify(table1.tFoot == null);
  verify(table1.tBodies.item(0) == tbody1);

  table1.tFoot = tfoot1;

  verify(table1.tHead == thead1);
  verify(table1.tFoot == tfoot1);
  verify(table1.tBodies.item(0) == tbody1);
  verify(tfoot1.parentNode == table1);
  verify(tfoot1.previousSibling == thead1);
  verify(tfoot1.nextSibling == tbody1);
  verify(table1.childNodes.item(0) == thead1);
  verify(table1.childNodes.item(1) == tfoot1);
  verify(table1.childNodes.item(2) == tbody1);
}

// --------------------------------------------------------------------

html
{
  "<html>"
    "<body>"
      "<table>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableElement.tFoot [[Put]] Mutation Events #1")
  require DOM2_MUTATION_EVENTS;
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  var nodeinserted = "DOMNodeInserted: no event";
  function handleDOMNodeInserted(ev)
  {
    if (nodeinserted != "DOMNodeInserted: no event")
      nodeinserted = "DOMNodeInserted: bogus event";
    else if (ev.target != tfoot1)
      nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
    else if (ev.relatedNode != table1)
      nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
    else if (ev.target.parentNode != ev.relatedNode)
      nodeinserted = "DOMNodeInserted: not inserted yet";
    else
      nodeinserted = "ok";
  }
  document.addEventListener("DOMNodeInserted", handleDOMNodeInserted, true);

  verify(table1.tFoot == null);

  table1.tFoot = tfoot1;

  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);

  if (nodeinserted != "ok")
    throw nodeinserted;
}

test("HTMLTableElement.tFoot [[Put]] Mutation Events #2")
  require DOM2_MUTATION_EVENTS;
  require success "HTMLTableElement.tFoot [[Put]] Mutation Events #1";
{
  var table1 = document.getElementsByTagNameNS("*", "table").item(0);
  var tfoot1 = document.getElementsByTagNameNS("*", "tfoot").item(0);
  var tfoot2 = document.createElementNS("http://www.w3.org/1999/xhtml", "tfoot");

  var noderemoved = "DOMNodeRemoved: no event";
  var nodeinserted = "DOMNodeInserted: no event";
  var unexpected = "ok";
  function handleEvent(ev)
  {
    if (ev.type == "DOMNodeRemoved")
      if (noderemoved != "DOMNodeRemoved: no event")
        noderemoved = "DOMNodeRemoved: bogus event";
      else if (ev.target != tfoot1)
        noderemoved = "DOMNodeRemoved: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        noderemoved = "DOMNodeRemoved: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        noderemoved = "DOMNodeRemoved: already removed";
      else
        noderemoved = "ok";
    else if (ev.type == "DOMNodeInserted")
      if (nodeinserted != "DOMNodeInserted: no event")
        nodeinserted = "DOMNodeInserted: bogus event";
      else if (ev.target != tfoot2)
        nodeinserted = "DOMNodeInserted: wrong target: " + ev.target;
      else if (ev.relatedNode != table1)
        nodeinserted = "DOMNodeInserted: wrong relatedNode: " + ev.relatedNode;
      else if (ev.target.parentNode != ev.relatedNode)
        nodeinserted = "DOMNodeInserted: not inserted yet";
      else
        nodeinserted = "ok";
    else
      unexpected = ev.type + ": unexpected event";
  }
  document.addEventListener("DOMNodeRemoved", handleEvent, true);
  document.addEventListener("DOMNodeInserted", handleEvent, true);

  verify(table1.tFoot == tfoot1);
  verify(tfoot1.parentNode == table1);

  table1.tFoot = tfoot2;

  verify(table1.tFoot == tfoot2);
  verify(tfoot1.parentNode == null);
  verify(tfoot2.parentNode == table1);

  if (noderemoved != "ok")
    throw noderemoved;
  if (nodeinserted != "ok")
    throw nodeinserted;
  if (unexpected != "ok")
    throw unexpected;
}
