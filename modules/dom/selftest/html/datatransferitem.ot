// -*- Mode: c++; indent-tabs-mode: t; c-basic-offset: 4 -*-
group "DOM.HTML.DataTransferItem";
require init;
language ecmascript;
require DRAG_SUPPORT;

html
{
	//! <div draggable></div>
	//! <script>
	//! var create_DragEvent = function(type)
	//! {
	//! 	var event1 = document.createEvent("DragEvent");
	//! 	var an_object = {};
	//! 	event1.initDragEvent(type, true, true, null, 1, 123, 456, 789, 234, false, false, false, false, 0, null, an_object);
	//! 	return event1;
	//! }
	//! </script>
}

test("DataTransferItem kind, type")
	async;
{
	var ok_dragstart = true;
	var dragged = document.querySelector('div');
	dragged.ondragstart = function(e)
	{
		for (var i = e.dataTransfer.items.length; i > 0; i--) // Temporary.  Remove, when data under dataTrasfer is not global.
			delete e.dataTransfer.items[i-1];

		var dti = e.dataTransfer.items;
		ok_dragstart = ok_dragstart && dti.length == 0;
		dti.add('suchy zmok', 'SMOK');
		ok_dragstart = ok_dragstart && dti.length == 1;

		var item = dti[0];
		ok_dragstart = ok_dragstart && item.kind == 'string';
		ok_dragstart = ok_dragstart && item.type == 'smok'; // Case-insensitive.
	}
	var dragstart = create_DragEvent('dragstart');
	dragged.dispatchEvent(dragstart);
	var timeoutMs = 500;
	var timeoutId = setTimeout(function()
	{
		if (ok_dragstart)
			ST_passed();
		else
			ST_failed("Test DataTransferItem kind, type: ondragstart failed.","","");
	}, timeoutMs);
}

test("DataTransferItem getAsString()")
	async;
{
	var ok_dragstart = true;
	var ok_cb = false;
	var dragged = document.querySelector('div');
	var cb = function(str)
	{
		ok_cb = true;
		ok_cb = ok_cb && str == 'suchy zmok';
	}
	dragged.ondragstart = function(e)
	{
		for (var i = e.dataTransfer.items.length; i > 0; i--) // Temporary.  Remove, when data under dataTrasfer is not global.
			delete e.dataTransfer.items[i-1];

		var dti = e.dataTransfer.items;
		ok_dragstart = ok_dragstart && dti.length == 0;
		dti.add('suchy zmok', 'SMOK');
		ok_dragstart = ok_dragstart && dti.length == 1;

		var item = dti[0];
		item.getAsString(null);
		item.getAsString(cb);
		ok_dragstart = ok_dragstart && item.getAsFile() === null;
	}
	var dragstart = create_DragEvent('dragstart');
	dragged.dispatchEvent(dragstart);
	var timeoutMs = 500;
	var timeoutId = setTimeout(function()
	{
		if (!ok_cb)
			ST_failed("Test DataTransferItem getAsString: callback failed.","","");
		else if (!ok_dragstart)
			ST_failed("Test DataTransferItem getAsString: ondragstart failed.","","");
		else
			ST_passed();
	}, timeoutMs);
}

