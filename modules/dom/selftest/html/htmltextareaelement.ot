// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
group "DOM.HTML.HTMLTextAreaElement.properties";
require init;

include "modules/dom/src/dominternaltypes.h"; // for DOM_SELECTION_SUPPORT

language ecmascript;

html
{
	//! <html><body><form>
	//! <textarea name="kalle">Text</textarea>
	//! </form></body></html>
}


test("HTMLTextAreaElement.type #1")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.type);
	verify(a.type == "textarea");
}

test("HTMLTextAreaElement.value #1")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.value);
	verify(a.value == "Text");

	a.value = "Other text";
	verify(a.value == "Other text");

	a.value = "";
	verify(a.value == "");
}

html
{
	//! <html><body><form style="display:none">
	//! <textarea name="kalle">Text</textarea>
	//! </form></body></html>
}


test("HTMLTextAreaElement.type #2")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.type);
	verify(a.type == "textarea");
}

test("HTMLTextAreaElement.value #2")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.value);
	verify(a.value == "Text");

	a.value = "Other text";
	verify(a.value == "Other text");

	a.value = "";
	verify(a.value == "");
}


html
{
	//! <html><body><form>
	//! <textarea name="kalle">Text</textarea>
	//! </form></body></html>
}

test("HTMLTextAreaElement.defaultValue #1")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.defaultValue);
	verify(a.defaultValue == "Text");

	verify(a.value);
	verify(a.value == "Text");

	a.value = "Other text";
	verify(a.value == "Other text");

	verify(a.defaultValue);
	verify(a.defaultValue == "Text");
}

html
{
	//! <html><body><form style="display:none">
	//! <textarea name="kalle">Text</textarea>
	//! </form></body></html>
}

test("HTMLTextAreaElement.defaultValue #2")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var a = document.forms[0].kalle;

	verify(a.defaultValue);
	verify(a.defaultValue == "Text");

	verify(a.value);
	verify(a.value == "Text");

	a.value = "Other text";
	verify(a.value == "Other text");

	verify(a.defaultValue);
	verify(a.defaultValue == "Text");
}

test("HTMLTextAreaElement.dirName")
{
	var textarea = document.createElement('textarea');
	verify(textarea);
	verify("dirName" in textarea);
	verify(textarea.dirName == "");

	textarea.setAttribute("dirName", "foo");
	verify(textarea.dirName);
	verify(textarea.dirName == "foo");

	textarea.setAttribute("dirName", "hIDDen");
	verify(textarea.dirName);
	verify(textarea.dirName == "hIDDen");

	textarea.setAttribute("dirname", "other");
	verify(textarea.dirName);
	verify(textarea.dirName == "other");

	textarea.removeAttribute("dirName");
	verify(textarea.dirName == "");

	textarea.dirName = "foo";
	verify(textarea.getAttribute("dirName") == "foo");
}

html
{
	//! <html><body><form style="display:none">
	//! <textarea name="t1">Text</textarea>
	//! <textarea name="t2" maxLength="-2">Text</textarea>
	//! <textarea name="t3" maxLength="4">Text</textarea>
	//! <textarea name="t4" maxLength="222311003211000">Text</textarea>
	//! </form></body></html>
}
test("HTMLTextAreaElement.maxLength")
{
	var textarea = document.getElementsByTagName('textarea')[0];
	verify(textarea);
	verify(textarea.maxLength === -1);

	textarea = document.getElementsByTagName('textarea')[1];
	verify(textarea);
	verify(textarea.maxLength === -1);

	textarea = document.getElementsByTagName('textarea')[2];
	verify(textarea);
	verify(textarea.maxLength === 4);

	textarea = document.getElementsByTagName('textarea')[3];
	verify(textarea);
	verify(textarea.maxLength === -1);
	try {
		textarea.maxLength = -3;
		verify(!"Supposed to throw INDEX_SIZE_ERR");
	} catch (e) {
		verify(e instanceof DOMException);
		verify(textarea.maxLength === -1);
	}
}

html
{
	//! <html><body><form style="display:none">
	//! <textarea name="t1">Text</textarea>
	//! <textarea name="t2" cols="-1">Text</textarea>
	//! <textarea name="t3" cols="2">Text</textarea>
	//! <textarea name="t4" cols="222311003211000">Text</textarea>
	//! </form></body></html>
}
test("HTMLTextAreaElement.cols")
{
	var textarea = document.getElementsByTagName('textarea')[0];
	verify(textarea);
	verify(textarea.cols === 20);

	textarea = document.getElementsByTagName('textarea')[1];
	verify(textarea);
	verify(textarea.cols === 20);

	textarea = document.getElementsByTagName('textarea')[2];
	verify(textarea);
	verify(textarea.cols === 2);

	textarea = document.getElementsByTagName('textarea')[3];
	verify(textarea);
	verify(textarea.cols === 20);
	try {
		textarea.cols = 0;
		verify(!"Supposed to throw INDEX_SIZE_ERR");
	} catch (e) {
		verify(e instanceof DOMException);
		verify(textarea.cols === 20);
	}
}

html
{
	//! <html><body><form style="display:none">
	//! <textarea name="t1">Text</textarea>
	//! <textarea name="t2" rows="-1">Text</textarea>
	//! <textarea name="t3" rows="3">Text</textarea>
	//! <textarea name="t4" rows="222311003211000">Text</textarea>
	//! </form></body></html>
}
test("HTMLTextAreaElement.rows")
{
	var textarea = document.getElementsByTagName('textarea')[0];
	verify(textarea);
	verify(textarea.rows === 2);

	textarea = document.getElementsByTagName('textarea')[1];
	verify(textarea);
	verify(textarea.rows === 2);

	textarea = document.getElementsByTagName('textarea')[2];
	verify(textarea);
	verify(textarea.rows === 3);

	textarea = document.getElementsByTagName('textarea')[3];
	verify(textarea);
	verify(textarea.rows === 2);
	try {
		textarea.rows = 0;
		verify(!"Supposed to throw INDEX_SIZE_ERR");
	} catch (e) {
		verify(e instanceof DOMException);
		verify(textarea.rows === 2);
	}
}

html
{
	//! <!DOCTYPE html><html><body>
	//! <script>log = ""; number = 1</script>
	//! <textarea onselect="log='textOnSelect' + number++">text</textarea>
	//! </body></html>
}

test("HTMLTextAreaElement.selectionStart defaultDirection")
require DOM_SELECTION_SUPPORT;
require RANGESELECT_FROM_EDGE;
{
	defaultDirection = 'none';
}
test("HTMLTextAreaElement.selectionStart defaultDirection")
require DOM_SELECTION_SUPPORT;
require undefined RANGESELECT_FROM_EDGE;
{
	defaultDirection = 'forward';
}

test("HTMLTextAreaElement.selectionStart Set")
require DOM_SELECTION_SUPPORT;
{
	var textarea = document.getElementsByTagName("textarea")[0];
	verify(textarea);

	// no selection
	verify(textarea.selectionStart == 4);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// Shouldn't change anything
	textarea.selectionStart = 5;
	verify(log == 'textOnSelect1');
	verify(textarea.selectionStart == 4);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// Should only change start to 0
	textarea.selectionStart = 0;
	verify(log == 'textOnSelect2');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// Shouldn't change anything
	textarea.selectionStart = -1;
	verify(log == 'textOnSelect3');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// change end so we can test setting start to something larger than end
	textarea.selectionEnd = 2;
	verify(log == 'textOnSelect4');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == defaultDirection);

	// Should set both start and end to 4 since the new start is bigger than the old end
	textarea.selectionStart = 4;
	verify(log == 'textOnSelect5');
	verify(textarea.selectionStart == 4);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);
}

html
{
	//! <!DOCTYPE html><html><body>
	//! <script>log = ""; number = 1</script>
	//! <textarea onselect="log='textOnSelect' + number++">text</textarea>
	//! </body></html>
}

test("HTMLTextAreaElement.selectionEnd defaultDirection")
require DOM_SELECTION_SUPPORT;
require RANGESELECT_FROM_EDGE;
{
	defaultDirection = 'none';
}
test("HTMLTextAreaElement.selectionEnd defaultDirection")
require DOM_SELECTION_SUPPORT;
require undefined RANGESELECT_FROM_EDGE;
{
	defaultDirection = 'forward';
}

test("HTMLTextAreaElement.selectionEnd Set")
require DOM_SELECTION_SUPPORT;
{
	var textarea = document.getElementsByTagName("textarea")[0];
	verify(textarea);

	// no selection
	verify(textarea.selectionStart == 4);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// Should change both start and end to 0 since the new end is smaller than the old start
	textarea.selectionEnd = 0;
	verify(log == 'textOnSelect1');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 0);
	verify(textarea.selectionDirection == defaultDirection);

	// Shouldn't change anything
	textarea.selectionEnd = -1;
	verify(log == 'textOnSelect2');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 0);
	verify(textarea.selectionDirection == defaultDirection);

	// Should only change end to 4
	textarea.selectionEnd = 4;
	verify(log == 'textOnSelect3');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);

	// Shouldn't change anything
	textarea.selectionEnd = 5;
	verify(log == 'textOnSelect4');
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 4);
	verify(textarea.selectionDirection == defaultDirection);
}

html
{
	//! <!DOCTYPE html><html><body>
	//! <script>log = ""; number = 1</script>
	//! <textarea onselect="log='textOnSelect' + number++">text</textarea>
	//! </body></html>
}


test("HTMLTextAreaElement.selectionDirection Set")
require DOM_SELECTION_SUPPORT;
require RANGESELECT_FROM_EDGE;
{
	var textarea = document.getElementsByTagName("textarea")[0];
	verify(textarea);

	// Select two characters
	textarea.selectionStart = 1;
	textarea.selectionEnd = 2;
	verify(log == 'textOnSelect2');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);

	verify(textarea.selectionDirection == "none");

	textarea.selectionDirection = "backward";
	verify(log == 'textOnSelect3');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'backward');

	textarea.selectionDirection = "forward";
	verify(log == 'textOnSelect4');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'forward');

	textarea.selectionDirection = "none";
	verify(log == 'textOnSelect5');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'none');

	textarea.selectionDirection = 'notexisting';
	verify(log == 'textOnSelect6');
	verify(textarea.selectionDirection == 'none');

	textarea.selectionDirection = null;
	verify(log == 'textOnSelect7');
	verify(textarea.selectionDirection == 'none');
}

test("HTMLTextAreaElement.selectionDirection Set")
require DOM_SELECTION_SUPPORT;
require undefined RANGESELECT_FROM_EDGE;
{
	var textarea = document.getElementsByTagName("textarea")[0];
	verify(textarea);

	// Select two characters
	textarea.selectionStart = 1;
	textarea.selectionEnd = 2;
	verify(log == 'textOnSelect2');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);

	verify(textarea.selectionDirection == "forward");

	textarea.selectionDirection = "backward";
	verify(log == 'textOnSelect3');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'backward');

	textarea.selectionDirection = "forward";
	verify(log == 'textOnSelect4');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'forward');

	textarea.selectionDirection = "none";
	verify(log == 'textOnSelect5');
	verify(textarea.selectionStart == 1);
	verify(textarea.selectionEnd == 2);
	verify(textarea.selectionDirection == 'forward');

	textarea.selectionDirection = 'notexisting';
	verify(log == 'textOnSelect6');
	verify(textarea.selectionDirection == 'forward');

	textarea.selectionDirection = null;
	verify(log == 'textOnSelect7');
	verify(textarea.selectionDirection == 'forward');
}


group "DOM.HTML.HTMLTextAreaElement.functions";
require init;

language ecmascript;

html
{
	//! <!DOCTYPE html><html><head><title>select() should automatically focus</title><body>
	//! <script>log = "";</script>
	//! <textarea onfocus="log+='textareaFocused'" onselect="log+='textareaOnSelect'">textarea</textarea><br>
	//! </body></html>
}

test("HTMLTextAreaElement.select() defaultDirection")
require DOM_SELECTION_SUPPORT;
require RANGESELECT_FROM_EDGE;
{
	defaultDirection = "none";
}
test("HTMLTextAreaElement.select() defaultDirection")
require DOM_SELECTION_SUPPORT;
require undefined RANGESELECT_FROM_EDGE;
{
	defaultDirection = "forward";
}

test("HTMLTextAreaElement.select()")
require DOM_SELECTION_SUPPORT;
{
	verify(window.focus);
	window.focus();
	var textarea = document.getElementsByTagName('textarea')[0];
	verify(textarea);
	verify("select" in textarea);
	verify(textarea.select);
	textarea.select();

	verify(log == "textareaOnSelecttextareaFocused");

	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 8);
	verify(textarea.selectionDirection == defaultDirection);
}

html
{
	//! <!DOCTYPE html><html><head><title>select() should automatically focus</title><body>
	//! <script>log = ""; number = 1</script>
	//! <textarea onselect="log='textareaOnSelect' + number++">textarea</textarea><br>
	//! </body></html>
}

test("HTMLTextAreaElement.setSelectionRange() defaultDirection")
require DOM_SELECTION_SUPPORT;
require RANGESELECT_FROM_EDGE;
{
	defaultDirection = "none";
}
test("HTMLTextAreaElement.setSelectionRange() defaultDirection")
require DOM_SELECTION_SUPPORT;
require undefined RANGESELECT_FROM_EDGE;
{
	defaultDirection = "forward";
}

test("HTMLTextAreaElement.setSelectionRange()")
require DOM_SELECTION_SUPPORT;
{
	var textarea = document.getElementsByTagName('textarea')[0];
	verify(textarea);
	verify("setSelectionRange" in textarea);
	verify(textarea.setSelectionRange);

	textarea.setSelectionRange(0, 8);
	verify(log == "textareaOnSelect1");
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 8);

	textarea.setSelectionRange(-1, 9);
	verify(log == "textareaOnSelect2");
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 8);

	textarea.setSelectionRange(3, 2);
	verify(log == "textareaOnSelect3");
	verify(textarea.selectionStart == 2);
	verify(textarea.selectionEnd == 2);

	textarea.setSelectionRange(0, 3, "forward");
	verify(log == "textareaOnSelect4");
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 3);
	verify(textarea.selectionDirection == "forward");

	textarea.setSelectionRange(0, 3, "backward");
	verify(log == "textareaOnSelect5");
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 3);
	verify(textarea.selectionDirection == "backward");

	textarea.setSelectionRange(0, 3, "none");
	verify(log == "textareaOnSelect6");
	verify(textarea.selectionStart == 0);
	verify(textarea.selectionEnd == 3);
	verify(textarea.selectionDirection == defaultDirection);

	textarea.setSelectionRange(0, 3, "notexisting");
	verify(textarea.selectionDirection == defaultDirection);

	textarea.setSelectionRange(0, 3, null);
	verify(textarea.selectionDirection == defaultDirection);

	try
	{
		// Don't crash.
		textarea.setSelectionRange.now.apply(new Date(), [], "hjhj");
	}
	catch(e)
	{
	}

	try
	{
		// Don't crash.
		textarea.setSelectionRange.now.apply(null, [123, 345, 532], new Date());
	}
	catch(e)
	{
	}
}
