// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-

group "DOM.HTML.HTMLSelectElement.functions";
require init;

language ecmascript;

html "";

test("HTMLSelectElement [[HasProperty]]")
{
  function checkFunctions_HasProperty(node, properties)
  {
    for (var index = 0; index < properties.length; ++index)
    {
      if (!(properties[index] in node))
        throw "HasProperty: '" + properties[index] + "' not found";
      if (!(typeof(node[properties[index]]) == "function"))
        throw "HasProperty: '" + properties[index] + "' not a function";
    }
    return true;
  }

  function checkFunctions_Enumerate(node, properties)
  {
    outer: for (var index = 0; index < properties.length; ++index)
    {
      for (var property in node)
        if (property == properties[index])
          continue outer;
      throw "Enumerate: '" + properties[index] + "' not found";
    }
    return true;
  }

  functions = [ "add", "remove" ];

  var select1 = document.createElement("select");
  verify(checkFunctions_HasProperty(select1, functions));
  verify(checkFunctions_Enumerate(select1, functions));
}

html
{
  "<html>"
    "<body>"
      "<select>"
      "</select>"
    "</body>"
  "</html>"
}


test("HTMLSelectElement.add #1")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);

  verify(select1.length == 0);
  verify(select1.selectedIndex == -1);

  var option1 = document.createElement('option');
  option1.appendChild(document.createTextNode('option1'));

  select1.add(option1, null);

  verify(select1.length == 1);
  verify(select1.selectedIndex == 0);
  select1.selectedIndex = 0;
  verify(select1.selectedIndex == 0);

  var option2 = document.createElement('option');
  option2.appendChild(document.createTextNode('option2'));

  select1.add(option2, null);

  verify(select1.length == 2);
  verify(select1.selectedIndex == 0);
}

html
{
  "<html>"
    "<body>"
      "<select>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.add #1 (via assignment)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);

  verify(select1.length == 0);
  verify(select1.selectedIndex == -1);

  var option1 = document.createElement('option');
  option1.appendChild(document.createTextNode('option1'));

  select1[select1.length] = option1;

  verify(select1.length == 1);
  verify(select1.selectedIndex == 0);
  select1.selectedIndex = 0;
  verify(select1.selectedIndex == 0);

  var option2 = document.createElement('option');
  option2.appendChild(document.createTextNode('option2'));

  select1[select1.length] = option2;

  verify(select1.length == 2);
  verify(select1.selectedIndex == 0);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.add #2")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  verify(select1.selectedIndex == 0);

  var option1 = document.createElement('option');
  option1.appendChild(document.createTextNode('optionX'));

  select1.add(option1, options[0]);

  verify(select1.options[0] == option1);
  verify(select1.options[1] == options[0]);
  verify(select1.options[2] == options[1]);
  verify(select1.options[3] == options[2]);

  verify(select1.length == 4);
  verify(select1.selectedIndex == 1);

  var option2 = document.createElement('option');
  option2.appendChild(document.createTextNode('optionY'));

  select1.add(option2, options[2]);

  verify(select1.length == 5);
  verify(select1.selectedIndex == 1);

  verify(select1.options[0] == option1);
  verify(select1.options[1] == options[0]);
  verify(select1.options[2] == options[1]);
  verify(select1.options[3] == option2);
  verify(select1.options[4] == options[2]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.add #2 (via assignment)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  verify(select1.selectedIndex == 0);

  var option1 = document.createElement('option');
  option1.appendChild(document.createTextNode('optionX'));

  select1[0] = option1;

  verify(select1.options[0] == option1);
  verify(select1.options[1] == options[1]);
  verify(select1.options[2] == options[2]);

  verify(select1.length == 3);
  /* The replacement of the option at '0' caused the originally selected option at that index
   * first to be removed (followed by the addition of a new one.) => the removal will change the
   * selection to the next one along (at '0', but pushed out to '1' when the subseq. addition happens.)
   *
   * We used to keep the selection at 0 here, but now changed to follow spec. Which seems to capture
   * observed behaviour with other browsers. */
  verify(select1.selectedIndex == 1);

  var option2 = document.createElement('option');
  option2.appendChild(document.createTextNode('optionY'));

  select1[2] = option2;

  verify(select1.length == 3);
  verify(select1.selectedIndex == 1);

  verify(select1.options[0] == option1);
  verify(select1.options[1] == options[1]);
  verify(select1.options[2] == option2);
}

html
{
  "<html>"
    "<body>"
      "<form>"
        "<select id='select1' size='4'>"
          "<option>a</option>"
          "<option>b</option>"
          "<option>c</option>"
          "<option>d</option>"
          "<option>e</option>"
          "<option>f</option>"
          "<option>g</option>"
          "<option>h</option>"
          "<option>i</option>"
          "<option>j</option>"
        "</select>"
      "</form>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.add #3")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].select1);
	var sel = document.forms[0].select1;

	verify(sel.length == 10);
	verify(sel.selectedIndex == -1);


	verify(sel.add);
	verify(document.createElement);
	verify(document.createTextNode);

	var opt = document.createElement('OPTION');
	verify(opt);
	verify (opt.appendChild);

	var text = document.createTextNode('added-node');
	verify(text);

    opt.appendChild(text);
    sel.add(opt, null);

	verify(sel.length == 11);
	verify(sel.selectedIndex == -1);

	opt = document.createElement('OPTION');
	verify(opt);
	opt.setAttribute('selected', 'true');
	verify (opt.appendChild);

	text = document.createTextNode('added-node');
	verify(text);

    opt.appendChild(text);
    sel.add(opt, null);

	verify(sel.length == 12);
	verify(sel.selectedIndex == 11);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.add #4 (optgroup)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);

  verify(select1.length == 1);
  verify(select1.selectedIndex == 0);
  var opt = select1.options[0];

  var optg1 = document.createElement('optgroup');
  var o1 = document.createElement('option');
  o1.appendChild(document.createTextNode('optionX'));
  optg1.appendChild(o1);

  select1.add(optg1, 0);

  verify(select1.options[0] == o1);
  verify(select1.options[1] == opt);

  verify(select1.length == 2);
  verify(select1.selectedIndex == 1);

  var optg2 = document.createElement('optgroup');
  var o2 = document.createElement('option');
  o2.appendChild(document.createTextNode('optionY'));
  optg2.appendChild(o2);

  select1.add(optg2, 2);

  verify(select1.length == 3);
  verify(select1.selectedIndex == 1);

  verify(select1.options[0] == o1);
  verify(select1.options[1] == opt);
  verify(select1.options[2] == o2);

  var optg3 = document.createElement('optgroup');
  var o3 = document.createElement('option');
  o3.appendChild(document.createTextNode('optionZ'));
  optg3.appendChild(o3);

  select1.add(optg3, optg2);

  verify(select1.length == 4);
  verify(select1.selectedIndex == 1);

  verify(select1.options[0] == o1);
  verify(select1.options[1] == opt);
  verify(select1.options[2] == o3);
  verify(select1.options[3] == o2);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #1")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1.remove(0);
  verify(select1.length == 2);

  verify(select1.options[0] == options[1]);
  verify(select1.options[1] == options[2]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #1 (via assignment)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1[0] = null;
  verify(select1.length == 2);

  verify(select1.options[0] == options[1]);
  verify(select1.options[1] == options[2]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #2")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1.remove(1);
  verify(select1.length == 2);

  verify(select1.options[0] == options[0]);
  verify(select1.options[1] == options[2]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #2 (via assignment)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1[1] = null;
  verify(select1.length == 2);

  verify(select1.options[0] == options[0]);
  verify(select1.options[1] == options[2]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #3")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1.remove(2);
  verify(select1.length == 2);

  verify(select1.options[0] == options[0]);
  verify(select1.options[1] == options[1]);
}

html
{
  "<html>"
    "<body>"
      "<select>"
        "<option>option1</option>"
        "<option>option2</option>"
        "<option>option3</option>"
      "</select>"
    "</body>"
  "</html>"
}

test("HTMLSelectElement.remove #3 (via assignment)")
{
  var select1 = document.getElementsByTagNameNS("*", "select").item(0);
  var options = [select1.options[0], select1.options[1], select1.options[2]];

  verify(select1.length == 3);
  select1[2] = null;
  verify(select1.length == 2);

  verify(select1.options[0] == options[0]);
  verify(select1.options[1] == options[1]);
}

html
{
	//! <html><body><form style="display:none">
	//! <select size="8" name="kalle">
	//! <option>a</option>
	//! <option>b</option>
	//! <option>c</option>
	//! <option>d</option>
	//! <option>e</option>
	//! <option>f</option>
	//! <option>g</option>
	//! <option>h</option>
	//! <option>i</option>
	//! <option>j</option>
	//! </select></form></body></html>
}

test("HTMLSelectElement.remove #4")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var sel = document.forms[0].kalle;

	verify(sel.length == 10);
	verify(sel.selectedIndex == -1);

	verify(sel.remove);

    sel.remove(0);

	verify(sel.length == 9);
	verify(sel.selectedIndex == -1);

    sel.remove(8);

	verify(sel.length == 8);
	verify(sel.selectedIndex == -1);

    sel.remove(4);

	verify(sel.length == 7);
	verify(sel.selectedIndex == -1);
}

html
{
	//! <html><body><form style="display:none">
	//! <select size="8" name="kalle">
	//! <option>a</option>
	//! <option>b</option>
	//! <option>c</option>
	//! <option>d</option>
	//! <option>e</option>
	//! <option>f</option>
	//! <option>g</option>
	//! <option>h</option>
	//! <option>i</option>
	//! <option>j</option>
	//! </select></form></body></html>
}

test("HTMLSelectElement.remove #5")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var sel = document.forms[0].kalle;

	verify(sel.length == 10);
	verify(sel.selectedIndex == -1);

	verify(sel.remove);

    sel.remove(0);

	verify(sel.length == 9);
	verify(sel.selectedIndex == -1);

    sel.remove(8);

	verify(sel.length == 8);
	verify(sel.selectedIndex == -1);

    sel.remove(4);

	verify(sel.length == 7);
	verify(sel.selectedIndex == -1);
}

html
{
	//! <html><body><form>
	//! <select size="8" name="kalle">
	//! <option value=a>a</option>
	//! <option value=b>b</option>
	//! <option value=c>c</option>
	//! </select></form></body></html>
}

test("HTMLSelectElement.remove #6")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var sel = document.forms[0].kalle;
	verify("remove" in sel);
	verify(sel.length == 3);
	// Decisions, decisions(, decisions) - 3 choices here for remove():
	//
	//   - align with Webkit and interpret sel.remove() as sel.remove(0)
	//   - throw WRONG_ARGUMENTS_ERR
	//   - treat remove() like a no-op.
	//
	// We used to do the last, which is not in-line with the spec's API, i.e.,
	//
	//   void HTMLSelectElement.remove(in long index)
	//
	// nor aligned with others implementing .remove().
	// Now switched to the first option (but wouldn't mind being spec compliant and do 2.)
    //
	sel.remove();
	verify(sel.length == 2);
	verify(sel[0].value == "b");
	verify(sel[1].value == "c");
	sel.remove(sel[2]); // removing an option -> Option converted to number -> NaN -> option 0 to be removed (webkit (chrome 1) does it differently but that's wrong)
	verify(sel.length == 1);
	verify(sel[0].value == "c");
}

html
{
	//! <html><body><form>
	//! <select size="8" name="kalle">
	//! <option value=a>a</option>
	//! <option value=b>b</option>
	//! <option value=c>c</option>
	//! <option value=d>d</option>
	//! </select></form></body></html>
}

test("HTMLSelectElement.remove #7")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var sel = document.forms[0].kalle;
	verify("remove" in sel);
	verify(sel.length == 4);
	verify(sel[0].value == "a");
	sel.remove();
	verify(sel.length == 3);
	verify(sel[0].value == "b");
	sel.remove(true);
	verify(sel.length == 2);
	verify(sel[0].value == "b");
	sel.remove("tjena");
	verify(sel.length == 1);
	verify(sel[0].value == "d");
}

html
{
	//! <html><body><form>
	//! <select size="4" name="kalle" multiple>
	//! <option selected value=a>a</option>
	//! <option selected value=b>b</option>
	//! <option selected value=c>c</option>
	//! <option selected value=d>d</option>
	//! </select></form></body></html>
}

test("HTMLSelectElement.remove #8 (via assignment)")
{
    /* Derived from CORE-29741 TC */
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0].kalle);
	var sel = document.forms[0].kalle;
	verify(sel.length == 4);
	sel[2].selected = false;
	sel[3].selected = false;

	var len = sel.length - 1;
	for (var i = len; i >= 0; i--)
		if (sel.options[i].selected)
			sel.options[i] = null;

	verify(sel.length == 2);
	verify(sel[0].value == "c");
	verify(sel[0].selected == false);
	verify(sel[1].value == "d");
	verify(sel[1].selected == false);
}
