// -*- Mode: c++; indent-tabs-mode: nil; c-basic-offset: 2 -*-
group "DOM.HTML.HTMLTableRowElement.functions.basic";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<tr>"
        "</tr>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableRowElement [[HasProperty]]")
{
  function checkFunctions_HasProperty(node, properties)
  {
    for (var index = 0; index < properties.length; ++index)
    {
      if (!(properties[index] in node))
        throw "HasProperty: '" + properties[index] + "' not found";
      if (!(typeof(node[properties[index]]) == "function"))
        throw "HasProperty: '" + properties[index] + "' not a function";
    }
    return true;
  }

  function checkFunctions_Enumerate(node, properties)
  {
    outer: for (var index = 0; index < properties.length; ++index)
    {
      for (var property in node)
        if (property == properties[index])
          continue outer;
      throw "Enumerate: '" + properties[index] + "' not found";
    }
    return true;
  }

  functions = [ "insertCell", "deleteCell" ];

  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);
  verify(checkFunctions_HasProperty(tr1, functions));
  verify(checkFunctions_Enumerate(tr1, functions));
}

// --------------------------------------------------------------------

group "DOM.HTML.HTMLTableRowElement.functions.insertCell";
require init;
language ecmascript;

html
{
  "<html>"
    "<body>"
      "<table>"
        "<caption>[caption]</caption>"
        "<thead>"
          "<tr><td></td><td></td></tr>"
          "<tr><td></td></tr>"
        "</thead>"
        "<tfoot>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tfoot>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
        "<tbody>"
          "<tr><td></td></tr>"
          "<tr><td></td></tr>"
        "</tbody>"
      "</table>"
    "</body>"
  "</html>"
}

test("HTMLTableRowElement.insertCell #1")
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 2);

  var cell1 = tr1.insertCell(0);

  verify(tr1.cells.length == 3);
  verify(tr1.cells.item(0) == cell1);
}

test("HTMLTableRowElement.insertCell #2")
  require success "HTMLTableRowElement.insertCell #1";
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 3);

  var cell1 = tr1.insertCell(3);

  verify(tr1.cells.length == 4);
  verify(tr1.cells.item(3) == cell1);
}

test("HTMLTableRowElement.insertCell #3")
  require success "HTMLTableRowElement.insertCell #2";
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 4);

  var cell1 = tr1.insertCell(2);

  verify(tr1.cells.length == 5);
  verify(tr1.cells.item(2) == cell1);
}

test("HTMLTableRowElement.insertCell #4")
  require success "HTMLTableRowElement.insertCell #3";
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 5);

  try
  {
    var cell1 = tr1.insertCell(6);
    verify(!"Should have thrown an exception");
  }
  catch (e)
  {}

  verify(tr1.cells.length == 5);
}

test("HTMLTableRowElement.insertCell #5")
  require success "HTMLTableRowElement.insertCell #4";
{

  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 5);

  try
  {
    var cell1 = tr1.insertCell(-2);
    verify(!"Should have thrown an exception");
  }
  catch (e)
  {}

  verify(tr1.cells.length == 5);
}

test("HTMLTableRowElement.insertCell #6")
  require success "HTMLTableRowElement.insertCell #5";
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);

  verify(tr1.cells.length == 5);

  var cell1 = tr1.insertCell(-1);

  verify(tr1.cells.length == 6);
  verify(tr1.cells.item(5) == cell1);
}

test("HTMLTableRowElement.insertCell #7")
{
  var tr1 = document.getElementsByTagNameNS("*", "tr").item(0);
  verify(tr1);
  try
  {
   tr1.insertCell();
   verify(!"insertCell(): should have thrown an exception");
  }
  catch(e) {}
  try
  {
    verify(tr1.insertCell("foo") instanceof HTMLTableCellElement);
  }
  catch(e)
  {
    verify(!"insertCell('foo'): should have thrown an exception");
  }
  verify(tr1);
}

group "DOM.HTML.HTMLTableRowElement.properties";
require init;
language ecmascript;


test("HTMLTableRowElement.rowIndex#1")
{
  // From bug 308831
  // test 50: construct a table, and see if the table is as expected
  var table = document.createElement('table');
  verify(table);
  table.appendChild(document.createElement('tbody'));
  var tr1 = document.createElement('tr');
  verify(tr1);
  table.appendChild(tr1);
  table.appendChild(document.createElement('caption'));
  table.appendChild(document.createElement('thead'));
  // <table><tbody/><tr/><caption/><thead/>
  table.insertBefore(table.firstChild.nextSibling, null); // move the <tr/> to the end
  // <table><tbody/><caption/><thead/><tr/>
  table.replaceChild(table.firstChild, table.lastChild); // move the <tbody/> to the end and remove the <tr>
  // <table><caption/><thead/><tbody/>
  var tr2 = table.tBodies[0].insertRow(0);
  // <table><caption/><thead/><tbody><tr/></tbody>
  verify(table.tBodies[0].rows[0].rowIndex == 0);
}

test("HTMLTableRowElement.rowIndex#2")
{
  verify(document.createElement("tr").rowIndex == -1);
}

test("HTMLTableRowElement.sectionRowIndex#1")
{
  // From bug 308831
  // test 50: construct a table, and see if the table is as expected
   var table = document.createElement('table');
   verify(table);
   table.appendChild(document.createElement('tbody'));
   var tr1 = document.createElement('tr');
   verify("tr1");
   table.appendChild(tr1);
   table.appendChild(document.createElement('caption'));
   table.appendChild(document.createElement('thead'));
   // <table><tbody/><tr/><caption/><thead/>
   table.insertBefore(table.firstChild.nextSibling, null); // move the <tr/> to the end
   // <table><tbody/><caption/><thead/><tr/>
   table.replaceChild(table.firstChild, table.lastChild); // move the <tbody/> to the end and remove the <tr>
   // <table><caption/><thead/><tbody/>
   var tr2 = table.tBodies[0].insertRow(0);
   // <table><caption/><thead/><tbody><tr/></tbody>
   verify(table.tBodies[0].rows[0].sectionRowIndex == 0);
}

test("HTMLTableRowElement.sectionRowIndex#2")
{
  verify(document.createElement("tr").sectionRowIndex == -1);
}
