group "DOM.HTML.HTMLElement.properties.cacheUpdate";
require init;
language ecmascript;

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span itemprop='prop1'>val1.1</span>
//!		<span itemprop='prop1'>val1.2</span>
//!		<span itemprop='prop2'>val2</span>
//!		<span itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection add element with new property")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var propx = props.namedItem('propx');
	verify(propx.length == 0);

	var new_div = document.createElement('div');
	new_div.setAttribute('itemprop', 'propx');
	new_div.innerHTML = 'valx';
	document.querySelector('div').appendChild(new_div);

	verify(props.length == 5);
	verify(propx.length == 1);
	verify(propx[0].itemValue == 'valx');
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span itemprop='prop1'>val1.1</span>
//!		<span itemprop='prop1'>val1.2</span>
//!		<span itemprop='prop2'>val2</span>
//!		<span itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection add element with existing property")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	verify(prop1.length == 2);

	var new_div = document.createElement('div');
	new_div.setAttribute('itemprop', 'prop1');
	new_div.innerHTML = 'val1.3';
	document.querySelector('div').appendChild(new_div);

	verify(props.length == 5);
	verify(prop1.length == 3);
	verify(prop1[0].itemValue == 'val1.1');
	verify(prop1[1].itemValue == 'val1.2');
	verify(prop1[2].itemValue == 'val1.3');
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span itemprop='prop1'>val1.2</span>
//!		<span itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection change existing property")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelector('#one').setAttribute('itemprop', 'prop3');
	
	verify(props.length == 4);
	verify(prop1.length == 1);
	verify(prop1[0].itemValue == 'val1.2');
	verify(prop3.length == 2);
	verify(prop3[0].itemValue == 'val1.1');
	verify(prop3[1].itemValue == 'val3and4and5');
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelector('#four').setAttribute('itemprop', 'prop4 prop5');
	verify(props.length == 4);
	verify(prop3.length == 1);
	verify(prop3[0].itemValue == 'val1.1');
	verify(prop4.length == 1);
	verify(prop5.length == 1);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span itemprop='prop1'>val1.2</span>
//!		<span itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection delete element with existing property")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	var span_to_delete = document.querySelector('#one');
	document.querySelector('div').removeChild(span_to_delete);
	verify(props.length == 3);
	verify(prop1.length == 1);
	verify(prop1[0].itemValue == 'val1.2');
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	var span_to_delete2 = document.querySelector('#four');
	document.querySelector('div').removeChild(span_to_delete2);
	verify(props.length == 2);
	verify(prop1.length == 1);
	verify(prop3.length == 0);
	verify(prop4.length == 0);
	verify(prop5.length == 0);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span itemprop='prop1'>val1.2</span>
//!		<span itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection delete existing property")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelector('#one').removeAttribute('itemprop');
	verify(props.length == 3);
	verify(prop1.length == 1);
	verify(prop1[0].itemValue == 'val1.2');
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelector('#four').removeAttribute('itemprop');
	verify(props.length == 2);
	verify(prop1.length == 1);
	verify(prop1[0].itemValue == 'val1.2');
	verify(prop3.length == 0);
	verify(prop4.length == 0);
	verify(prop5.length == 0);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span id=two itemprop='prop1'>val1.2</span>
//!		<span id=three itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection add element which is subitem")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	var new_div = document.createElement('div');
	new_div.setAttribute('itemscope', 'itemscope');
	new_div.innerHTML = 'valx';
	document.querySelector('div').appendChild(new_div);

	new_div.appendChild(document.querySelector('#one'));
	new_div.appendChild(document.querySelector('#two'));
	new_div.appendChild(document.querySelector('#three'));
	new_div.appendChild(document.querySelector('#four'));
	// reulting tree:
	//<div itemscope>
	//   <div itemscope>
	//		<span id=one itemprop='prop1'>val1.1</span>
	//		<span id=two itemprop='prop1'>val1.2</span>
	//		<span id=three itemprop='prop2'>val2</span>
	//		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
	//  </div>
	//</div>

	verify(props.length == 0);
	verify(prop1.length == 0);
	verify(prop3.length == 0);
	verify(prop4.length == 0);
	verify(prop5.length == 0);

	var props_inserted = document.querySelectorAll('div')[1].properties;
	verify(props_inserted.length == 4);
	var prop1_inserted = props_inserted.namedItem('prop1');
	var prop3_inserted = props_inserted.namedItem('prop3');
	var prop4_inserted = props_inserted.namedItem('prop4');
	var prop5_inserted = props_inserted.namedItem('prop5');
	verify(prop1_inserted.length == 2);
	verify(prop3_inserted.length == 1);
	verify(prop4_inserted.length == 1);
	verify(prop5_inserted.length == 1);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span id=two itemprop='prop1'>val1.2</span>
//!		<span id=three itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//!</body>
}
test("HTMLPropertiesCollection remove itemscope")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelector('div').removeAttribute('itemscope');
	verify(props.length == 0);
	verify(prop1.length == 0);
	verify(prop3.length == 0);
	verify(prop4.length == 0);
	verify(prop5.length == 0);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope itemref='ref'>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span id=two itemprop='prop1'>val1.2</span>
//!		<span id=three itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//! <div itemprop='prop1'>valref</div>
//!</body>
}
test("HTMLPropertiesCollection itemRef and added id")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelectorAll('div')[1].setAttribute('id', 'ref');
	verify(props.length == 5);
	verify(prop1.length == 3);
	verify(prop1[0].itemValue == 'val1.1');
	verify(prop1[1].itemValue == 'val1.2');
	verify(prop1[2].itemValue == 'valref');
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);
}

html
{
//!<!doctype html>
//!<body>
//!	<div itemscope itemref='ref'>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span id=two itemprop='prop1'>val1.2</span>
//!		<span id=three itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//! <div id='ref' itemprop='prop1'>valref</div>
//!</body>
}
test("HTMLPropertiesCollection itemRef and removed id")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 5);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 3);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelectorAll('div')[1].removeAttribute('id');
	verify(prop1.length == 2);
	verify(prop1[0].itemValue == 'val1.1');
	verify(prop1[1].itemValue == 'val1.2');
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);
}


html
{
//!<!doctype html>
//!<body>
//!	<div itemscope>
//!		<span id=one itemprop='prop1'>val1.1</span>
//!		<span id=two itemprop='prop1'>val1.2</span>
//!		<span id=three itemprop='prop2'>val2</span>
//!		<span id=four itemprop='prop3 prop4 prop5'>val3and4and5</span>
//!	</div>
//! <div id='ref' itemprop='prop1'>valref</div>
//!</body>
}
test("HTMLPropertiesCollection add itemRef")
{
	var props = document.querySelector('div').properties;
	verify(props.length == 4);
	var prop1 = props.namedItem('prop1');
	var prop3 = props.namedItem('prop3');
	var prop4 = props.namedItem('prop4');
	var prop5 = props.namedItem('prop5');
	verify(prop1.length == 2);
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);

	document.querySelectorAll('div')[0].setAttribute('itemref', 'ref');
	verify(props.length == 5);
	verify(prop1.length == 3);
	verify(prop1[0].itemValue == 'val1.1');
	verify(prop1[1].itemValue == 'val1.2');
	verify(prop1[2].itemValue == 'valref');
	verify(prop3.length == 1);
	verify(prop4.length == 1);
	verify(prop5.length == 1);
}

