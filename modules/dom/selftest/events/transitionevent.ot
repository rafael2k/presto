/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2008-2011 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.	It may not be distributed
 * under any circumstances.
 *
 */
group "DOM.Events.TransitionEvent";
require init;

require CSS_TRANSITIONS;

language ecmascript;

test("TransitionEvent instance types")
{
	var ev = document.createEvent("TransitionEvent");
	verify(ev);
	verify(ev instanceof Event);
	verify(typeof ev.elapsedTime == "number");
	verify(typeof ev.propertyName == "string");
	verify(typeof ev.initTransitionEvent == "function");
}

test("initTransitionEvent")
{
	var ev = document.createEvent("TransitionEvent");
	ev.initTransitionEvent("transitionend", false, false, "color", 1);
	verify(ev.type == "transitionend");
	verify(ev.elapsedTime == 1);
	verify(ev.propertyName == "color");
}

test("TransitionEvent read-only (strict mode)")
{
	function testcase() {
		"use strict";
		var ev = document.createEvent("TransitionEvent");

		var orig_value = ev.elapsedTime;
		try {
			ev.elapsedTime = 10;
			verify(!"Expected an exception");
		} catch (ex) {
			verify(ex instanceof TypeError);
		}
		verify(ev.elapsedTime == orig_value);

		orig_value = ev.propertyName;
		try {
			ev.propertyName = "background-color";
			verify(!"Expected an exception");
		} catch (ex) {
			verify(ex instanceof TypeError);
		}
		verify(ev.propertyName == orig_value);
	}
	testcase();
}

test("TransitionEvent read-only (non-strict mode)")
{
	var ev = document.createEvent("TransitionEvent");

	var e;
	try {
		ev.elapsedTime = 10;
	}
	catch (ex)
	{
		e = ex;
	}
	verify(e == undefined && ev.elapsedTime != 10);

	e = undefined;
	try {
		ev.propertyName = "background-color";
	}
	catch (ex)
	{
		e = ex;
	}
	verify(e == undefined && ev.propertyName != "background-color");
}

html {
//! <!DOCTYPE html>
//! <style>
//! div { color: red; }
//! div { transition-property: color; transition-duration: 1s; }
//! div.t1 { color: green; }
//! </style>
//! <div></div>
}

test("TransitionEvent dispatching") async;
{
	var eventhandler = function (ev) {
		if (ev.elapsedTime != 1)
		{
			ST_failed("Expected elapsedTime=1, got: "+ev.elapsedTime);
		}
		if (ev.propertyName != 'color')
		{
			ST_failed("Expected propertyName=color, got: "+ev.propertyName);
		}
		var computed_color = getComputedStyle(document.getElementsByTagName("div")[0], null).color;
		if (computed_color != "#008000")
		{
			ST_failed("Expected computed color = #008000, got: "+computed_color);
		}
		ST_passed();
	}

	document.addEventListener("transitionend", eventhandler, false);
	document.getElementsByTagName("div")[0].className = "t1";
}
