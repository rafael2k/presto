/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "accessibility.radio_test";
require init;

language C++;

include "modules/accessibility/opaccessibleitem.h";
include if QUICK  "adjunct/quick/Application.h";
include "modules/dochand/docman.h";
include "modules/doc/frm_doc.h";
include "modules/doc/html_doc.h";
include "modules/display/vis_dev.h";

html
{
	//! <html><body>
	//! <span><input type="radio" name="radio" value=radio1>radio1</span>
	//! <label><input type="radio" name="radio" value=radio2>radio2</label>
	//! <input type="radio" name="r3" id="r3"><label for="r3">radio3</label>
	//! <span role="radio">radio4</span>
	//! <div role="radio">radio5</div>
	//! <table role="presentation"><tr><td role="radio">radio6</td></tr></table>
	//! </html>
}
test("radiotest 1")
{
#ifdef ACCESSIBILITY_EXTENSION_SUPPORT
	OpString test;
	FramesDocument* doc = state.doc;
	verify(doc);
	VisualDevice* vd = doc->GetVisualDevice();
	verify(vd);
	verify(vd->AccessibilityGetRole() == Accessibility::kElementKindScrollview);
	int count = vd->GetAccessibleChildrenCount();
	verify(count >= 1 && count <= 3);
	OpAccessibleItem* accdoc = vd->GetAccessibleChild(count-1);
	verify(accdoc);
	verify(accdoc->AccessibilityGetRole() == Accessibility::kElementKindWebView);
	count = accdoc->GetAccessibleChildrenCount();
	verify(count == 8);
	
	OpAccessibleItem* rg1 = accdoc->GetAccessibleChild(0);
	OpAccessibleItem* rg2 = accdoc->GetAccessibleChild(3);

	verify(rg1);
	verify(rg2);
	verify(rg1->AccessibilityGetRole() == Accessibility::kElementKindRadioTabGroup);
	verify(rg2->AccessibilityGetRole() == Accessibility::kElementKindRadioTabGroup);

	OpAccessibleItem* r1 = rg1->GetAccessibleChild(0);
	OpAccessibleItem* r2 = rg1->GetAccessibleChild(1);
	OpAccessibleItem* r3 = rg2->GetAccessibleChild(0);
	OpAccessibleItem* r4 = accdoc->GetAccessibleChild(5);
	OpAccessibleItem* r5 = accdoc->GetAccessibleChild(6);
	OpAccessibleItem* r6 = accdoc->GetAccessibleChild(7);

	verify(r1);
	verify(r1->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	verify(OpStatus::IsSuccess(r1->AccessibilityGetText(test)));
//	verify(test.Compare("radio1") == 0);

	verify(r2);
	verify(r2->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	verify(OpStatus::IsSuccess(r2->AccessibilityGetText(test)));
	OpAccessibleItem* rl2 = r2->GetAccessibleLabelForControl();
	verify(rl2);
	verify(rl2 == accdoc->GetAccessibleChild(2));
	verify(OpStatus::IsSuccess(rl2->AccessibilityGetText(test)));
	verify(test.Compare("radio2") == 0);

	verify(r3);
	verify(r3->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	OpAccessibleItem* rl3 = r3->GetAccessibleLabelForControl();
	verify(rl3);
	verify(rl3 == accdoc->GetAccessibleChild(4));
	verify(OpStatus::IsSuccess(rl3->AccessibilityGetText(test)));
	verify(test.Compare("radio3") == 0);

	verify(r4);
	verify(r4->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	verify(OpStatus::IsSuccess(r4->AccessibilityGetText(test)));
	verify(test.Compare("radio4") == 0);

	verify(r5);
	verify(r5->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	verify(OpStatus::IsSuccess(r5->AccessibilityGetText(test)));
	verify(test.Compare("radio5") == 0);

	verify(r6);
	verify(r6->AccessibilityGetRole() == Accessibility::kElementKindRadioButton);
	verify(OpStatus::IsSuccess(r6->AccessibilityGetText(test)));
	verify(test.Compare("radio6") == 0);
#endif
}
