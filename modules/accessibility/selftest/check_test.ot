/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "accessibility.check_test";
require init;

language C++;

include "modules/accessibility/opaccessibleitem.h";
include if QUICK  "adjunct/quick/Application.h";
include "modules/dochand/docman.h";
include "modules/doc/frm_doc.h";
include "modules/doc/html_doc.h";
include "modules/display/vis_dev.h";

html
{
	//! <html><body>
	//! <span><input type="checkbox" name="checkbox1">checkbox1</span>
	//! <label><input type="checkbox" name="cb2">checkbox2</label>
	//! <input type="checkbox" name="cb3" id="cb3"><label for="cb3">checkbox3</label>
	//! <span role="checkbox">checkbox4</span>
	//! <div role="checkbox">checkbox5</div>
	//! <table role="presentation"><tr><td role="checkbox">checkbox6</td></tr></table>
	//! </html>
}
test("checktest 1")
{
#ifdef ACCESSIBILITY_EXTENSION_SUPPORT
	OpString test;
	FramesDocument* doc = state.doc;
	verify(doc);
	VisualDevice* vd = doc->GetVisualDevice();
	verify(vd);
	verify(vd->AccessibilityGetRole() == Accessibility::kElementKindScrollview);
	int count = vd->GetAccessibleChildrenCount();
	verify(count >= 1 && count <= 3);
	OpAccessibleItem* accdoc = vd->GetAccessibleChild(count-1);
	verify(accdoc);
	verify(accdoc->AccessibilityGetRole() == Accessibility::kElementKindWebView);
	count = accdoc->GetAccessibleChildrenCount();
	verify(count == 8);

	OpAccessibleItem* cb1 = accdoc->GetAccessibleChild(0);
	OpAccessibleItem* cb2 = accdoc->GetAccessibleChild(2);
	OpAccessibleItem* cb3 = accdoc->GetAccessibleChild(3);
	OpAccessibleItem* cb4 = accdoc->GetAccessibleChild(5);
	OpAccessibleItem* cb5 = accdoc->GetAccessibleChild(6);
	OpAccessibleItem* cb6 = accdoc->GetAccessibleChild(7);

	verify(cb1);
	verify(cb1->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);
	verify(OpStatus::IsSuccess(cb1->AccessibilityGetText(test)));
//	verify(test.Compare("checkbox1") == 0);

	verify(cb2);
	verify(cb2->AccessibilityGetRole() == Accessibility::kElementKindLabel);
	verify(OpStatus::IsSuccess(cb2->AccessibilityGetText(test)));
	verify(test.Compare("checkbox2") == 0);

	OpAccessibleItem* cb21= cb2->GetAccessibleChild(0);
	verify(cb21);
	verify(cb21->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);

	verify(cb3);
	verify(cb3->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);
	OpAccessibleItem* cbl3 = cb3->GetAccessibleLabelForControl();
	verify(cbl3);
	verify(cbl3 == accdoc->GetAccessibleChild(4));
	verify(OpStatus::IsSuccess(cbl3->AccessibilityGetText(test)));
	verify(test.Compare("checkbox3") == 0);

	verify(cb4);
	verify(cb4->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);
	verify(OpStatus::IsSuccess(cb4->AccessibilityGetText(test)));
	verify(test.Compare("checkbox4") == 0);

	verify(cb5);
	verify(cb5->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);
	verify(OpStatus::IsSuccess(cb5->AccessibilityGetText(test)));
	verify(test.Compare("checkbox5") == 0);

	verify(cb6);
	verify(cb6->AccessibilityGetRole() == Accessibility::kElementKindCheckbox);
	verify(OpStatus::IsSuccess(cb6->AccessibilityGetText(test)));
	verify(test.Compare("checkbox6") == 0);
#endif
}
