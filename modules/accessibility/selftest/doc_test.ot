/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "accessibility.doc_test";
require init;

language C++;

include "modules/accessibility/opaccessibleitem.h";
include if QUICK  "adjunct/quick/Application.h";
include "modules/dochand/docman.h";
include "modules/doc/frm_doc.h";
include "modules/doc/html_doc.h";
include "modules/display/vis_dev.h";

html
{
	//! <html><body><a href="foo">Link</a></html>
}
test("Doctest 1")
{
#ifdef ACCESSIBILITY_EXTENSION_SUPPORT
	OpString test;
	FramesDocument* doc = state.doc;
	verify(doc);
	VisualDevice* vd = doc->GetVisualDevice();
	verify(vd);
	verify(vd->AccessibilityGetRole() == Accessibility::kElementKindScrollview);
	int count = vd->GetAccessibleChildrenCount();
	verify(count >= 1 && count <= 3);
	OpAccessibleItem* accdoc = vd->GetAccessibleChild(count-1);
	verify(accdoc);
	verify(accdoc->AccessibilityGetRole() == Accessibility::kElementKindWebView);
	count = accdoc->GetAccessibleChildrenCount();
	verify(count == 1);
	OpAccessibleItem* url = accdoc->GetAccessibleChild(0);
	verify(url);
	verify(url->AccessibilityGetRole() == Accessibility::kElementKindLink);
	url->AccessibilityGetURL(test);
	verify(test.Compare("opera:foo") == 0);
	url->AccessibilityGetText(test);
	verify(test.Compare("Link") == 0);
#endif
}
