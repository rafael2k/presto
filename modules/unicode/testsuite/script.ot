/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2008-2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Marcus Cromnow
*/

group "unicode.script";

require USE_UNICODE_SCRIPT;

include "modules/unicode/unicode.h";

table GetScript_Data(uni_char, ScriptType)
{
	{ 0x0000, SC_Unknown },
	{ 0x06FF, SC_Arabic  },
	{ 0x09A8, SC_Bengali },
	{ 0x0440, SC_Cyrillic},
	{ 0x0971, SC_Devanagari},
	{ 0x2126, SC_Greek   },
	{ 0x0A86, SC_Gujarati},
	{ 0x0A10, SC_Gurmukhi},	
	{ 0x2F00, SC_Han     },
	{ 0x1140, SC_Hangul  },
	{ 0x05BF, SC_Hebrew  },
	{ 0x3096, SC_Hiragana},
	{ 0x0CB3, SC_Kannada },
	{ 0xFF71, SC_Katakana},
	{ 0x0E8A, SC_Lao     },
	{ 0x00F9, SC_Latin   },
	{ 0x0D75, SC_Malayalam},
	{ 0x102D, SC_Myanmar },
	{ 0x0B71, SC_Oriya   },
	{ 0x0DC0, SC_Sinhala },
	{ 0x0B99, SC_Tamil   },
	{ 0x0C28, SC_Telugu  },
	{ 0x0E3A, SC_Thai    },
	{ 0x0FD2, SC_Tibetan }
};

// Look a couple of random code points.
test("GetScript")
{
	iterate (code_point, script) from GetScript_Data
	{
		if (script != Unicode::GetScriptType(code_point))
		{
			output("iter: %i", __iter__);
			verify(FALSE);
		}
	}
}

