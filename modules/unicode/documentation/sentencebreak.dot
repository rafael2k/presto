// State machine for calculating sentence boundaries
// Based on Unicode Standard Annex (UAX) 29, Text Boundaries.
//
// Green indicates break, red indicates non-break

digraph sentencebreak {
//	sot -> any [label = "any (from\nall unspecified)", color = green, fontcolor = green];

	// any
	any -> any [label = "any", color = red, fontcolor = red];
	any -> cr [label = "CR", color = green, fontcolor = green];
	any -> Sep [label = "Sep | LF", color = red, fontcolor = red];
	any -> ATerm [label = "ATerm", color = red, fontcolor = red];
	any -> Upper [label = "Upper", color = red, fontcolor = red];

	// cr
	cr -> cr [label = "LF", color = red, fontcolor = red];
	cr -> Sep [label = "Sep | CR", color = green, fontcolor = green];

	// Sep
	Sep -> "any'" [label = "see output\nfor any", color = green, fontcolor = green];

	// ATerm
	ATerm -> Sep [label = "Sep | CR | LF", color = red, fontcolor = red];
//	ATerm -> "ATerm Close* Sp* not(...)*" [label = "Numeric", color = red, fontcolor = red];
	ATerm -> "ATerm Close* Sp*" [label = "Close", color = red, fontcolor = red];
	ATerm -> STerm [label = "STerm", color = red, fontcolor = red];
	ATerm -> "ATerm Close* Sp* not(...)*" [label = "Numeric, STerm, ATerm, not(OLetter, Upper, Lower, Sep, CR, LF)", color = red, fontcolor = red];

	// ATerm Close* Sp*
	"ATerm Close* Sp*" -> "ATerm Close* Sp*" [label = "Close | Sp", color = red, fontcolor = red];
	"ATerm Close* Sp*" -> Sep [label = "Sep | CR | LF", color = "red", fontcolor = red];
	"ATerm Close* Sp*" -> "ATerm Close* Sp* not(...)*" [label = "Numeric | STerm | ATerm | not(OLetter, Upper, Lower, Sep, CR, LF)", color = red, fontcolor = red];

	// ATerm Close* Sp* not(...)*
	"ATerm Close* Sp* not(...)*" -> STerm [label = "STerm", color = red, fontcolor = red];
	"ATerm Close* Sp* not(...)*" -> any [label = "Lower", color = red, fontcolor = red];

	// STerm
	STerm -> STerm [label = "STerm", color = red, fontcolor = red];
	STerm -> "(STerm | ATerm) Close* Sp*" [label = "Sp | Close", color = red, fontcolor = red];
	STerm -> Sep [label = "Sep | CR | LF", color = red, fontcolor = red];
	STerm -> ATerm [label = "ATerm", color = red, fontcolor = red];

	// (STerm | ATerm) Close* Sp*
	"(STerm | ATerm) Close* Sp*" -> "(STerm | ATerm) Close* Sp*" [label = "Sp | Close", color = red, fontcolor = red];
	"(STerm | ATerm) Close* Sp*" -> STerm [label = "STerm", color = red, fontcolor = red];
	"(STerm | ATerm) Close* Sp*" -> "(STerm | ATerm) Close* Sp* Sep" [label = "Sep | CR | LF", color = red, fontcolor = red];
	"(STerm | ATerm) Close* Sp*" -> "any'" [label = "see output\nfor any", color = green, fontcolor = green];

	// Upper
	Upper -> "Upper ATerm" [label = ATerm, color = red, fontcolor = red];

	// Upper ATerm
	"Upper ATerm" -> "Upper" [label = Upper, color = red, fontcolor = red];

	// (STerm | ATerm) Close* Sp* Sep
	"(STerm | ATerm) Close* Sp* Sep" -> "any'" [label = "see output\nfor any", color = green, fontcolor = green];
}
