# For emacs -*- tab-width: 4; indent-tabs-mode: t; fill-column: 80; -*-
# Hey, developers - please add new entries in *alphabetic order*.

API_UC_HANGUL_SYLLABLE			peter

	Enables support for retrieving the Hangul_Syllable_Type property
	for a Unicode code point.

	Defines   : USE_UNICODE_HANGUL_SYLLABLE
	Depends on: FEATURE_3P_UNICODE

API_UC_LINEBREAK				peter

	Enables support for the Unicode Line-Breaking Properties algorithm
	as defined by the Unicode standard. This implementation replaces
	the previous Unicode::GetLineBreakProperties() interface.

	Defines   : USE_UNICODE_LINEBREAK
	Depends on: FEATURE_3P_UNICODE

API_UC_SCRIPT					marcusc

	Enables support for retrieving the script property for
	a Unicode code point.

	Defines   : USE_UNICODE_SCRIPT
	Depends on: FEATURE_3P_UNICODE

API_UC_TEXT_SEGMENTATION		peter

	Enables support for the UnicodeSegmenter class, which implements
	the Unicode Text Boundary algorithm as defined by the Unicode
	standard.

	Defines   : USE_UNICODE_SEGMENTATION
	Depends on: FEATURE_3P_UNICODE

API_UC_UTF32_CODECS			peter

	Enables support for UTF-32 codecs for platforms where they are needed.
	The classes UTF32Decoder and UTF32Encoder are made available. These
	support converting to/from UTF-32 in the native encoding only.

	These classes will NOT be made available through the encodings module
	mechanisms, i.e. it is not possible to get a UTF-32 converter by passing
	"utf-32" to its factory functions. Therefore, in order to convert
	to/from UTF-32, these classes MUST be instantiated explicitly, for
	example:
	    UTF32Decoder conv = OP_NEW(UTF32Decoder, ());
	    if (conv && OpStatus::IsSuccess(conv->Construct()))
	        /* Ready for use */

	Defines: USE_UNICODE_UTF32
	Depends on: nothing

# Deprecated APIs

API_UC_OLD_LINEBREAK			deprecated

	This API is no longer supported.

	Defines   : USE_OLD_UNICODE_LINEBREAK
	Depends on: nothing

# See second line: alphabetic order !
# If everyone adds everything here, everyone gets conflicts.
