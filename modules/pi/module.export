API_PI_OPWINDOW_DESKTOP_FUNCTIONS      rikard
    This set of functions allow OpWindow to perform desktop management functions, like:
    * Get/SetDesktopPlacement
    * Get/SetRestoreState
    * Restore/Minimize/Maximize
    * Fullscreen
    * LockUpdate
    * SetFloating
    * SetAlwaysBelow
    * SetShowInWindowList

    Defines: OPWINDOW_DESKTOP_FUNCTIONS
    Depends on: nothing

API_PI_OPWINDOW_TOPMOST_WINDOW          rikard
    Decides if OpWindow should have IsActiveTopmostWindow or not.

    Defines: OPWINDOW_TOPMOST_WINDOW
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETFILETYPENAME     rikard
    OpSystemInfo::GetFileTypeName is needed.

    Defines: OPSYSTEMINFO_GETFILETYPENAME
    Depends on: nothing

API_PI_OPSOCKET_LOCALSOCKETADDR         no
    OpSocket::GetSocketAddress() has an extra parameter that specifies whether
    to get the address of the remote (default) or local end of the socket
    connection.

    Defines: OPSOCKET_GETLOCALSOCKETADDR
    Depends on: nothing

API_PI_GENERATE_GUID                    mstensho
    OpSystemInfo::GenerateGuid() is available. Please do not import this API
    directly, use the wrapping API_UTIL_GENERATE_GUID.

    Defines: GUID_GENERATE_SUPPORT
    Depends on: HAVE_UUID_GENERATE

API_PI_OPSYSTEMINFO_GETSYSTEMIP         mstensho
    OpSystemInfo::GetSystemIp() is available.

    Defines: OPSYSTEMINFO_GETSYSTEMIP
    Depends on: nothing

API_PI_SHARED_MEMORY                    mpawlowski
    OpSharedMemory and OpSharedMemoryMutex is available.

    Defines: PI_SHARED_MEMORY
    Depends on: nothing

API_PI_OPFILECHOOSER_GETFILTER          mstensho
    OpFileChooser can inform its user about which file extension filter was
    selected during a file choosing session.

    Defines: OPFILECHOOSER_GETFILTER
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETPROTHANDLER      mstensho
    Makes OpSystemInfo::GetProtocolHandler() available.

    Defines: OPSYSTEMINFO_GETPROTHANDLER
    Depends on: nothing

API_PI_OPSYSTEMINFO_FILEUTILS           mstensho
    Makes the following methods in OpSystemInfo available:
    GetFileHandler(), GetIsExecutable()

    Defines: OPSYSTEMINFO_FILEUTILS
    Depends on: nothing

API_PI_OPSYSTEMINFO_SHIFTSTATE          mstensho
    Makes OpSystemInfo::GetShiftKeyState() available.

    Defines: OPSYSTEMINFO_SHIFTSTATE
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETPID              mstensho
    Makes OpSystemInfo::GetCurrentProcessId() available.

    Defines: OPSYSTEMINFO_GETPID
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETBINARYPATH       andersr
    Makes OpSystemInfo::GetBinaryPath() available.

    Defines: OPSYSTEMINFO_GETBINARYPATH
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETPHYSMEM          mstensho
    Makes OpSystemInfo::GetPhysicalMemorySizeMB() available.

    Defines: OPSYSTEMINFO_GETPHYSMEM
    Depends on: SYS_GETPHYSMEM

API_PI_OPSYSTEMINFO_GETAVAILMEM          wmaslowski
    Makes OpSystemInfo::GetAvailableMemorySizeMB() available.

    Defines: OPSYSTEMINFO_GETAVAILMEM

API_PI_OPSYSTEMINFO_DEVICESTRINGS wmaslowski
	Makes various device strings getters(like GetDeviceFirmware) available in OpSystemInfo

	Defines: OPSYSTEMINFO_DEVICESTRINGS

API_PI_ASYNC_FILE_OP                    mstensho
    OpLowLevelFile supports asynchronous file operations.
    OpLowLevelFileListener is available.

    Defines: PI_ASYNC_FILE_OP

API_PI_OPSYSTEM_GET_UNIQUE_FILENAME_PATTERN	mstensho
    Makes OpSystemInfo::GetUniqueFileNamePattern() available.

    Defines: OPSYSTEM_GET_UNIQUE_FILENAME_PATTERN

API_PI_PAUSE_DOWNLOAD                   mstensho
    Support for socket-level load pausing and resuming. While loading
    is paused, an OpSocket will attempt to pause loading, and, more
    importantly, not notify its listener if there's more data available for
    reading. A user of this feature must be aware that pausing for too long
    may cause the remote end to time out and close the connection.

    Makes PauseRecv() and ContinueRecv() in OpSocket available.

    Defines: OPSOCKET_PAUSE_DOWNLOAD
    Depends on: nothing

API_PI_OPSOCKET_ABORTIVE_CLOSE          no
    Makes OpSocket::SetAbortiveClose() available.

    Defines: SOCKET_NEED_ABORTIVE_CLOSE
    Depends on: nothing

API_PI_OPSOCKET_OPTIONS			molsson
    Makes OpSocket::SetSocketOption() and OpSocket::GetSocketOption() available.

    Defines: OPSOCKET_OPTIONS
    Depends on: nothing

API_PI_PLUGIN_DETECT                    frodegill
    Makes OpPluginDetectionListener class and OpSystemInfo::DetectPlugins()
    available.

    Defines: PI_PLUGIN_DETECT
    Depends on: _PLUGIN_SUPPORT_

API_PI_OPFONT_GLYPH_PROPS               wonko
    Makes OpFont::GetGlyphProps() available.

    Defines: OPFONT_GLYPH_PROPS
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETSUBSCRIBERID     dblizniak
    Makes OpSystemInfo::GetSubscriberID() available.

    Defines: OPSYSTEMINFO_GETSUBSCRIBERID
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETDRMVERSION       no
    Makes OpSystemInfo::GetDRMVersion() available.

    Defines: OPSYSTEMINFO_GETDRMVERSION
    Depends on: nothing

API_PI_CHANGEFILEINFO                   mstensho
    Makes OpLowLevelFile::ChangeFileInfo() available.

    Defines: SUPPORT_OPFILEINFO_CHANGE
    Depends on: nothing

API_PI_PLUGIN_EVENT                     mstensho
    OpPluginWindow supports new methods for generating and sending
    platform-specific events. This is an optional API only temporarily,
    until all platforms have adapted to the new way. At some point
    this code will be enabled unconditionally.

    This also makes the OpNS4PluginAdapter class available.

    A lot of code in other modules changes behavior when this API is
    imported. This enables cleaned up code for plug-in display in display,
    layout and ns4plugins.

    Defines: USE_PLUGIN_EVENT_API
    Depends on: _PLUGIN_SUPPORT_

API_PI_OPSYSTEMINFO_STATIC_PLUGIN	psmaas
    Makes OpSystemInfo::GetStaticPlugin() available.

    Defines: OPSYSTEMINFO_STATIC_PLUGIN
    Depends on: _PLUGIN_SUPPORT_

API_PI_OPMEMORY_MALLOC_LOCK		mortenro
    Enables a mutex API in the OpMemory class, to be used when allocating,
    reallocating and freeing memory.

    Defines: OPMEMORY_MALLOC_LOCK
    Depends on: nothing

API_PI_OPMEMORY_MEMDEBUG_LOCK		mortenro
    Enables a mutex API in the OpMemory class, to be used in memory debugging.

    Defines: OPMEMORY_MEMDEBUG_LOCK
    Depends on: nothing

API_PI_OPMEMORY_MEMORY_SEGMENT		mortenro
    Enables a memory allocation API in the OpMemory class, for allocating
    large memory segments from the operating system, for use by e.g. pooling.

    Defines: OPMEMORY_MEMORY_SEGMENT
    Depends on: nothing

API_PI_OPMEMORY_VIRTUAL_MEMORY		mortenro
    Enables a memory allocation API in the OpMemory class, for allocating
    memory using virtual memory management operations. When the platform
    has support for virtual memory management, this can make Opera able
    to utilize memory better.  This can also be used to enable more
    sophisticated debugging of illegal memory handling.

    Defines: OPMEMORY_VIRTUAL_MEMORY
    Depends on: nothing

API_PI_OPMEMORY_EXECUTABLE_SEGMENT	mortenro
    Enables a memory allocation API in the OpMemory class, for allocating
    memory intended to hold executable machine instructions. There are
    special API functions needed to manipulate such executbale memory
    segments in order to obtain the desired behaviour.

    NOTE: This API needs different implementations depending on whether
    the macro MEMORY_SMALL_EXEC_SEGMENTS is defined or not. This macro
    is controlled through TWEAK_MEMORY_SMALL_EXEC_SEGMENTS.

    Defines: OPMEMORY_EXECUTABLE_SEGMENT
    Depends on: nothing

API_PI_OPMEMORY_STACK_SEGMENT		jl
    Enables a memory allocation API in the OpMemory class, for allocating
    memory intended to be used for custom machine stacks.  Also enables
    a function called immediately before any stack switch operation, for
    platforms that need to prepare in some way for such operations.

    Defines: OPMEMORY_STACK_SEGMENT
    Depends on: nothing

API_PI_OPMEMORY_ALIGNED_SEGMENT		jl
    Enables a memory allocation API in the OpMemory class, for allocating
    large blocks of aligned memory.  The blocks are expected to be large
    enough that an effective allocation size granularity of the hardware's
    page size is unproblematic.  The alignment requirement is also expected to
    be at least as large as the hardware page size.

    Defines: OPMEMORY_ALIGNED_SEGMENT
    Depends on: nothing

API_PI_OP_THREAD_TOOLS				mstensho
    Makes the OpThreadTools class and its global instance g_thread_tools available.

    Defines: USE_OP_THREAD_TOOLS
    Depends on: nothing

API_PI_OPSYSTEMINFO_GETAPPID		no
    Makes OpsystemInfo::GetAppId() available.

    Defines: OPSYSTEMINFO_GETAPPID
    Depends on: nothing

API_PI_UDP_SOCKET			mstensho
    Support for OpDatagramSocket (UDP).

    Defines: OPUDPSOCKET
    Depends on: nothing

API_PI_NETWORK_INTERFACE_MANAGER	mstensho
    Makes OpNetworkInterfaceManager, OpNetworkInterface and
    OpNetworkInterfaceListener available.

    Defines: PI_NETWORK_INTERFACE_MANAGER
    Depends on: nothing

API_PI_INTERNET_CONNECTION		mostynb
    Makes OpInternetConnection available; a generic interface for requesting that 
    the platform bring up an internet connection on demand.

    Defines: PI_INTERNET_CONNECTION
    Depends on: nothing

API_PI_OPSYSTEMINFO_ISLOCALFILE		kswitalski
    Makes OpSystemInfo::IsLocalFile() available.

    Defines: SYSTEMINFO_ISLOCALFILE

API_PI_ANIMATED_WINDOWS			mstensho

    Makes OpWindow::STYLE_ANIMATED and OpWindow::SetTransformation() available.

    Defines: PI_ANIMATED_WINDOWS
    Depends on: nothing

API_PI_GEOLOCATION			lasse

    Enables the OpGeolocation class. To be used when core needs the platform
    to provide geographical coordinates.

    Defines     : PI_GEOLOCATION
    Depends on  : nothing

API_PI_EXPAND_ENV_VARIABLES		mstensho

    Makes OpSystemInfo::ExpandSystemVariablesInString() available.

    Defines     : PI_EXPAND_ENV_VARIABLES
    Depends on  : nothing

API_PI_OPSYSTEMINFO_CPU_ARCHITECTURE     jadahl

    Enables runtime detection of CPU Architecture using GetCPUArchitecture().

    This can be useful if Opera was built for an older architecture for
    backward compatibility but wants to use specific architectural features
    if available. For example when built for ARMv5 you can still use ARMv7
    features if Opera is run on an ARMv7 device.

    Defines     : OPSYSTEMINFO_CPU_ARCHITECTURE
    Depends on  : ARCHITECTURE_ARM

API_PI_OPSYSTEMINFO_CPU_FEATURES         jadahl

    Enables runtime detection of CPU features using GetCPUFeatures().

    This can be useful if Opera was built with a set of basic capabilities for
    backward compatibility but wants to use specific CPU features (such as SIMD
    instructions) if available.

    Defines     : OPSYSTEMINFO_CPU_FEATURES
    Depends on  : ARCHITECTURE_ARM
    Depends on  : ARCHITECTURE_IA32

API_PI_TELEPHONYNETWORKINFO			wmaslowski

	Enables telephony network info API (class OpTelephonyNetworkInfo)

	Defines: PI_TELEPHONYNETWORKINFO
	Depends on: nothing

API_PI_SUBSCRIBERINFO		wmaslowski

	Enables subscriber info API (class OpSubscriberInfo)

	Defines: PI_SUBSCRIBERINFO
	Depends on: nothing

API_PI_ADDRESSBOOK		wmaslowski

	Enables addressbok API (classes OpAddressBook, OpAddressBookGroup and OpAddressBookItem)

	Defines: PI_ADDRESSBOOK
	Depends on: nothing

API_PI_CAMERA				wmaslowski

	Enables camera API (class OpCamera)

	Defines: PI_CAMERA
	Depends on: nothing

API_PI_CAMERA_CAPTURE			msimonides

	Enables camera capture API (take photo to file, capture
	video to file).

	Defines: PI_CAMERA_CAPTURE
	Depends on: PI_CAMERA

API_PI_NETWORK_INTERFACE_INSPECTION	wmaslowski

	Enables GetInterfaceType and GetName methods in OpNetworkInterface

	Defines: PI_NETWORK_INTERFACE_INSPECTION
	Depends on: PI_NETWORK_INTERFACE_MANAGER

API_PI_OPSYSTEMINFO_GETSOUNDVOLUME	msimonides

	Enables OpSystemInfo::GetVolume method.

	Defines:	OPSYSTEMINFO_GETSOUNDVOLUME
	Depends on:	nothing

API_PI_OPSCREENINFO_ORIENTATION		msimonides

	Enables OpScreenProperties::orientation field.

	Defines:	OPSCREENINFO_ORIENTATION
	Depends on:	nothing

API_PI_ACCELEROMETER			tjamroszczak

	Enables accelerometer info (class OpAccelerometerInfo).

	Defines: PI_ACCELEROMETER
	Depends on: nothing

API_PI_OPUIINFO_DEFAULT_BUTTON		arjanl

	Exposes OpUiInfo::DefaultButtonOnRight to retrieve information about the
	default	ordering of buttons

	Defines		: PI_OPUIINFO_DEFAULT_BUTTON
	Depends on	: nothing

API_PI_CREATEFONT_HAS_CONTEXT_PTR			kevinor

	This adds an extra context parameter to OpFontManager::CreateFont().
	For Opera Mini this is required, because each Window has a different
	font setup.
	Each Window is in practice a different Mobile phone with its own fonts.

	Defines: PI_CREATEFONT_WITH_CONTEXT
	Depends on: nothing

API_PI_TELEPHONY			tjamroszczak

	Enables OpTelephony class and its subclasses.

	Defines: PI_TELEPHONY
	Depends on	: nothing

API_PI_POWER_STATUS			msimonides

	Enables the OpPowerStatus class.

	Defines: PI_POWER_STATUS
	Depends on: nothing

API_PI_MESSAGING			tjamroszczak

	Enables messaging API (class OpMessaging).

	Defines: PI_MESSAGING

API_PI_CALENDAR			wmaslowski

	Enables calendar functionality (class OpCalendar, OpCalendarEvent)

	Defines: PI_CALENDAR
	Depends on: nothing
	
API_PI_STORAGE_MONITOR			pstanek

	Enables storage device monitoring (class OpStorageMonitor)

	Defines: PI_STORAGE_MONITOR
	Depends on: nothing

API_PI_OPSYSTEMINFO_SETRINGTONE			wmaslowski

	Enables SetRingtone method on OpSystemInfo

	Defines: OPSYSTEMINFO_SETRINGTONE
	Depends on: nothing

API_PI_DEVICESTATEINFO				kubal

	Enables device state API (class OpDeviceStateInfo)

	Defines: PI_DEVICESTATEINFO
	Depends on: nothing

API_PI_OPSYSTEMINFO_GETPROCESSORUTILIZATIONPERCENT			wmaslowski

	Enables GetProcessorUtilizationPercent method on OpSystemInfo

	Defines: OPSYSTEMINFO_GETPROCESSORUTILIZATIONPERCENT
	Depends on: nothing

API_PI_OPSYSTEMINFO_GETPROCESSTIME	andersr

	Enables the GetProcessTime method, which retrieves the time spent
	executing the running process.

	Defines: OPSYSTEMINFO_GETPROCESSTIME

API_PI_SOCKET_LISTEN                    markus

	Enables Accept(), Bind(), Listen() etc in the socket layer. This
	enables Opera to act as a server.

	Defines: SOCKET_LISTEN_SUPPORT
	Depends on: nothing

API_PI_PERSCRIPT_GENERIC_FONT		shuais

	Enable setting generic font for each script from platform code.

	Defines: PERSCRIPT_GENERIC_FONT
	Depends on: nothing

API_PI_OPFONT_FONT_DATA         pugo

    Makes OpFont::GetFontData() and OpFont::ReleaseFontData() available.

    Defines: OPFONT_FONT_DATA
    Depends on: nothing

API_PI_SENSOR         wmaslowski

	Enables sensor API(OpSensor class).

	Defines: PI_SENSOR
	Depends on: nothing

API_PI_FONTMAN_HASWEIGHT		oyvindo

	Enumerating what weights a font supports on start-up is quite expensive on some platforms.
	Enabling this tweak enables the platform to instead wait with the enumeration of weights,
	but instead implement a HasWeight() function in the font manager, which will be called later
	on when the information is actually needed.

	Define: FONTMAN_HASWEIGHT

API_PI_PRINT_SELECTION			espen

	Enables feedback from UI whether printing should only deal
	with currently selected data (text)

	Defines: PI_PRINT_SELECTION
	Depends on: nothing

API_PI_VIDEO_LAYER lbodzon

	As an alternative for drawing video frames explicitly, this API enables painting 
	Opera window with transparency in the place where the video is supposed to be playing. 
	This allows platform to render video on its own 
	(e.g. using hardware surface decoupled from core's rendering).

	Defines: PI_VIDEO_LAYER
	Depends on: MEDIA_PLAYER_SUPPORT

API_PI_MUTEX					arjanl

	Provide the OpMutex class that can be used to create and lock a thread mutex.

	Defines: PI_MUTEX
	Depends on: THREAD_SUPPORT

API_PI_SITEPATCH_MANAGER	agatti

	If the URLs to use for downloading sitepatch updates has to be found out at runtime, this
	API allows to fine-tune said values.  This is not meant for general usage, in which hardcoded
	URLs are enough, but in certain cases (ie. single binary, multiple projects) hardcoding is
	not enough and further customisabilty is needed.

	Defines: PI_SITEPATCH_MANAGER
	Depends on: GOGI_SITEPATCH_UPDATE_SUPPORT

