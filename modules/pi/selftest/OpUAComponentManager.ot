/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4; c-file-style:"stroustrup" -*-
 *
 * Copyright (C) 1995-2011 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "pi.opuacomponentmanager";
require init;

include "modules/pi/OpUAComponentManager.h";

global
{
	OpUAComponentManager *man;
}

test("create")
{
	verify_success(OpUAComponentManager::Create(&man));
}

table UA_IDs (int, char*) {
	{ UA_PolicyUnknown, "UA_PolicyUnknown" },
	{ UA_NotOverridden, "UA_NotOverridden" },
	{ UA_Opera, "UA_Opera" },
	{ UA_Mozilla, "UA_Mozilla" },
	{ UA_MSIE, "UA_MSIE" },
	{ UA_MozillaOnly, "UA_MozillaOnly" },
	{ UA_MSIE_Only, "UA_MSIE_Only" },
	{ UA_BEAR, "UA_BEAR" },
	{ UA_Mozilla_478, "UA_Mozilla_478" },
	{ UA_IMODE, "UA_IMODE" }
}

foreach (id, enumname) from UA_IDs
{
	test("GetOSString:" enumname) leakcheck; require success "create";
	{
		OpUAComponentManager::Args args = {id, NULL, NULL
#ifdef IMODE_EXTENSIONS
			, FALSE
#endif
			};
		const char* str = man->GetOSString(args);
		verify(str != NULL);
		verify(op_strlen(str) >= 2); // arbitrary
		verify(!op_strchr(str, '('));
		verify(!op_strchr(str, ')'));
	}

	test("GetCommentString:" enumname) leakcheck; require success "create";
		require SC_UA_CONTEXT_COMPONENTS;
	{
		OpUAComponentManager::Args args = {id, NULL, NULL
#ifdef IMODE_EXTENSIONS
			, FALSE
#endif
			};
		const char* str = man->GetCommentString(args, "nb");
		verify(op_strlen(str) >= 2); // minimum contents: language code
		verify(op_strstr(str, "nb"));
		verify(!op_strchr(str, '('));
		verify(!op_strchr(str, ')'));
	}

	test("GetPrefixString:" enumname) leakcheck; require success "create";
		require SC_UA_CONTEXT_COMPONENTS;
	{
		OpUAComponentManager::Args args = {id, NULL, NULL
#ifdef IMODE_EXTENSIONS
			, FALSE
#endif
			};
		const char* str = man->GetPrefixString(args);
		verify(str == NULL || op_strlen(str) >= 2); // arbitrary
		if (str)
		{
			verify(!op_strchr(str, '('));
			verify(!op_strchr(str, ')'));
		}
	}

	test("GetSuffixString:" enumname) leakcheck; require success "create";
		require SC_UA_CONTEXT_COMPONENTS;
	{
		OpUAComponentManager::Args args = {id, NULL, NULL
#ifdef IMODE_EXTENSIONS
			, FALSE
#endif
			};
		const char* str = man->GetSuffixString(args);
		verify(str == NULL || op_strlen(str) >= 2); // arbitrary
		if (str)
		{
			verify(!op_strchr(str, '('));
			verify(!op_strchr(str, ')'));
		}
	}
}

exit
{
	OP_DELETE(man);
}
