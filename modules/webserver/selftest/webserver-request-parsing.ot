group "webserver core test";

require init;
require DOM_GADGET_FILE_API_SUPPORT;
require WEBSERVER_SUPPORT;

include "modules/webserver/webserver_request.h";
include "modules/formats/hdsplit.h";

language C++;

test("Testing request parsing root service")
	{
	WebserverRequest request;
	
	HeaderList *headers = new HeaderList();
	
	request.Construct("/ HTTP/1.1", 1, headers, WEB_METH_GET, FALSE); 
	
	const uni_char *request_str = request.GetRequest();
	const uni_char *subserver_request_str = request.GetSubServerRequest();
	const char *orig_request_str = request.GetOriginalRequest();
	const uni_char *request_str_virtual_path = request.GetSubServerVirtualPath();
	
	verify(uni_str_eq(request_str, UNI_L("/_root/")));
	verify(uni_str_eq(request_str_virtual_path, UNI_L("_root")));
	verify(uni_str_eq(subserver_request_str, UNI_L("/")));
	verify(!op_strcmp(orig_request_str, "/_root/"));
}

test("Testing request parsing root service favicon.ico")
	{
	WebserverRequest request;
	
	HeaderList *headers = new HeaderList();
	
	request.Construct("/favicon.ico HTTP/1.1", 12, headers, WEB_METH_GET, FALSE); 
	
	const uni_char *request_str = request.GetRequest();
	const uni_char *subserver_request_str = request.GetSubServerRequest();
	const char *orig_request_str = request.GetOriginalRequest();
	const uni_char *request_str_virtual_path = request.GetSubServerVirtualPath();
	
	verify(uni_str_eq(request_str, UNI_L("/_root/favicon.ico")));
	verify(uni_str_eq(request_str_virtual_path, UNI_L("_root")));
	verify(uni_str_eq(subserver_request_str, UNI_L("/favicon.ico")));
	verify(!op_strcmp(orig_request_str, "/_root/favicon.ico"));
}


test("Testing request parsing non root service")
	{
	WebserverRequest request;
	
	HeaderList *headers = new HeaderList();
	
	request.Construct("/someservice/resource.html HTTP/1.1", 26, headers, WEB_METH_GET, FALSE); 
	
	const uni_char *request_str = request.GetRequest();
	const uni_char *subserver_request_str = request.GetSubServerRequest();
	const char *orig_request_str = request.GetOriginalRequest();
	const uni_char *request_str_virtual_path = request.GetSubServerVirtualPath();
	
	verify(uni_str_eq(request_str, UNI_L("/someservice/resource.html")));
	verify(uni_str_eq(request_str_virtual_path, UNI_L("someservice")));
	verify(uni_str_eq(subserver_request_str, UNI_L("/resource.html")));
	verify(!op_strcmp(orig_request_str, "/someservice/resource.html"));
}
