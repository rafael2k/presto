// Do not add values higher than 0x3fff without increasing storage space in
// CssPropertyItem::info::info2::extra (currently 14 bits).

none		0x0001
scroll		0x0002
fixed		0x0003
inherit		0x0004
initial		0x00ac
collapse	0x0005
separate	0x0006
hide		0x0007
show		0x0008
both		0x000b
auto		0x000c
normal		0x000e
transparent	0x000f
pre		0x0011
nowrap		0x0009
pre-wrap	0x009e
pre-line	0x009f

#define CSS_is_whitespace_value(v)	((v)==0x0009 || (v)==0x000e || (v)==0x0011 || (v)==0x009e || (v)==0x009f)

absolute	0x000a
relative	0x000d
static		0x001f

serif		0x0013
sans-serif	0x0014
cursive		0x0015
fantasy		0x0016
monospace	0x0017
#define CSS_is_font_generic_val(v)	((v)>=0x0013 && (v)<=0x0017)

z			0x0018
italic		0x0019
oblique		0x001a
small-caps	0x001b
bold			0x001c
bolder			0x001d
lighter			0x001e
#define CSS_is_font_style_val(v)	((v)==CSS_VALUE_normal || (v)==CSS_VALUE_italic || (v)==CSS_VALUE_oblique)

caption			0x0020
icon			0x0021
menu			0x0022
message-box		0x0023
small-caption		0x0024
status-bar		0x0025
#define CSS_is_font_system_val(v)	(((v)>=0x0020 && (v)<=0x0025) || (v)==0x1027)

avoid			0x0126
always			0x0127

portrait		0x0128
landscape		0x0129

current			0x012a
next			0x012b

local			0x012c

thin			0x0010
medium			0x0083
thick			0x0012
#define CSS_is_border_width_val(v)	((v)==0x0010 || (v)==0x0083 || (v)==0x0012)

flex			0x002b
inline-flex		0x002c
-webkit-box		0x002d
-webkit-inline-box	0x002e
-wap-marquee		0x002f
inline			0x0030
block			0x0031
list-item		0x0032
run-in			0x0033
compact			0x0034
table			0x0035
inline-table		0x0036
table-row-group		0x0037
table-column-group	0x0038
table-header-group	0x0039
table-footer-group	0x003a
table-row		0x003b
table-cell		0x003c
table-caption		0x003d
table-column		0x003e
inline-block		0x003f
#define CSS_is_display_val(v)	((v)>=0x002b && (v)<=0x003f)
#define CSS_is_display_table_value(v)   ((v)>=0x0035 && (v)<=0x003e)

justify			0x0040
left			0x0041
right			0x0042
center			0x0043
top			0x0044
bottom			0x0045
#define CSS_is_position_val(v) ((v)>=0x0041 && (v)<=0x0045)
#define CSS_is_text_align_val(v) ((v)>=0x0040 && (v)<=0x0043)

capitalize		0x0046
uppercase		0x0047
lowercase		0x0048
#define CSS_is_text_transform_val(v) ((v)>=0x0046 && (v)<=0x0048)

underline		0x0049
overline		0x004a
line-through		0x004b
blink			0x004c
#define CSS_is_text_decoration_val(v) ((v)>=0x0049 && (v)<=0x004c)

baseline		0x0050
sub			0x0051
super			0x0052
text-top		0x0053
middle			0x0054
text-bottom		0x0055
#define CSS_is_vertical_align_val(v) ((v) == 0x0044 || (v) == 0x0045 || ((v)>=0x0050 && (v)<=0x0055))

disc			0x0060
circle			0x0061
square			0x0062
box			0x0063
rectangle		0x0064
control			0x0065

decimal			0x0160
lower-roman		0x0161
upper-roman		0x0162
lower-alpha		0x0163
upper-alpha		0x0164
lower-greek		0x0165
armenian		0x0166
georgian		0x0167
lower-latin		0x0168
upper-latin		0x0169
hebrew			0x016a
decimal-leading-zero	0x016b
cjk-ideographic		0x016c
hiragana		0x016d
katakana		0x016e
hiragana-iroha		0x016f
katakana-iroha		0x0170
#define CSS_is_list_style_type_val(v) (((v)>=0x0060 && (v)<=0x0063) || ((v)>=0x0160 && (v)<=0x0170))
#define CSS_is_list_style_number_val(v) ((v)>=0x0160 && (v)<=0x0170)

inside			0x0068
outside			0x0069

xx-small		0x0080
x-small			0x0081
small			0x0082
large			0x0084
x-large			0x0085
xx-large		0x0086
larger			0x0087
smaller			0x0088
#define CSS_is_fontsize_val(v)	((v)>=0x0080 && (v)<=0x0088)

crosshair		0x00c0
default			0x00c1
pointer			0x00c2
move			0x00c3
e-resize		0x00c4
ne-resize		0x00c5
nw-resize		0x00c6
n-resize		0x00c7
se-resize		0x00c8
s-resize		0x00c9
sw-resize		0x00ca
w-resize		0x00cb
text			0x00cc
wait			0x00cd
help			0x00ce
progress		0x00cf
context-menu		0x00d0
cell			0x00d1
vertical-text		0x00d2
alias			0x00d3
copy			0x00d4
no-drop			0x00d5
not-allowed		0x00d6
ew-resize		0x00d7
ns-resize		0x00d8
nesw-resize		0x00d9
nwse-resize		0x00da
col-resize		0x00db
row-resize		0x00dc
all-scroll		0x00dd
zoom-in			0x00de
zoom-out		0x00df
#define CSS_is_cursor_val(v) ((v)>=0x00c0 && (v)<=0x00df || (v) == CSS_VALUE_auto || (v) == CSS_VALUE_none)

ltr			0x00b8
rtl			0x00b9
ltr-override		0x00ba
rtl-override		0x00bb
#define CSS_is_direction_val(v) ((v)>=0x00b8 && (v)<=0x00bb)

-o-extend		0x008a
space			0x008b
repeat			0x008c
repeat-x		0x008d
repeat-y		0x008e
no-repeat		0x008f
#define CSS_is_bg_repeat_val(v) ((v)>=0x008a && (v)<=0x008f || (v) == CSS_VALUE_round)
#define CSS_is_bg_attachment_val(v) ((v) == CSS_VALUE_scroll || (v) == CSS_VALUE_fixed || (v) == CSS_VALUE_local)

open-quote		0x0090
close-quote		0x0091
no-open-quote		0x0092
no-close-quote		0x0093
#define CSS_is_quote_val(v)	((v)>=0x0090 && (v)<=0x0093)

hidden			0x0094
dotted			0x0095
dashed			0x0096
solid			0x0097
double			0x0098
groove			0x0099
ridge			0x009a
inset			0x009b
outset			0x009c
-o-highlight-border	0x009d
#define CSS_is_border_style_val(v)	((v)>=0x0094 && (v)<=0x009d)

border-box		0x00a0
content-box		0x00a1
padding-box		0x00a2
#define CSS_is_background_clip_or_origin_val(v)	((v)>=0x00a0 && (v)<=0x00a2)


invert			0x00a8

visible         0x0104
embed           0x0105
bidi-override   0x0106

to              0x0110
at              0x0111
ellipse         0x0112
closest-side    0x0113
closest-corner  0x0114
farthest-side   0x0115
farthest-corner 0x0116

slide			0x0200
alternate		0x0201
slow			0x0202
fast			0x0203
infinite		0x0204

true			0x0205
false			0x0206

ellipsis		0x0207

root			0x0208

reverse			0x0209
alternate-reverse	0x0210

-o-skin				0x0250

nonzero				0x0251
evenodd				0x0252
butt				0x0253
round				0x0254
miter				0x0255
bevel				0x0256
start				0x0257
end					0x0259
dynamic     0x025a
currentColor		0x0260
accumulate			0x0261
new					0x0262
visiblePainted		0x0263
visibleFill			0x0264
visibleStroke		0x0265
painted				0x0266
fill				0x0267
stroke				0x0268
all					0x0269
sRGB				0x0270
linearRGB			0x0271
optimizeSpeed		0x0272
optimizeQuality		0x0273
crispEdges			0x0274
geometricPrecision	0x0275
optimizeLegibility	0x0276
-o-crisp-edges			0x0277
before-edge			0x0278
text-before-edge	0x0279
central				0x0280
after-edge			0x0281
text-after-edge		0x0282
ideographic			0x0283
alphabetic			0x0284
hanging				0x0285
mathematical		0x0286
use-script			0x0287
no-change			0x0288
reset-size			0x0289
lr-tb				0x0290
rl-tb				0x0291
tb-rl				0x0292
lr					0x0293
rl					0x0294
tb					0x0295
non-scaling-stroke	0x0296
boundingBox			0x0297
after				0x0298
before				0x0299

widget				0x029a
docked				0x029b
application			0x029c
fullscreen			0x029d

stretch				0x029e

#define CSS_is_textanchor_val(v) ((v)==CSS_VALUE_start || (v)==CSS_VALUE_end || (v)==CSS_VALUE_middle)
#define CSS_is_pointerevents_val(v) (((v)>=0x0263 && (v)<=0x0269) || (v) == CSS_VALUE_visible || (v)==CSS_VALUE_none || (v)==CSS_VALUE_boundingBox)
#define CSS_is_baselineshift_val(v) ((v)==CSS_VALUE_baseline || (v)==CSS_VALUE_sub || (v)==CSS_VALUE_super)
#define CSS_is_dominantbaseline_val(v) ((v)==CSS_VALUE_auto || (v)==CSS_VALUE_use_script || (v)==CSS_VALUE_no_change || (v)==CSS_VALUE_reset_size || (v)==CSS_VALUE_ideographic || (v)==CSS_VALUE_alphabetic || (v)==CSS_VALUE_hanging || (v)==CSS_VALUE_mathematical || (v)==CSS_VALUE_central || (v)==CSS_VALUE_middle || (v)==CSS_VALUE_text_after_edge || (v)==CSS_VALUE_text_before_edge)
#define CSS_is_alignmentbaseline_val(v) ((v)==CSS_VALUE_auto || (v)==CSS_VALUE_baseline || (v)==CSS_VALUE_before_edge || (v)==CSS_VALUE_text_before_edge || (v)==CSS_VALUE_middle || (v)==CSS_VALUE_central || (v)==CSS_VALUE_after_edge || (v)==CSS_VALUE_text_after_edge || (v)==CSS_VALUE_ideographic || (v)==CSS_VALUE_alphabetic || (v)==CSS_VALUE_hanging || (v)==CSS_VALUE_mathematical)
#define CSS_is_writingmode_val(v) ((v)>=0x0290 && (v)<=0x0295)
#define CSS_is_colorrendering_val(v) ((v) == CSS_VALUE_optimizeSpeed || (v) == CSS_VALUE_optimizeQuality || (v) == CSS_VALUE_auto)
#define CSS_is_imagerendering_val(v) ((v) == CSS_VALUE_optimizeSpeed || (v) == CSS_VALUE_optimizeQuality || (v) == CSS_VALUE__o_crisp_edges || (v) == CSS_VALUE_auto)
#define CSS_is_strokelinejoin_val(v) ((v)>=0x0254 && (v)<=0x0256)
#define CSS_is_strokelinecap_val(v) ((v) == CSS_VALUE_butt || (v) == CSS_VALUE_round || (v) == CSS_VALUE_square)
#define CSS_is_fillrule_val(v) ((v) == CSS_VALUE_nonzero || (v) == CSS_VALUE_evenodd)
#define CSS_is_colorinterpolation_val(v) ((v) == CSS_VALUE_sRGB || (v) == CSS_VALUE_linearRGB || (v) == CSS_VALUE_auto)
#define CSS_is_textrendering_val(v) ((v) == CSS_VALUE_auto || (v) == CSS_VALUE_optimizeSpeed || (v) == CSS_VALUE_geometricPrecision || (v) == CSS_VALUE_optimizeLegibility)
#define CSS_is_shaperendering_val(v) ((v) == CSS_VALUE_auto || (v) == CSS_VALUE_optimizeSpeed || (v) == CSS_VALUE_crispEdges || (v) == CSS_VALUE_geometricPrecision)
#define CSS_is_vectoreffect_val(v) ((v) == CSS_VALUE_none || (v) == CSS_VALUE_non_scaling_stroke)
#define CSS_is_displayalign_val(v) ((v) == CSS_VALUE_auto || (v) == CSS_VALUE_before || (v) == CSS_VALUE_center || (v) == CSS_VALUE_after)
#define CSS_is_widgetmode_val(v) ((v)>=CSS_VALUE_widget && (v)<=CSS_VALUE_fullscreen)
#define CSS_is_bufferedrendering_val(v) ((v) == CSS_VALUE_auto || (v) == CSS_VALUE_static || (v) == CSS_VALUE_dynamic)
#define CSS_is_scale_val(v) ((v) == CSS_VALUE_stretch || (v) == CSS_VALUE_repeat || (v) == CSS_VALUE_round)

-o-content-size		0x02a0

ease			0x02a1
linear			0x02a2
ease-in			0x02a3
ease-out		0x02a4
ease-in-out		0x02a5
step-start		0x02a6
step-end		0x02a7

#define CSS_is_timing_func_val(v) ((v) >= CSS_VALUE_ease && (v) <= CSS_VALUE_step_end)

break-word		0x02a8
clip			0x02a9
-o-ellipsis-lastline	0x02aa
-o-paged-x-controls	0x02ab
-o-paged-x		0x02ac
-o-paged-y-controls	0x02ad
-o-paged-y		0x02ae

contain			0x02b0
cover			0x02b1
#define CSS_is_object_fit_val(v) ((v) == CSS_VALUE_fill || (v) == CSS_VALUE_contain || (v) == CSS_VALUE_cover || (v) == CSS_VALUE_none || (v) == CSS_VALUE_auto)

clone			0x02b2
slice			0x02b3

balance			0x02b8
page			0x02b9
column			0x02ba
avoid-page		0x02bb
avoid-column		0x02bc

matrix			0x02c0
translate		0x02c1
translateX		0x02c2
translateY		0x02c3
scale			0x02c4
scaleX			0x02c5
scaleY			0x02c6
rotate			0x02c7
skew			0x02c8
skewX			0x02c9
skewY			0x02ca

#define CSS_is_transform_function(v) ((v) >= CSS_VALUE_matrix && (v) <= CSS_VALUE_skewY)

zoom			0x02cb

#define CSS_is_user_zoom_val(v) ((v) == CSS_VALUE_zoom || (v) == CSS_VALUE_fixed)

device-width		0x02cc
device-height		0x02cd

#define CSS_is_viewport_length_val(v) ((v) == CSS_VALUE_auto || (v) == CSS_VALUE_device_width || (v) == CSS_VALUE_device_height)

device			0x02ce

folded				0x02d0
unfolded			0x02d1

#define CSS_is_viewmode_val(v) ((v)>=CSS_VALUE_minimized && (v)<=CSS_VALUE_floating || (v)==CSS_VALUE_fullscreen)

minimized		0x02d2
maximized		0x02d3
windowed		0x02d4
floating		0x02d5

forwards		0x02e0
backwards		0x02e1
running			0x02e2
paused			0x02e3

#define CSS_is_animation_fill_mode_value(v) ((v) == CSS_VALUE_forwards || (v) == CSS_VALUE_backwards || (v) == CSS_VALUE_none || (v) == CSS_VALUE_both)

progressive		0x02f0
interlace		0x02f1

-o-top				0x02f4
-o-bottom			0x02f5
-o-top-corner			0x02f6
-o-bottom-corner		0x02f7
-o-top-next-page		0x02f8
-o-bottom-next-page		0x02f9
-o-top-corner-next-page		0x02fa
-o-bottom-corner-next-page	0x02fb

#define CSS_is_gcpm_float_val(v) ((v) >= CSS_VALUE__o_top && (v) <= CSS_VALUE__o_bottom_corner_next_page)
#define CSS_is_top_gcpm_float_val(v) ((v) == CSS_VALUE__o_top || (v) == CSS_VALUE__o_top_corner || (v) == CSS_VALUE__o_top_next_page || (v) == CSS_VALUE__o_top_corner_next_page)
#define CSS_is_corner_gcpm_float_val(v) ((v) == CSS_VALUE__o_top_corner || (v) == CSS_VALUE__o_bottom_corner || (v) == CSS_VALUE__o_top_corner_next_page || (v) == CSS_VALUE__o_bottom_corner_next_page)
#define CSS_is_next_gcpm_float_val(v) ((v) == CSS_VALUE__o_top_next_page || (v) == CSS_VALUE__o_bottom_next_page || (v) == CSS_VALUE__o_top_corner_next_page || (v) == CSS_VALUE__o_bottom_corner_next_page)

horizontal		0x0305
vertical		0x0306
#define CSS_is_resize_val(v) ((v)==CSS_VALUE_horizontal || (v)==CSS_VALUE_vertical || (v)==CSS_VALUE_both || (v)==CSS_VALUE_none)

row			0x0310
row-reverse		0x0311
column-reverse		0x0312
wrap			0x0313
wrap-reverse		0x0314
flex-start		0x0315
flex-end		0x0316
space-between		0x0317
space-around		0x0318
single			0x031a // For old 20090723 flexbox spec
multiple		0x031b // For old 20090723 flexbox spec
inline-axis		0x031e // For old 20090723 flexbox spec
block-axis		0x031f // For old 20090723 flexbox spec

aqua			0x1000
black			0x1001
blue			0x1002
fuchsia			0x1003
gray			0x1004
green			0x1005
lime			0x1006
maroon			0x1007
navy			0x1008
olive			0x1009
purple			0x100a
red			0x100b
silver			0x100c
teal			0x100d
white			0x100e
yellow			0x100f

ActiveBorder		0x1010
ActiveCaption		0x1011
AppWorkspace		0x1012
Background		0x1013
ButtonFace		0x1014
ButtonHighlight		0x1015
ButtonShadow		0x1016
ButtonText		0x1017
CaptionText		0x1018
GrayText		0x1019
Highlight		0x1020
HighlightText		0x1021
InactiveBorder		0x1022
InactiveCaption		0x1023
InactiveCaptionText	0x1024
InfoBackground		0x1025
InfoText		0x1026
Menu			0x1027
MenuText		0x1028
Scrollbar		0x1029
ThreeDDarkShadow	0x1030
ThreeDFace		0x1031
ThreeDHighlight		0x1032
ThreeDLightShadow	0x1033
ThreeDShadow		0x1034
Window			0x1035
WindowFrame		0x1036
WindowText		0x1037

#define CSS_is_color_val(v)	((v)&0x1000)
#define CSS_is_ui_color_val(v)	((v)>=0x1010 && (v)<=0x1037)

#internal up		0x0302
#internal down		0x0303
#internal use_lang_def	0x0304

#define CSS_is_animation_direction_val(v) ((v) == CSS_VALUE_normal || (v) == CSS_VALUE_alternate || (v) == CSS_VALUE_reverse || (v) == CSS_VALUE_alternate_reverse)
