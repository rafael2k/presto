/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "style.parser.border-radius";

require init;

language C++;

include "modules/doc/frm_doc.h";
include "modules/style/css_collection.h";
include "modules/style/css.h";

html
{
//! <html>
//!  <div style="border-top-right-radius: 1px"></div>
//!  <div style="border-top-right-radius: 1px 1px"></div>
//!  <div style="border-top-right-radius: 2px 3px"></div>
//!  <div style="border-top-left-radius: 10px"></div>
//!  <div style="border-radius: 10px"></div>
//!  <div style="border-radius: 10px / 20px"></div>
//!  <div style="border-radius: 2px 1px 4px / 5px 3px"></div>
//! </html>
}

/* FormatDeclarationL smashes equal values together. So "10px 10px"
   becomes "10px" */

table PropTable(const char*, int, const uni_char*, const uni_char*, const uni_char*, const uni_char*)
{
    { "div", 1, NULL,               UNI_L("1px"),          NULL,               NULL               }
    { "div", 2, NULL,               UNI_L("1px"),          NULL,               NULL               }
    { "div", 3, NULL,               UNI_L("2px 3px"),      NULL,               NULL               }
    { "div", 4, UNI_L("10px"),      NULL,                  NULL,               NULL               }
    { "div", 5, UNI_L("10px"),      UNI_L("10px"),         UNI_L("10px"),      UNI_L("10px")      }
    { "div", 6, UNI_L("10px 20px"), UNI_L("10px 20px"),    UNI_L("10px 20px"), UNI_L("10px 20px") }
    { "div", 7, UNI_L("2px 5px"),   UNI_L("1px 3px"),      UNI_L("4px 5px"),   UNI_L("1px 3px")   }
}

subtest TestProp(int iter_idx, const char* tag_name, int tag_idx, short prop, const uni_char* str)
{
    TempBuffer tmp_buf;
    HLDocProfile* hld_prof = NULL;
    CSSCollection* coll = NULL;
    CSS_Properties props;

    hld_prof = state.doc->GetHLDocProfile();
    verify(hld_prof);

    coll = hld_prof->GetCSSCollection();
    verify(coll);

    OP_ASSERT(find_element(tag_name, tag_idx) || !"Internal error in test");

    coll->GetProperties(find_element(tag_name, tag_idx), g_op_time_info->GetRuntimeMS(), &props, CSS_MEDIA_TYPE_ALL);

    CSS_decl* decl = props.GetDecl(prop);

    verify((!str && !decl) || (str && decl));

    if (str)
    {
		tmp_buf.Clear();
		CSS::FormatDeclarationL(&tmp_buf, decl, FALSE, CSS_FORMAT_COMPUTED_STYLE);

		if (uni_strcmp(tmp_buf.GetStorage(), str))
		{
			output("%d: %s != ", iter_idx, ST_down(tmp_buf.GetStorage()));
			output("%s\n", ST_down(str));
		}
		verify(uni_strcmp(tmp_buf.GetStorage(), str) == 0);
    }
}

test("border-radius")
{
    verify(state.doc);

    iterate (tag_name, tag_idx, top_left_str, top_right_str, bottom_right_str, bottom_left_str) from PropTable
    {
		/* __iter__ is undocumented and its use probably
		   discouraged but it makes debugging easier. */

		verify(TestProp(__iter__, tag_name, tag_idx, CSS_PROPERTY_border_top_right_radius, top_right_str));
		verify(TestProp(__iter__, tag_name, tag_idx, CSS_PROPERTY_border_bottom_right_radius, bottom_right_str));
		verify(TestProp(__iter__, tag_name, tag_idx, CSS_PROPERTY_border_bottom_left_radius, bottom_left_str));
		verify(TestProp(__iter__, tag_name, tag_idx, CSS_PROPERTY_border_top_left_radius, top_left_str));
    }
}

