/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "style.mediaqueries";
require init;

language ecmascript;

html {
//! <style>
//! .c1 { color: red; content: "FAIL"; }
//! .c2 { color: red; content: "FAIL"; }
//! .c3 { color: green; content: "PASS"; }
//! .c4 { color: green; content: "PASS"; }
//! .c5 { color: green; content: "PASS"; }
//! .c6 { color: green; content: "PASS"; }
//! .c7 { color: red; content: "FAIL"; }
//! .c8 { color: red; content: "FAIL"; }
//! .c9 { color: red; content: "FAIL"; }
//! .c10 { color: red; content: "FAIL"; }
//!
//! @media not all and (max-width: 0px) { .c1 { color: green; content: "PASS"; } }
//! @media not screen and (max-width: 0px) { .c2 { color: green; content: "PASS"; } }
//! @media not all { .c3 { color: red; content: "FAIL"; } }
//! @media not screen { .c4 { color: red; content: "FAIL"; } }
//! @media all and (max-width: 0px) { .c5 { color: red; content: "FAIL"; } }
//! @media screen and (max-width: 0px) { .c6 { color: red; content: "FAIL"; } }
//! @media all { .c7 { color: green; content: "PASS"; } }
//! @media screen { .c8 { color: green; content: "PASS"; } }
//! @media not print and (min-width: 0px) { .c9 { color: green; content: "PASS"; } }
//! @media screen and (min-device-aspect-ratio: 1/100) { .c10 { color: green; content: "PASS"; } }
//! </style>
//! <div class="c1"></div>
//! <div class="c2"></div>
//! <div class="c3"></div>
//! <div class="c4"></div>
//! <div class="c5"></div>
//! <div class="c6"></div>
//! <div class="c7"></div>
//! <div class="c8"></div>
//! <div class="c9"></div>
//! <div class="c10"></div>
}

test ("Check evaluation of media queries")
{
	divs = document.getElementsByTagName('div');
	for (i=0; i<10; i++)
		verify(getComputedStyle(divs[i]).content == '"PASS"');
}

html {
//! <style>
//! /* Control styles */
//! .c1 { color: green; content: "PASS"; }
//! .c2 { color: green; content: "PASS"; }
//! .c3 { color: red; content: "FAIL"; }
//! </style>
//! <style>@media ,; all { .c1 { color: red; content: "FAIL"; } }</style>
//! <style>@media ,;, all { .c2 { color: red; content: "FAIL"; } }</style>
//! <style>@media all; .c3 { color: green; content: "PASS"; }</style>
//! <div class="c1"></div>
//! <div class="c2"></div>
//! <div class="c3"></div>
}

test ("@media syntax error handling")
{
	divs = document.getElementsByTagName('div');
	for (i=0; i<3; i++)
		verify(getComputedStyle(divs[i]).content == '"PASS"');
}

html {
//! <style>
//! /* Control styles */
//! .c1 { color: green; content: "PASS"; }
//! .c2 { color: green; content: "PASS"; }
//! .c3 { color: green; content: "PASS"; }
//! .c4 { color: red; content: "FAIL"; }
//! .c5 { color: red; content: "FAIL"; }
//! </style>
//! <style>@import "data:,.c1 { color: red; content: 'FAIL'; }" unknown {}, all; </style>
//! <style>@import "data:,.c2 { color: red; content: 'FAIL'; }" {;}, all;</style>
//! <style>@import "data:,.c3 { color: red; content: 'FAIL'; }" {};, all;</style>
//! <style>@import "data:,.c4 { color: green; content: 'PASS'; }" ({;}), all;</style>
//! <style>@import "data:,.c5 { color: green; content: 'PASS'; }" (;), all;</style>
//! <div class="c1"></div>
//! <div class="c2"></div>
//! <div class="c3"></div>
//! <div class="c4"></div>
//! <div class="c5"></div>
}

test ("@import media syntax error handling")
{
	divs = document.getElementsByTagName('div');
	for (i=0; i<5; i++)
		verify(getComputedStyle(divs[i]).content == '"PASS"');
}

html {
//! <!DOCTYPE html>
//! <style type="text/css">
//! html, body { margin: 0; width: 100%; height: 100% }
//!
//! #t1 { color: red; }
//! #t2, #t3 { color: #a0a0a0; }
//! #t4, #t5, #t6, #t7 { color: #008800; }
//!
//! @media all and (orientation) { #t1 { color: #008800; } }
//! @media all and (orientation: portrait) { #t2 { color: #008800; } }
//! @media all and (orientation: landscape) { #t3 { color: #008800; } }
//! @media all and (orientation: skew) { #t4 { color: red; } }
//! @media all and (orientation: 0) { #t5 { color: red; } }
//! @media all and (orientation: 10) { #t6 { color: red; } }
//! @media all and (orientation: 50px) { #t7 { color: red; } }
//! </style>
//! <div id="t1">t1</div>
//! <div id="t2">t2</div>
//! <div id="t3">t3</div>
//! <div id="t4">t4</div>
//! <div id="t5">t5</div>
//! <div id="t6">t6</div>
//! <div id="t7">t7</div>
}

test ("check isPortrait value")
{
	isPortrait = (document.body.offsetWidth <= document.body.offsetHeight);
	verify(isPortrait == true || isPortrait == false);
}

test ("orientation without value")
{
	verify(getComputedStyle(document.getElementById("t1"), null).color == "rgb(0, 136, 0)");
}

test ("orientation: portrait")
{
	var refColor = isPortrait ? "rgb(0, 136, 0)" : "rgb(160, 160, 160)";
	verify(getComputedStyle(document.getElementById("t2"), null).color == refColor);
}

test ("orientation: landscape")
{
	var refColor = isPortrait ? "rgb(160, 160, 160)" : "rgb(0, 136, 0)";
	verify(getComputedStyle(document.getElementById("t3"), null).color == refColor);
}

test ("orientation: invalid ident value")
{
	verify(getComputedStyle(document.getElementById("t4"), null).color == "rgb(0, 136, 0)");
}

test ("orientation: invalid number value (0)")
{
	verify(getComputedStyle(document.getElementById("t5"), null).color == "rgb(0, 136, 0)");
}

test ("orientation: invalid number value (10)")
{
	verify(getComputedStyle(document.getElementById("t6"), null).color == "rgb(0, 136, 0)");
}

test ("orientation: invalid dimension value (50px)")
{
	verify(getComputedStyle(document.getElementById("t7"), null).color == "rgb(0, 136, 0)");
}

test ("orientation: dom serialization")
{
	verify(document.styleSheets[0].cssRules[4].media.mediaText == "(orientation)");
	verify(document.styleSheets[0].cssRules[5].media.mediaText == "(orientation: portrait)");
	verify(document.styleSheets[0].cssRules[6].media.mediaText == "(orientation: landscape)");
}

html {
	//! <style>
	//!   @media all and (-o-min-device-pixel-ratio: 1 / 1000) {
	//!     #t1 { color: #008000; }
	//!   }
	//!   @media all and (-o-max-device-pixel-ratio: 1000 / 1) {
	//!     #t2 { color: #008000; }
	//!   }
	//!   @media not all and (-o-device-pixel-ratio: 20 / 1) {
	//!     #t3 { color: #008000; }
	//!   }
	//! </style>
	//! <div id="t1">Green</div>
	//! <div id="t2">Green</div>
	//! <div id="t3">Green</div>
}

test ("-o-[min/max-]device-pixel-ratio")
{
	var t1 = document.getElementById('t1');
	verify(t1);
	verify(getComputedStyle(t1, null).color == "rgb(0, 128, 0)");

	var t2 = document.getElementById('t2');
	verify(t2);
	verify(getComputedStyle(t2, null).color == "rgb(0, 128, 0)");

	var t3 = document.getElementById('t3');
	verify(t3);
	verify(getComputedStyle(t3, null).color == "rgb(0, 128, 0)");
}

html
{
	//! <!DOCTYPE html>
	//! <style>
	//!   div { width:666px; }
	//!   h1 { width:100px; }
	//!   @media (-o-paged) {
	//!     div { width:100px; }
	//!   }
	//!   @media (-o-paged:0) {
	//!     div { width:200px; }
	//!   }
	//!   @media (-o-paged:1) {
	//!     h1 { width:200px; }
	//!   }
	//!   @media (-o-paged:2) {
	//!     h1 { width:666px; }
	//!   }
	//!   @media (-o-paged:true) {
	//!     h1 { width:123px; }
	//!   }
	//!   @media (-o-paged:gingerbread) {
	//!     h1 { width:456px; }
	//!   }
	//! </style>
	//! <div></div>
	//! <h1></h1>
}

test("-o-paged")
require PAGED_MEDIA_SUPPORT;
{
	var div = document.getElementsByTagName('div')[0];
	verify(div);
	verify(getComputedStyle(div, null).width == "100px");

	var h1 = document.getElementsByTagName('h1')[0];
	verify(h1);
	verify(getComputedStyle(h1, null).width == "200px");
}

test("not -o-paged")
require undefined PAGED_MEDIA_SUPPORT;
{
	var div = document.getElementsByTagName('div')[0];
	verify(div);
	verify(getComputedStyle(div, null).width == "200px");

	var h1 = document.getElementsByTagName('h1')[0];
	verify(h1);
	verify(getComputedStyle(h1, null).width == "100px");
}

html {
	//! <!DOCTYPE html>
	//! <style media="all and (orientation"></style>
	//! <style media="all and (color:"></style>
	//! <style media="screen, all and (color:"></style>
}

test ("Truncated media queries")
{
	verify(document.styleSheets[0].media.mediaText == "(orientation)");
	verify(document.styleSheets[1].media.mediaText == "not all");
	verify(document.styleSheets[2].media.mediaText == "screen, not all");
}
