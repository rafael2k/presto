/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "style.parser";
require init;
language ecmascript;

include "modules/logdoc/htm_elm.h";
include "modules/style/src/css_parser.h";

html {
//! <style><!--
//!    div { color: #babeee; }
//! --></style>
//! <div id="parser"></div>
}

test ("cdo/cdc allowed")
{
	verify(getComputedStyle(document.getElementsByTagName("div")[0]).color == "rgb(186, 190, 238)");
}

html {
//! <style><!--
//!    #parser {};
//!    #parser { height: 200px; }
//! --></style>
//! <div id="parser"></div>
}

test ("dangling semicolon part of selector")
	require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("parser").currentStyle.height == "auto");
}

html {
//! <!DOCTYPE html>
//! <p style="{;color:red;};color:#b0ffe1;{;background:red;}"></p>
}

test ("block level correction in style attribute")
{
	verify(document.getElementsByTagName("p")[0].style.color == "rgb(176, 255, 225)");
}


html {
//! <style>
//! p { color: red }
//! @page {
//!   @bottom {
//!     content: counter(page);
//!   }
//! }
//! p { color: #008000 }
//! </style>
//! <p>This text should be green.</p>
}

test ("block level correction in unknown at-rules")
	require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementsByTagName("p")[0].currentStyle.color == "#008000");
}

test ("Media parsing leak check")
	leakcheck;
	language c++;
{
	CSS_Buffer buf;
	URL base_url;

	HTML_Element* elm = NEW_HTML_Element();
	verify(elm != NULL);
	verify(elm->Construct((HLDocProfile*)NULL, NS_IDX_HTML, Markup::HTE_LINK, (HtmlAttrEntry*)NULL, HE_INSERTED_BY_CSS_IMPORT) == OpStatus::OK);
	verify(buf.AllocBufferArrays(1) == TRUE);
	buf.AddBuffer(UNI_L("@import \".\" screen #"), 20);
	CSS* OP_MEMORY_VAR css = OP_NEW(CSS, (elm, base_url, FALSE));
	CSS_Parser parser(css, &buf, base_url, NULL, 1);
	TRAPD(stat, parser.ParseL());
	verify(stat == CSSParseStatus::OK);
	OP_DELETE(css);
	DELETE_HTML_Element(elm);
}

html {
//! <style>
//! body { font-weight: bold; background:#fff; color:#000; font-size:large }
//! p { white-space:pre; padding:1em; border-width:medium; display:list-item; margin-left:2em; list-style:decimal; margin-top:1em; margin-bottom:1em }
//! p#t01 { border:solid; color:#f90; color }
//! p#t02 { border:solid; color:#f90; color; background: #080 }
//! p#t03 { border:solid; color:#f90; color: }
//! p#t04 { border:solid; color:#f90; color:; background: #080 }
//! p#t05 { border:solid; color:#f90; color:z }
//! p#t06 { border:solid; color:#f90; color:z; background: #080 }
//! p#t07 { border:solid; color:#f90; -foo:foo }
//! p#t08 { border:solid;  color:#f90; --- }
//! p#t09 { ---;  border:solid; color:#f90; }
//! p#t10 { border:solid; color:#f90; color{ ; }
//! p#t10 { background:#f00 }
//! }
//! p#dummy {}
//! p#t11 { border:solid; color:#f90; color:{ ; }
//! p#t11 { background:#f00 }
//! }
//! p#dummy {}
//! p#t12 { border:solid; color:#f90; {color:fuchsia ; }
//! p#t12 { background:#f00 }
//! }
//! p#dummy {}
//! p#t13 { border:solid; color:#f90; { color:fuchsia ; }
//! p#t13 { background:#f00 }
//! }
//! p#dummy {}
//! p#t14 { border:solid; color:#f90} }}}
//! p#t14 { background:#f00 }
//!
//! </style>
//! <p id="t01">X</p>
//! <p id="t02">X</p>
//! <p id="t03">X</p>
//! <p id="t04">X</p>
//! <p id="t05">X</p>
//! <p id="t06">X</p>
//! <p id="t07">X</p>
//! <p id="t08">X</p>
//! <p id="t09">X</p>
//! <p id="t10">X</p>
//! <p id="t11">X</p>
//! <p id="t12">X</p>
//! <p id="t13">X</p>
//! <p id="t14">X</p>
}

test ("Balancing brackets #1") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t01").currentStyle.color == "#ff9900");
	verify(document.getElementById("t01").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #2") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t02").currentStyle.color == "#ff9900");
	verify(document.getElementById("t02").currentStyle.backgroundColor == "#008800");
}

test ("Balancing brackets #3") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t03").currentStyle.color == "#ff9900");
	verify(document.getElementById("t03").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #4") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t04").currentStyle.color == "#ff9900");
	verify(document.getElementById("t04").currentStyle.backgroundColor == "#008800");
}

test ("Balancing brackets #5") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t05").currentStyle.color == "#ff9900");
	verify(document.getElementById("t05").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #6") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t06").currentStyle.color == "#ff9900");
	verify(document.getElementById("t06").currentStyle.backgroundColor == "#008800");
}

test ("Balancing brackets #7") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t07").currentStyle.color == "#ff9900");
	verify(document.getElementById("t07").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #8") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t08").currentStyle.color == "#ff9900");
	verify(document.getElementById("t08").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #9") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t09").currentStyle.color == "#ff9900");
	verify(document.getElementById("t09").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #10") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t10").currentStyle.color == "#ff9900");
	verify(document.getElementById("t10").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #11") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t11").currentStyle.color == "#ff9900");
	verify(document.getElementById("t11").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #12") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t12").currentStyle.color == "#ff9900");
	verify(document.getElementById("t12").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #13") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t13").currentStyle.color == "#ff9900");
	verify(document.getElementById("t13").currentStyle.backgroundColor == "transparent");
}

test ("Balancing brackets #14") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById("t14").currentStyle.color == "#ff9900");
	verify(document.getElementById("t14").currentStyle.backgroundColor == "transparent");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   [class=second two] {
//!     color: #f00;
//!   }
//!   div {
//!     color: #0f0;
//!   }
//! </style>
//! <div id="t1">Green</div>
}

test ("Attribute selector parse error") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   div {};
//!   div {}
//!   div { color: #0f0; }
//! </style>
//! <div id="t1">Green</div>
}

test ("Stray semicolon parse error") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   div { color: #0f0; }
//!   }} div { color: #f00; }
//! </style>
//! <div id="t1">Green</div>
}

test ("Unbalanced braces in selector #1") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   }div { color: #f00; }
//!   div { color: #0f0; }
//! </style>
//! <div id="t1">Green</div>
}

test ("Unbalanced braces in selector #2") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   div { color: #0f0; }
//!   p [ color: black; }
//!   div {}
//!   div { color: red; }
//! </style>
//! <div id="t1">Green</div>
}

test ("Unbalanced braces in selector #3") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

html {
//! <!DOCTYPE html>
//! <style>
//!   div { color: #f00; }
//!   @media all { div }
//!     div { color: #0f0; }
//!   }
//! </style>
//! <div id="t1">Green</div>
}

test ("Selector without declaration block in @media") require CURRENT_STYLE_SUPPORT;
{
	verify(document.getElementById('t1').currentStyle.color == "#00ff00");
}

xml {
//!<html xmlns="http://www.w3.org/1999/xhtml">
//! <head>
//!  <title>Undeclared namespace</title>
//!  <style type="text/css">
//!    test { color: #008800; }
//!    #test :not(undefined|test) { color: red; }
//!  </style>
//! </head>
//! <body id="test">
//!  <tests xmlns="http://www.example.org/">
//!    <test>This should not be red</test>
//!  </tests>
//! </body>
//!</html>
}

test (":not() with undeclared namespace - Computed style")
{
	verify(getComputedStyle(document.getElementsByTagName("test")[0], null).color == "rgb(0, 136, 0)");
}

test (":not() with undeclared namespace - DOM Stylesheet")
{
	verify(document.styleSheets[0].cssRules.length == 1);
}

html {
//!<!DOCTYPE html>
//!<style type="text/css">
//! #test {
//!   color: #0f0;
//!   content: "trunc
//!   color: red;
//! }
//!</style>
//!<div id="test"></div>
}

test ("Truncated string")
{
	verify(getComputedStyle(document.getElementById("test"), null).color == "rgb(0, 255, 0)");
}

html {
//!<!DOCTYPE html>
//!<style type="text/css">
//! #test {
//!   content: "trunc
//!   ;color: #0f0;
//! }
//!</style>
//!<div id="test"></div>
}

test ("Truncated string #2")
{
	verify(getComputedStyle(document.getElementById("test"), null).color == "rgb(0, 255, 0)");
}

html {
//!<!DOCTYPE html>
//!<div id="test" style="x: '&#127;'; color: #0f0"></div>
}

test ("Non-ascii character in css string")
{
	verify(getComputedStyle(document.getElementById("test"), null).color == "rgb(0, 255, 0)");
}

html {
//!<!DOCTYPE html>
//!<div id="top" style="float:-o-top;"></div>
//!<div id="bottom" style="float:-o-bottom;"></div>
//!<div id="bogus" style="float:-o-top -o-bottom;"></div>
}
test("float:-o-top")
{
	verify(document.getElementById("top").style.cssFloat == "-o-top");
}
test("float:-o-bottom")
{
	verify(document.getElementById("bottom").style.cssFloat == "-o-bottom");
}
test("float:-o-top -o-bottom")
{
	verify(document.getElementById("bogus").style.cssFloat == "");
}

html {
//!<!DOCTYPE html>
//!<style type="text/css">
//! #test {
//!   content: "\d834\df06";
//! }
//!</style>
//!<div id="test"></div>
}

test ("Escaped surrogate pair in css string")
{
	verify(getComputedStyle(document.getElementById("test"), null).content != '"\ud834\udf06"');
}

html {
//!<!DOCTYPE html>
//!<style type="text/css">
//! #test {
//!   content: "\1d306";
//! }
//!</style>
//!<div id="test"></div>
//!<div id="test2"></div>
}

test ("Escaped non-BMP character in css string")
{
	/* Note: JavaScript strings are defined over UTF-16 code units, so
	 * check against the surrogate pair corresponding to U+1D306. */
	verify(getComputedStyle(document.getElementById("test"), null).content == '"\ud834\udf06"');
}

test("CSS string with non-BMP characters from script")
{
	document.getElementById("test2").style.content = '"\ud834\udf06"';
	verify(getComputedStyle(document.getElementById("test"), null).content == getComputedStyle(document.getElementById("test2"), null).content);
}
