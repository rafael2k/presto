/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "style.fullscreen";

language C++;
require init;
require DOM_FULLSCREEN_MODE;

include "modules/doc/frm_doc.h";
include "modules/logdoc/htm_elm.h";

global
{
	FramesDocument* doc;
	HTML_Element* fullscreen_elm;
	HTML_Element* fullscreen_ancestor;

	OP_BOOLEAN FullscreenObscured()
	{
		doc->SetFullscreenElement(fullscreen_elm);
		RETURN_IF_ERROR(doc->Reflow(FALSE));
		OP_BOOLEAN ret = doc->IsFullscreenElementObscured() ? OpBoolean::IS_TRUE : OpBoolean::IS_FALSE;
		doc->SetFullscreenElement(NULL);
		return ret;
	}

	OP_STATUS SetStyleAttribute(HTML_Element* elm, const uni_char* value)
	{
		return elm->SetAttribute(doc, Markup::HA_STYLE, NULL, NS_IDX_DEFAULT, value, uni_strlen(value), NULL, FALSE);
	}
}

html {
//! <div><p></p></div>
}

test("Setup")
{
	doc = state.doc;
	fullscreen_ancestor = find_element("div");
	fullscreen_elm = find_element("p");

	verify(doc);
	verify(fullscreen_ancestor);
	verify(fullscreen_elm);
}

test("Obscurity - no author styles") require success "Setup";
{
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}

test("Obscurity - non-important z-index") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("z-index: -1"))));
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}

test("Obscurity - important z-index") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("z-index: 1 !important"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - important opacity") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("opacity: 0.9 !important"))));
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}

test("Obscurity - ancestor important opacity") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L(""))));
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_ancestor, UNI_L("opacity: 0.5 !important"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - background-color:red") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_ancestor, UNI_L(""))));
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:red"))));
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}

test("Obscurity - background-color:#fff") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:#fff"))));
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}

test("Obscurity - background-color:rgba(0,0,0,0.9)") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:rgba(0,0,0,0.9)"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - background-color:transparent") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:transparent"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - background-color:inherit") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:inherit"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - background-color:currentColor") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:currentColor"))));
	verify(FullscreenObscured() == OpBoolean::IS_TRUE);
}

test("Obscurity - background-color:rgba(0,0,0,1)") require success "Setup";
{
	verify(OpStatus::IsSuccess(SetStyleAttribute(fullscreen_elm, UNI_L("background-color:rgba(0,0,0,1)"))));
	verify(FullscreenObscured() == OpBoolean::IS_FALSE);
}
