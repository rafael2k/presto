/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "style.parser.color";

require init;

language C++;

include "modules/style/css.h";

table ColorValues(uni_char*, BOOL, COLORREF)
{
	{ UNI_L("#ffff"), FALSE, USE_DEFAULT_COLOR },
	{ UNI_L("  #faf  "), TRUE, (OP_RGBA(0xff, 0xaa, 0xff, 0) | ((UINT32)0xff)<<24) },
	{ UNI_L(" #abcdef  "), TRUE, (OP_RGBA(0xab, 0xcd, 0xef, 0) | ((UINT32)0xff)<<24) },
	{ UNI_L("rgb(20, 30, 280)"), TRUE, (OP_RGBA(20, 30, 255, 0) | ((UINT32)0xff)<<24) },
	{ UNI_L("rgb(100%, 0%, 100%)"), TRUE, (OP_RGBA(255, 0, 255, 0) | ((UINT32)0xff)<<24) },
	{ UNI_L("rgb(20, 30, 10%)"), FALSE, USE_DEFAULT_COLOR },
	{ UNI_L("rgb(20, 30, 280);"), FALSE, USE_DEFAULT_COLOR },
	{ UNI_L("rgb (0, 0, 0)"), FALSE, USE_DEFAULT_COLOR },
	{ UNI_L("rgb(0, 255, 0"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("gold"), TRUE, (OP_RGBA(0xff, 0xd7, 0x00, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba(0, 0, 0)"), FALSE, USE_DEFAULT_COLOR },
	{ UNI_L("rgba(6,7,8,0)"), TRUE, (OP_RGBA(6, 7, 8, 0)) },
	{ UNI_L("rgba(100%, 100%, 100%, 0.0)"), TRUE, (OP_RGBA(255, 255, 255, 0)) },
	{ UNI_L("rgba(100%, 100%, 100%, 1.0)"), TRUE, (OP_RGBA(0xff, 0xff, 0xff, 0) | ((UINT32)0xff)<<24) },
	{ UNI_L("rgba(100%, 100%, 100%, -1.0)"), TRUE, (OP_RGBA(0xff, 0xff, 0xff, 0)) }
	{ UNI_L("rgba(0, 0, 0, 1)"), TRUE, (OP_RGBA(0, 0, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba(  0  ,  255  ,  0  , +1  )"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba( -0  ,  255  , +0  ,  1  )"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba(0, 255, 0, 1"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba(255, 0, 0, 1.)"), FALSE, USE_DEFAULT_COLOR }
	{ UNI_L("rgba(255, 0, 0, "), FALSE, USE_DEFAULT_COLOR }
	{ UNI_L("hsl(-240, 100%, 50%)"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("hsl(+120, +100%, +50%)"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("hsl(0, 100.%, 50%)"), FALSE, USE_DEFAULT_COLOR }
	{ UNI_L("hsla(480, 100%, 50%, 1)"), TRUE, (OP_RGBA(0, 255, 0, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("hsla(480, 100%, 50%, -1)"), TRUE, (OP_RGBA(0, 255, 0, 0)) }
	{ UNI_L("transparent"), TRUE, (OP_RGBA(0, 0, 0, 0)) }
	{ UNI_L("burlywood"), TRUE, (OP_RGBA(222, 184, 135, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgb(89%, 89%, 89%)"), TRUE, (OP_RGBA(227, 227, 227, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("rgba(0, 0, 0, 0.783)"), TRUE, (OP_RGBA(0, 0, 0, 0) | ((UINT32)0xc8)<<24) }
	{ UNI_L("hsl(224,7.59%,28.43%)"), TRUE, (OP_RGBA(67, 70, 78, 0) | ((UINT32)0xff)<<24) }
	{ UNI_L("\"red\""), FALSE, USE_DEFAULT_COLOR }
}

test("ParseColor")
{
	COLORREF col;
	BOOL valid;
	foreach (col_str, valid_exp, col_exp) from ColorValues
	{
		valid = ParseColor(col_str, uni_strlen(col_str), col);
		verify(valid == valid_exp);
		if (valid)
			verify(col == col_exp);
	}
}

html {
	//! <div></div>
}

test("color property parsing in ECMAScript")
	language ecmascript;
{
	elm = document.getElementsByTagName('div')[0];

	elm.style.color = "";
	elm.style.color = "#ffff";
	verify(elm.style.color == "");

	elm.style.color = "  #faf  ";
	verify(elm.style.color == "rgb(255, 170, 255)");

	elm.style.color = "rgb(20, 30, 280)";
	verify(elm.style.color == "rgb(20, 30, 255)");

	elm.style.color = "rgb(100%, 0%, 100%)";
	verify(elm.style.color == "rgb(255, 0, 255)");

	elm.style.color = "";
	elm.style.color = "rgb(20, 30, 10%)";
	verify(elm.style.color == "");

	elm.style.color = "";
	elm.style.color = "rgb(20, 30, 280);";
	verify(elm.style.color == "");

	elm.style.color = "";
	elm.style.color = "rgb (0, 0, 0)";
	verify(elm.style.color == "");

	elm.style.color = "rgb(0, 255, 0";
	verify(elm.style.color == "rgb(0, 255, 0)");

	elm.style.color = "rgba(  0  ,  255  ,  0  , +1  )";
	verify(elm.style.color == "rgb(0, 255, 0)");

	elm.style.color = "gold";
	verify(elm.style.color == "gold");

	elm.style.color = "hsl(-240, 100%, 50%)";
	verify(elm.style.color == "rgb(0, 255, 0)");

	elm.style.color = "rgb(89%, 89%, 89%)";
	verify(elm.style.color == "rgb(227, 227, 227)");

	elm.style.color = "hsl(224,7.59%,28.43%)";
	verify(elm.style.color == "rgb(67, 70, 78)");
}

html {
	/* 0 */ //! <div style='color: #ffff'></div>
	/* 1 */ //! <div style='color:   #faf  '></div>
	/* 2 */ //! <div style='color:   #abcdef  '></div>
	/* 3 */ //! <div style='color: rgb(20, 30, 280)'></div>
	/* 4 */ //! <div style='color: rgb(100%, 0%, 100%)'></div>
	/* 5 */ //! <div style='color: rgb(20, 30, 10%)'></div>
	/* 6 */ //! <div style='color: rgb (0, 0, 0)'></div>
	/* 7 */ //! <div style='color: gold'></div>
	/* 8 */ //! <div style='color: rgba(0, 0, 0)'></div>
	/* 9 */ //! <div style='color: rgba(6,7,8,0)'></div>
	/* 10 */ //! <div style='color: rgba(100%, 100%, 100%, 0.0)'></div>
	/* 11 */ //! <div style='color: rgba(100%, 100%, 100%, 1.0)'></div>
	/* 12 */ //! <div style='color: rgba(100%, 100%, 100%, -1.0)'></div>
	/* 13 */ //! <div style='color: rgba(0, 0, 0, 1)'></div>
	/* 14 */ //! <div style='color: hsl(-240, 100%, 50%)'></div>
	/* 15 */ //! <div style='color: hsla(480, 100%, 50%, 1)'></div>
	/* 16 */ //! <div style='color: hsla(480, 100%, 50%, -1)'></div>
	/* 17 */ //! <div style='color: transparent'></div>
	/* 18 */ //! <div style='color: burlywood'></div>
	/* 19 */ //! <div style='color: rgb(89%, 89%, 89%)'></div>
	/* 20 */ //! <div style='color: rgba(0, 0, 0, 0.783)'></div>
	/* 21 */ //! <div style='color: hsl(224,7.59%,28.43%)'></div>
	/* 22 */ //! <div style='color: inherit'></div>
	/* 23 */ //! <div style='outline-color: invert'></div>
	/* 24 */ //! <div style='color: Scrollbar'></div>
	/* 25 */ //! <div style='color: currentColor'></div>
	/* 26 */ //! <div style='color: rgb(0, 255, 0'></div>
	/* 27 */ //! <div style='color: rgba(  0  ,  255  ,  0  , +1  )'></div>
	/* 28 */ //! <div style='color: rgba( -0  ,  255  , +0  ,  1  )'></div>
	/* 29 */ //! <div style='color: rgba(0, 255, 0, 1'></div>
	/* 30 */ //! <div style='color: rgba(255, 0, 0, 1.)'></div>
	/* 31 */ //! <div style='color: rgba(255, 0, 0, '></div>
	/* 32 */ //! <div style='color: hsl(+120, +100%, +50%)'></div>
	/* 33 */ //! <div style='color: hsl(0, 100.%, 50%)'></div>
	/* 34 */ //! <div style='color: \"red\"'></div>
}

test("Parsing in the cascade")
	language ecmascript;
{
	elms = document.getElementsByTagName('div');

	verify(elms[0].style.color == "");
	verify(elms[1].style.color == "rgb(255, 170, 255)");
	verify(elms[2].style.color == "rgb(171, 205, 239)");
	verify(elms[3].style.color == "rgb(20, 30, 255)");
	verify(elms[4].style.color == "rgb(255, 0, 255)");
	verify(elms[5].style.color == "");
	verify(elms[6].style.color == "");
	verify(elms[7].style.color == "gold");
	verify(elms[8].style.color == "");
	verify(elms[9].style.color == "rgba(6, 7, 8, 0)");
	verify(elms[10].style.color == "rgba(255, 255, 255, 0)");
	verify(elms[11].style.color == "rgb(255, 255, 255)");
	verify(elms[12].style.color == "rgba(255, 255, 255, 0)");
	verify(elms[13].style.color == "rgb(0, 0, 0)");
	verify(elms[14].style.color == "rgb(0, 255, 0)");
	verify(elms[15].style.color == "rgb(0, 255, 0)");
	verify(elms[16].style.color == "rgba(0, 255, 0, 0)");
	verify(elms[17].style.color == "transparent");
	verify(elms[18].style.color == "burlywood");
	verify(elms[19].style.color == "rgb(227, 227, 227)");
	verify(elms[20].style.color == "rgba(0, 0, 0, 0.7882)");
	verify(elms[21].style.color == "rgb(67, 70, 78)");
	verify(elms[22].style.color == "inherit");
	verify(elms[23].style.outlineColor == "invert");
	verify(elms[24].style.color != "");
	verify(elms[25].style.color == "currentColor");
	verify(elms[26].style.color == "rgb(0, 255, 0)");
	verify(elms[27].style.color == "rgb(0, 255, 0)");
	verify(elms[28].style.color == "rgb(0, 255, 0)");
	verify(elms[29].style.color == "rgb(0, 255, 0)");
	verify(elms[30].style.color == "");
	verify(elms[31].style.color == "");
	verify(elms[32].style.color == "rgb(0, 255, 0)");
	verify(elms[33].style.color == "");
	verify(elms[34].style.color == "");
}

html {
	/* 0 */ //! <div style="color: 123"></div>
	/* 1 */ //! <div style="color: 1234"></div>
	/* 1 */ //! <div style="color: 123456"></div>
	/* 2 */ //! <div style="color: abc"></div>
	/* 3 */ //! <div style="color: abcd"></div>
	/* 4 */ //! <div style="color: abcdef"></div>
	/* 5 */ //! <div style="color: 100eee"></div>
	/* 6 */ //! <div style="color: 100ee"></div>
	/* 7 */ //! <div style="color: eee100"></div>
	/* 8 */ //! <div style="color: eee10"></div>
}

test("Quirks mode")
	language ecmascript;
{
	verify(document.compatMode == 'BackCompat');
	elms = document.getElementsByTagName('div');

	verify(elms[0].style.color == "rgb(17, 34, 51)");
	verify(elms[1].style.color == "");
	verify(elms[2].style.color == "rgb(18, 52, 86)"); //#aabbcc
	verify(elms[3].style.color == "rgb(170, 187, 204)");
	verify(elms[4].style.color == "");
	verify(elms[5].style.color == "rgb(171, 205, 239)");
	verify(elms[6].style.color == "rgb(16, 14, 238)");
	verify(elms[7].style.color == "");
	verify(elms[8].style.color == "rgb(238, 225, 0)");
	verify(elms[9].style.color == "");
}

html {
//! <!DOCTYPE  html>
//! <div style='color: 123'></div>
//! <div style='color: 123456'></div>
//! <div style='color: abc'></div>
//! <div style='color: abcdef'></div>
//! <div style='color: 100eee'></div>
//! <div style='color: eee100'></div>
}

test("Standards mode")
	language ecmascript;
{
	verify(document.compatMode != 'BackCompat');

	elms = document.getElementsByTagName('div');

	for(i = 0; i < 6; i++)
		verify(elms[i].style.color == "");
}
