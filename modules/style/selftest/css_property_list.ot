/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "style.css_property_list";

include "modules/style/css.h";
include "modules/style/css_property_list.h";

global
{
	/** Add a CSS_number_decl to a prop_list. */
	OP_STATUS Add(CSS_property_list &prop_list, CSSProperty property, int value)
	{
		CSS_decl* decl = OP_NEW(CSS_number_decl, (property, float(value), CSS_PX));
		RETURN_OOM_IF_NULL(decl);
		prop_list.AddDecl(decl, FALSE, CSS_decl::ORIGIN_AUTHOR);
		return OpStatus::OK;
	}

	/** Replace a CSS_number_decl in a property list. */
	OP_STATUS Replace(CSS_property_list &prop_list, CSSProperty property, int value)
	{
		CSS_decl* decl = OP_NEW(CSS_number_decl, (property, float(value), CSS_PX));
		RETURN_OOM_IF_NULL(decl);
		prop_list.ReplaceDecl(decl, FALSE, CSS_decl::ORIGIN_AUTHOR);
		return OpStatus::OK;
	}
}

/**
 * Check that the CSS_number_decl at index 'idx' in the property list
 * is equal to the specified 'property' and 'value'.
 */
subtest CheckDecl(CSS_property_list &prop_list, size_t idx, CSSProperty property, int value)
{
	verify(prop_list.GetLength() > idx);

	CSS_decl *decl = prop_list.GetFirstDecl();

	for (size_t i = 0; decl && i < idx; ++i)
		decl = decl->Suc();

	verify(decl != NULL);
	verify(decl->GetDeclType() == CSS_DECL_NUMBER);

	CSS_number_decl* num_decl = static_cast<CSS_number_decl*>(decl);

	double rounded = op_floor(num_decl->GetNumberValue(0) + 0.5);

	verify(int(rounded) == value);
}

test("CSS_property_list::ReplaceDecl, empty list")
{
	CSS_property_list pl;
	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));

	verify(pl.GetLength() == 1);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_width, 1337));
}

test("CSS_property_list::ReplaceDecl, not present")
{
	CSS_property_list pl;
	verify_success(Add(pl, CSS_PROPERTY_left, 42));
	verify_success(Add(pl, CSS_PROPERTY_right, 24));

	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));
	verify_success(Replace(pl, CSS_PROPERTY_height, 911));

	verify(pl.GetLength() == 4);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_left, 42));
	verify(CheckDecl(pl, 1, CSS_PROPERTY_right, 24));
	verify(CheckDecl(pl, 2, CSS_PROPERTY_width, 1337));
	verify(CheckDecl(pl, 3, CSS_PROPERTY_height, 911));
}

test("CSS_property_list::ReplaceDecl, front")
{
	CSS_property_list pl;
	verify_success(Add(pl, CSS_PROPERTY_width, 42));
	verify_success(Add(pl, CSS_PROPERTY_right, 24));

	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));

	verify(pl.GetLength() == 2);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_width, 1337));
	verify(CheckDecl(pl, 1, CSS_PROPERTY_right, 24));
}

test("CSS_property_list::ReplaceDecl, back")
{
	CSS_property_list pl;
	verify_success(Add(pl, CSS_PROPERTY_right, 24));
	verify_success(Add(pl, CSS_PROPERTY_width, 42));

	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));

	verify(pl.GetLength() == 2);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_right, 24));
	verify(CheckDecl(pl, 1, CSS_PROPERTY_width, 1337));
}


test("CSS_property_list::ReplaceDecl, middle")
{
	CSS_property_list pl;
	verify_success(Add(pl, CSS_PROPERTY_right, 42));
	verify_success(Add(pl, CSS_PROPERTY_width, 5));
	verify_success(Add(pl, CSS_PROPERTY_height, 8));
	verify_success(Add(pl, CSS_PROPERTY_left, 24));

	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));
	verify_success(Replace(pl, CSS_PROPERTY_height, 1984));

	verify(pl.GetLength() == 4);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_right, 42));
	verify(CheckDecl(pl, 1, CSS_PROPERTY_width, 1337));
	verify(CheckDecl(pl, 2, CSS_PROPERTY_height, 1984));
	verify(CheckDecl(pl, 3, CSS_PROPERTY_left, 24));
}

test("CSS_property_list::ReplaceDecl, multiple")
{
	CSS_property_list pl;
	verify_success(Add(pl, CSS_PROPERTY_right, 42));
	verify_success(Add(pl, CSS_PROPERTY_width, 5));
	verify_success(Add(pl, CSS_PROPERTY_height, 8));
	verify_success(Add(pl, CSS_PROPERTY_width, 500));
	verify_success(Add(pl, CSS_PROPERTY_left, 24));

	verify_success(Replace(pl, CSS_PROPERTY_width, 1337));

	verify(pl.GetLength() == 5);
	verify(CheckDecl(pl, 0, CSS_PROPERTY_right, 42));
	verify(CheckDecl(pl, 1, CSS_PROPERTY_width, 5));
	verify(CheckDecl(pl, 2, CSS_PROPERTY_height, 8));
	verify(CheckDecl(pl, 3, CSS_PROPERTY_width, 1337));
	verify(CheckDecl(pl, 4, CSS_PROPERTY_left, 24));

}
