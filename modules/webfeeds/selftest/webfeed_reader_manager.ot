/* -*- Mode: c++; tab-width: 4; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2008 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 *
 * @author Arjan van Leeuwen (arjanl)
 */

group "webfeeds.webfeed_reader_manager";
require WEBFEEDS_EXTERNAL_READERS;

include "modules/webfeeds/src/webfeed_reader_manager.h";
include "modules/prefsfile/prefsfile.h";
include "modules/util/opfile/opfile.h";

global
{
	PrefsFile* prefsfile;
	OpFile file;
};

setup
{
	file.Construct(UNI_L("webfeed_providers.ini"), OPFILE_TEMP_FOLDER);
	prefsfile = OP_NEW(PrefsFile, (PREFS_INI));
	if (prefsfile)
	{
		TRAPD(err, prefsfile->ConstructL();
				   prefsfile->SetFileL(&file);
				   prefsfile->WriteIntL("Google Reader", "ID", 1);
				   prefsfile->WriteStringL("Google Reader", "URL", UNI_L("http://reader.google.com/subscribe?url=%s"));
				   prefsfile->WriteIntL("BlablaBlabla", "ID", 3);
				   prefsfile->WriteStringL("BlablaBlabla", "URL", UNI_L("http://blabla.bla.com/subscribe?url=%s"));
				   prefsfile->CommitL();
			 );
	}
};

test("get reader IDs")
{
	WebFeedReaderManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile, TRUE)));

	verify(manager.GetCount() == 2);
	verify(manager.GetIdByIndex(0) == 1);
	verify(manager.GetIdByIndex(1) == 3);
};

test("get reader names")
{
	WebFeedReaderManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile, TRUE)));

	OpString name;
	verify(OpStatus::IsSuccess(manager.GetName(1, name)));
	verify(name.Compare(UNI_L("Google Reader")) == 0);
};

test("get url for external reader")
{
	WebFeedReaderManager manager;
	verify(OpStatus::IsSuccess(manager.Init(prefsfile, TRUE)));

	URL feed_url = g_url_api->GetURL("http://www.overheardinnewyork.com/index.xml");
	URL correct_subscribe_url = g_url_api->GetURL("http://reader.google.com/subscribe?url=http%3A%2F%2Fwww.overheardinnewyork.com%2Findex.xml");

	URL target_url;
	verify(OpStatus::IsSuccess(manager.GetTargetURL(1, feed_url, target_url)));
	verify(correct_subscribe_url == target_url);
};

exit
{
	OP_DELETE(prefsfile);
	file.Delete();
};
