/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "webfeeds.tagstrip";
require init;
require WEBFEEDS_BACKEND_SUPPORT;

include "modules/webfeeds/src/webfeedutil.h";

language C++;

table tests(const uni_char*, const uni_char*)
{
	{ UNI_L("ipsum lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("<starttag>ipsum lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("ipsum lipsum</endtag>"), UNI_L("ipsum lipsum") }
	{ UNI_L("<tag>ipsum <	tag>lipsum<tag>"), UNI_L("ipsum lipsum") } 
	{ UNI_L("ipsum <mismatch lipsum"), UNI_L("ipsum &lt;mismatch lipsum") }
	{ UNI_L("ipsum mismatch> lipsum"), UNI_L("ipsum mismatch> lipsum") }
	{ UNI_L("ipsum <mismatch <mismatch>lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("ipsum <mismatch> mismatch>lipsum"), UNI_L("ipsum  mismatch>lipsum") }
	{ UNI_L("ipsum <tag arg=\"not end>\" >lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("ipsum < tag arg='not end>'>lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("ipsum <tag arg=\"not end> lipsum"), UNI_L("ipsum &lt;tag arg=\"not end> lipsum") }
	{ UNI_L("ipsum \"lipsum"), UNI_L("ipsum \"lipsum") }
	{ UNI_L("ipsum <mismatch arg='<mismatch lipsum"), UNI_L("ipsum &lt;mismatch arg='&lt;mismatch lipsum") }
	{ UNI_L("ipsum <tag> lipsum<style arg=\"\">"), UNI_L("ipsum  lipsum") }
}

table style_removal_tests(const uni_char*, const uni_char*)
{
	{ UNI_L("ipsum <style></style> <tag> lipsum<style arg=\">"), UNI_L("ipsum  <tag> lipsum&lt;style arg=\">") }
	{ UNI_L("ipsum <style><style> <tag></style> remove</style>lipsum"), UNI_L("ipsum lipsum") }
	{ UNI_L("ipsum <style><style arg='</style>'> <tag></style> remove</style>lipsum"), UNI_L("ipsum lipsum") }
}

test("Testing tag stripping")
{
	iterate (test, correct_result) from tests
	{
		OpString result;
		WebFeedUtil::StripTags(test, result);
		verify(result.Compare(correct_result) == 0);
	}

	iterate (test, correct_result) from style_removal_tests
	{
		OpString result;
		WebFeedUtil::StripTags(test, result, UNI_L("style"), TRUE);
		verify(result.Compare(correct_result) == 0);
	}
}
