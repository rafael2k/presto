/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4; c-file-style:"stroustrup" -*-
**
** Copyright (C) 1995-2009 Opera Software AS.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "libvega.postscript.postscriptvegaprinterlistener";

require VEGA_POSTSCRIPT_PRINTING;

include "modules/libvega/src/postscript/postscriptvegaprinterlistener.h";
include "modules/util/opfile/opmemfile.h";

constant BUFFER_SIZE = 1024*1024;

global
{
	class PSVEGAListenerHolder
	{
	public:
		PSVEGAListenerHolder()
			: memfile(NULL)
			, ps_listener(NULL)
		{
			const size_t BufferSize = BUFFER_SIZE;
			output_data = OP_NEWA(unsigned char, BufferSize);
			if(!output_data)
				return;

			memfile = OpMemFile::Create(output_data, BufferSize, TRUE);
			if(!memfile)
			{
				OP_DELETEA(output_data);
				output_data = NULL;
				return;
			}

			ps_listener = OP_NEW(PostScriptVEGAPrinterListener, (static_cast<OpFile&>(*memfile)));
			if (!ps_listener)
			{
				OP_DELETE(memfile);
				output_data = NULL;
				return;
			}

			ps_listener->Init(&screen_metrics, &paper_metrics);
		}

		~PSVEGAListenerHolder()
		{
			OP_DELETE(ps_listener);
			OP_DELETE(memfile);
		}

		void initMetrics(PostScriptOutputMetrics& metrics)
		{
			metrics.width = 595;
			metrics.height = 842;
			metrics.offset_top = 30;
			metrics.offset_left = 40;
			metrics.offset_bottom = 40;
			metrics.offset_right = 30;
			metrics.dpi_x = 72;
			metrics.dpi_y = 72;
		}

		unsigned char* output_data;
		OpFileDescriptor* memfile;
		PostScriptOutputMetrics screen_metrics;
		PostScriptOutputMetrics paper_metrics;
		PostScriptVEGAPrinterListener* ps_listener;
	};

	bool contains(OpString8& string, const char* substring)
	{
		return string.Find(substring, 0) != KNotFound;
	}
};


test("generates postscript prolog")
{
	PSVEGAListenerHolder ps_listener_holder;
	verify(ps_listener_holder.ps_listener);

	OpString8 result;
	result.Set((const char*)ps_listener_holder.output_data);
	//printf("PS: %s\n", ps_listener_holder.output_data);

	verify(contains(result, "%!PS-Adobe-3.0\n"
						 	"%%Creator: Opera\n"
						 	"%%BoundingBox: (atend)\n"
						 	"%%LanguageLevel: 3\n"
						 	"%%DocumentData: Clean7Bit\n"
						 	"%%Pages: (atend)\n"
						 	"%%Orientation: (atend)\n"
						 	"%%PageOrder: Ascend\n"
						 	"%%EndComments\n"
						 	"%%BeginProlog\n"));
}


