TWEAK_VEGA_LINE_ALLOCATION_SIZE		timj

	Change the number of lines which are allocated in one block when there
	is no more space left in a VEGAPath.

	Category: setting
	Define: VEGA_LINE_ALLOCATION_SIZE
	Value: 128
	Disabled for: desktop, smartphone, tv, minimal, mini
	Depends on: nothing

TWEAK_VEGA_INTERSECTION_ALLOCATION_SIZE		timj

	Change the number of intersections which are allocated in one block
	when there is no more space left in a VEGAPath. Intersections are only
	used for the hardware backend with triangulation.

	Category: setting
	Define: VEGA_INTERSECTION_ALLOCATION_SIZE
	Value: 128
	Disabled for: desktop, smartphone, tv, minimal, mini
	Depends on: nothing

TWEAK_VEGA_USE_FLOATING_POINT		timj

	Use floating point instead of fixed point. Fixed point generally has
	better performance, but lower quality.

	Category: performance
	Define: VEGA_USE_FLOATS
	Depends on: nothing
	Enabled for: desktop, smartphone, tv, minimal, mini
	Disabled for: none

TWEAK_VEGA_3D_HARDWARE_SUPPORT		timj

	Support the 3D hardware backend of libvega. Enabling this
	requires an implementation of the VEGA3dDevice porting
	interface.

	Category: setting
	Define: VEGA_3DDEVICE
	Depends on: FEATURE_VEGA_OPPAINTER, USE_PREMULTIPLIED_ALPHA
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_VEGA_2D_HARDWARE_SUPPORT		fs

	Support the 2D hardware backend of libvega. Enabling this
	requires an implementation of the VEGA2dDevice porting
	interface.

	Category: setting
	Define: VEGA_2DDEVICE
	Depends on: FEATURE_VEGA_OPPAINTER
	Enabled for: tv
	Disabled for: desktop, smartphone, minimal, mini

TWEAK_VEGA_DEFAULT_QUALITY		timj

	The default quality for anti-aliasing in libvega.

	For software and 2D hardware backends 0 means no antialiasing
	(1x1 samples), 1 means 2x2 samples et.c (2^quality x 2^quality
	samples in general). Quality values 1 through 4 are currently
	supported. Values greater than 4 will be clamped to 4.

	For 3D hardware rendering the value corresponds to the number
	of actual samples divided by 2, clamped to range [1, max supported].

	Category: setting
	Define: VEGA_DEFAULT_QUALITY
	Value: 4
	Value for tv: 3
	Value for smartphone: 2
	Value for minimal: 0
	Disabled for: desktop, mini
	Depends on: nothing

TWEAK_VEGA_OPPAINTER_ANIMATIONS		timj

	Animate the page when loading pages or switching tabs.

	Category: setting
	Define: VEGA_OPPAINTER_ANIMATIONS
	Depends on: FEATURE_VEGA_OPPAINTER
	Disabled for: desktop, tv, smartphone, minimal

TWEAK_VEGA_CANVAS_JPG_DATA_URL		timj

	The canvas has the ability to export to jpg using the dataURL function.

	Category: setting
	Define: VEGA_CANVAS_JPG_DATA_URL
	Depends on: FEATURE_CANVAS
	Enabled for: desktop
	Disabled for: smartphone, tv, minimal, mini

TWEAK_VEGA_CANVAS_OPTIMIZE_SPEED	peterp

	Canvas images defaults to rendering with CSS_VALUE_optimizeSpeed.

	Category: performance
	Define: VEGA_CANVAS_OPTIMIZE_SPEED
	Depends on: FEATURE_CANVAS
	Enabled for: smartphone
	Disabled for: desktop, tv, minimal, mini

TWEAK_VEGA_CANVAS3D_USE_RGB565	mage

	Use RGB565 color buffer format for WebGL canvas elements without an alpha
	channel (the default is RGB888).

	Category: performance
	Define: VEGA_CANVAS3D_USE_RGB565
	Depends on: FEATURE_CANVAS3D
	Enabled for: smartphone
	Disabled for: desktop, tv, minimal, mini

TWEAK_VEGA_CANVAS3D_USE_RGBA4444	mage

	Use RGBA4444 color buffer format for WebGL canvas elements with an alpha
	channel (the default is RGBA8888).

	Category: performance
	Define: VEGA_CANVAS3D_USE_RGBA4444
	Depends on: FEATURE_CANVAS3D
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_VEGA_INTERNAL_FORMAT_BGRA8888	fs

	Use BGRA8888 as the internal pixel format for libvega.

	Category: setting
	Define: VEGA_INTERNAL_FORMAT_BGRA8888
	Enabled for: desktop, tv, smartphone, minimal, mini
	Depends on: nothing

TWEAK_VEGA_INTERNAL_FORMAT_RGBA8888	fs

	Use RGBA8888 as the internal pixel format for libvega.

	Category: setting
	Define: VEGA_INTERNAL_FORMAT_RGBA8888
	Disabled for: desktop, tv, smartphone, minimal, mini
	Depends on: nothing

TWEAK_VEGA_INTERNAL_FORMAT_RGB565A8	fs

	Use RGB565A8 (planar) as the internal pixel format for libvega.

	Category: setting
	Define: VEGA_INTERNAL_FORMAT_RGB565A8
	Disabled for: desktop, tv, smartphone, minimal, mini
	Depends on: nothing

TWEAK_VEGA_MDEFONT_SUPPORT						timj

	Use the mdefont module for fonts. This is the default font
	implementation used by VegaOpPainter.

	Category: setting
	Define: VEGA_MDEFONT_SUPPORT
	Enabled for: desktop, tv, smartphone, minimal
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_NATIVE_FONT_SUPPORT                    timj

	Use native fonts rather than the builtin font support. The api for
	rendering the fonts will be different, see src/oppainter/vegaopfont.h
	for details.

	Category: setting
	Define: VEGA_NATIVE_FONT_SUPPORT
	Disabled for: desktop, tv, smartphone, minimal
	Depends on: FEATURE_VEGA_OPPAINTER
	Conflicts with: TWEAK_VEGA_MDEFONT_SUPPORT

TWEAK_VEGA_OPPAINTER_OPACITY_CACHE		fs

	Use a cached surface for opacity handling. Consumes extra memory if opacity is used.

	Category: performance
	Define: VEGA_OPPAINTER_OPACITY_CACHE
	Depends on: FEATURE_VEGA_OPPAINTER
	Enabled for: desktop
	Disabled for: tv, smartphone, minimal

TWEAK_VEGA_PRINTER_LISTENER 	                   timj

	Add support for setting a printer listener on the painter which
	gets called when some things are painted. Printing all calls
	sent to the printer listener is enough to support printing.
	If the platform can support printing postscript or similar that
	is a better option.

	Category: setting
	Define: VEGA_PRINTER_LISTENER_SUPPORT
	Enabled for: desktop
	Disabled for: tv, smartphone, minimal
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_SUBPIXEL_FONT_BLENDING					timj

	Do per component blending of fonts. This should probably only be used
	on windows with a GDI based font implementation.

	Category: setting
	Define: VEGA_SUBPIXEL_FONT_BLENDING
	Disabled for: desktop, tv, smartphone, minimal
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_PRECISE_FLATTENING			fs

	Use a more precise algorithm for determining when a curve is
	sufficiently flat. This algorithm is potentially more
	computationally demanding, but should result in fewer line
	segments per curve segment.

	Category: performance
	Define: VEGA_USE_PRECISE_ITERATIVE_FLATTENING
	Depends on: TWEAK_VEGA_USE_FLOATING_POINT
	Enabled for: none
	Disabled for: desktop, tv, smartphone, minimal, mini

TWEAK_VEGA_POSTSCRIPT_PRINTING						pugo

	Add support for VEGA PostScript printing. This tweak enables a
	OpPrinterController implementation for VEGA that will create a
	VEGA painter and a printer listener that outputs PostScript.

	Category: setting
	Define: VEGA_POSTSCRIPT_PRINTING
	Enabled for: desktop
	Disabled for: tv, smartphone, minimal
	Depends on: FEATURE_VEGA_OPPAINTER, VEGA_PRINTER_LISTENER_SUPPORT

TWEAK_VEGA_USE_BLITTER_FOR_NONPIXELALIGNED_IMAGES		rogerj

	Enables the use of the hardware (or software) blitter for
	painting non-pixelaligned images. Enabling this tweak allows
	for subpixel positioned images (most commonly originating from
	SVG) to be painted using hardware acceleration. Antialiasing is
	performed by blitting the fractional parts using lower opacity.

	Category: performance
	Define: VEGA_USE_BLITTER_FOR_NONPIXELALIGNED_IMAGES
	Enabled for: tv
	Disabled for: desktop, smartphone, minimal, mini

TWEAK_VEGA_USE_GRADIENT_CACHE  		 	     		rogerj

	Enables the gradient cache. This allows for pre-rendering
	gradients into small bitmaps that are then stretched to
	cover the area where the gradients should be rendered.
	Some render errors can be expected and this should only
	be enabled where performance is crucial.
	Enabling TWEAK_VEGA_USE_BLITTER_FOR_NONPIXELALIGNED_IMAGES
	as well is recommended to enable SVG to use this.

	Category: performance
	Define: VEGA_USE_GRADIENT_CACHE
	Enabled for: tv
	Disabled for: desktop, smartphone, minimal, mini

TWEAK_VEGA_GRADIENT_CACHE_MEM_LIMIT	 	     		rogerj

	The maximum amount of memory (in kb) that the gradient cache
	will occupy.

	Category: setting
	Define: VEGA_GRADIENT_CACHE_MEM_LIMIT
	Value: 512
	Depends on: TWEAK_VEGA_USE_GRADIENT_CACHE
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_VEGA_NO_FONTMANAGER_CREATE                wonko

	If enabled, OpFontManager::Create will not be defined. Useful if
	the platform wants to inherit from the font manager. If this tweak
	is enabled, the platform must provide the implementation of
	OpFontManager::Create.

	Category: workaround
	Define:   VEGA_NO_FONTMANAGER_CREATE
	Enabled for: none
	Disabled for: desktop, smartphone, tv, mini, minimal
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_GLYPH_CACHE_SIZE			anna

	This tweak is currently used for HW3D backend only; 
	TWEAK_VEGA_GLYPH_CACHE_MEM_LIMIT is used for other backends.
	Number of glyphs to cache in memory. 100 is a good (maybe large)
	number for western web pages. 400+ is good for asian languages.
	Note: should be power of 2.

	Category: setting
	Define: VEGA_GLYPH_CACHE_SIZE
	Value: 128
	Value for desktop: 128
	Value for smartphone: 128
	Value for tv: 512
	Value for mini: 128
	Value for minimal: 128
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_GLYPH_CACHE_MEM_LIMIT		carstenz

	The maximum amount of memory (in kb) that the glyph cache
	will occupy. This covers both levels of the cache.

	Category: setting
	Define: VEGA_GLYPH_CACHE_MEM_LIMIT
	Value: 200
	Value for desktop: 400
	Value for smartphone: 200
	Value for tv: 200
	Value for mini: 400
	Value for minimal: 100
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_GLYPH_CACHE_INITIAL_SIZE		carstenz

	The initial size (in items) of the glyph cache. Must be a power of 2.

	Category: setting
	Define: VEGA_GLYPH_CACHE_INITIAL_SIZE
	Value: 64
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_GLYPH_CACHE_HASH_SIZE		carstenz

	The hash table size for the glyph cache. Must be prime.

	Category: setting
	Define: VEGA_GLYPH_CACHE_HASH_SIZE
	Value: 509
	Depends on: FEATURE_VEGA_OPPAINTER

TWEAK_VEGA_TEMP_VERTEX_BUFFER_SIZE		timj

	The size of the temp vertex buffer.

	Category: setting
	Define: VEGA_TEMP_VERTEX_BUFFER_SIZE
	Value: 4096
	Value for desktop: 4096
	Value for smartphone: 4096
	Value for tv: 4096
	Value for minimal: 4096
	Depends on: TWEAK_VEGA_3D_HARDWARE_SUPPORT || FEATURE_CANVAS3D

TWEAK_VEGA_ALPHA_TEXTURE_SIZE			rogerj

	The width and height of the alpha texture that is used by
	fillPath.

	Category: setting
	Define: VEGA_ALPHA_TEXTURE_SIZE
	Value: 1024
	Value for desktop: 1024
	Value for smartphone: 256
	Value for tv: 256
	Value for minimal: 256
	Depends on: TWEAK_VEGA_3D_HARDWARE_SUPPORT || FEATURE_CANVAS3D

TWEAK_VEGA_LIMIT_BITMAP_SIZE   wonko

    If enabled, bitmaps exceeding a certain size will be split into
    smaller tiles. This can be used to circumvent eg the max texture
    size on graphics cards. Thus, the actual controlled size is not
    the total size of the bitmap (WxH) but instead the max allowed
    side of the bitmap. The maximum allowed side is fetched through
    VEGARendererBackend::maxBitmapSide.

    Category:     setting
    Define:       VEGA_LIMIT_BITMAP_SIZE
    Depends on:   TWEAK_VEGA_3D_HARDWARE_SUPPORT
	Enabled for:  desktop, smartphone, tv, minimal, mini
	Disabled for: none

TWEAK_VEGA_SUBPIXEL_FONT_INTERPOLATION_WORKAROUND	shuais

    Subpixel masks produced by platfrom API(GDI) may vary depending
	on text colors, this workaround make it possible for platform
	implementation of VEGAFont to produce 2 masks, typically one with
	black text on white background and the other white on black.
	A linear blend of 2 masks with text color as coefficient will be
	used to render subpixel glyph.

    Category:     workaround
    Define:       VEGA_SUBPIXEL_FONT_INTERPOLATION_WORKAROUND
    Depends on:   TWEAK_VEGA_SUBPIXEL_FONT_BLENDING && TWEAK_VEGA_NATIVE_FONT_SUPPORT
    Enabled for:  none
    Disabled for: desktop, tv, smartphone, minimal, mini

TWEAK_VEGA_SUBPIXEL_FONT_OVERWRITE_ALPHA	shuais

	This controls how the non-native drawing path of VEGAFont blend
	cleartype glyphs to render target. If enabled, alpha channel of
	cleartype pixels will be blended with alpha of target pixels to
	generate a approximate new alpha value, otherwise the alpha	of
	target pixels will be intact which might be a problem if target
	pixel is to be blended again later.

    Category:     workaround
    Define:       VEGA_SUBPIXEL_FONT_OVERWRITE_ALPHA
    Depends on:   TWEAK_VEGA_SUBPIXEL_FONT_BLENDING
    Enabled for:  none
    Disabled for: desktop, tv, smartphone, minimal, mini

TWEAK_VEGA_USE_ASM		jadahl

	Check available CPU features and use a dispatch table to call
	functions implemented using these instead of the standard C++
	versions.

	Category: performance
	Define: VEGA_USE_ASM
	Enabled for: desktop, smartphone
	Disabled for: minimal, mini, tv
	Depends on: (TWEAK_VEGA_INTERNAL_FORMAT_BGRA8888 || TWEAK_VEGA_INTERNAL_FORMAT_RGBA8888) && USE_PREMULTIPLIED_ALPHA && (ARCHITECTURE_ARM || ARCHITECTURE_IA32)

TWEAK_VEGA_CLIPRECT_TOLERANCE				rogerj

	This tweak is similar to TWEAK_SVG_CLIPRECT_TOLERANCE.
	See the detailed description in the SVG module for more information.

	Category   : performance, memory
	Define	   : VEGA_CLIPRECT_TOLERANCE
	Value	   : 32
	Value for smartphone: 4
	Value for tv: 1
	Value for minimal: 1
	Disabled for: desktop, mini

TWEAK_VEGA_VERIFY_SIMD	jadahl

	When using some SIMD operations while Opera runs inside some Virtual
	machines on some guest operating systems, even though the system
	reports the feature being enabled it does not work.

	One such combination is Windows running inside XEN or VirtualBox.

	Category: workaround
	Define: VEGA_VERIFY_SIMD
	Enabled for: none
	Disabled for: desktop, smartphone, minimal, mini, tv
	Depends on: TWEAK_VEGA_USE_ASM
