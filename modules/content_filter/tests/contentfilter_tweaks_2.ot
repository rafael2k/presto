/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4; c-file-style:"stroustrup" -*-
**
** Copyright (C) 1995-2007 Opera Software AS.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
*/

group "content_filter.tweaks_2";
require URL_FILTER;
require CF_DONT_BLOCK_OPERA_PROTOCOLS;

include "modules/content_filter/content_filter.h";

global
{
	URLFilter* urlfilter;
}

test("create object")
{
	urlfilter = OP_NEW(URLFilter, ());
	verify(urlfilter != NULL);
}

test("load TWEAK_CF_DONT_BLOCK_OPERA_PROTOCOLS test block list") require success "create object";
file uni path "data/tweaks_2_list.ini";
{
	BOOL load = TRUE;
	OpString path_str;
	OP_STATUS status;
	
	path_str.Set(path);
	status = urlfilter->InitL(path_str);
	verify_success(status);

	// test that the above url list rules was ignored silently
	verify_success(urlfilter->CheckURL(UNI_L("about:blank"), load));
	verify(load == TRUE);

	verify_success(urlfilter->CheckURL(UNI_L("about:*"), load));
	verify(load == TRUE);

	verify_success(urlfilter->CheckURL(UNI_L("about:blank*"), load));
	verify(load == TRUE);

	verify_success(urlfilter->CheckURL(UNI_L("opera:plugins"), load));
	verify(load == TRUE);

	verify_success(urlfilter->CheckURL(UNI_L("opera:*"), load));
	verify(load == TRUE);
}

test("test tweak TWEAK_CF_DONT_ALLOW_BLOCK_ALL") require success "create object";
{
	BOOL load = TRUE;

	// test AddURL
	verify_success(urlfilter->AddURLString(UNI_L("about:blank*"), TRUE, NULL));

	// test that the above url add was ignored silently
	verify_success(urlfilter->CheckURL(UNI_L("about:blank"), load));
	verify(load == TRUE);

	// test AddURL
	verify_success(urlfilter->AddURLString(UNI_L("opera:*"), TRUE, NULL));

	// test that the above url add was ignored silently
	verify_success(urlfilter->CheckURL(UNI_L("opera:plugins"), load));
	verify(load == TRUE);
}

test("free object") require success "create object";
{
	OP_DELETE(urlfilter);
	urlfilter = NULL;
}
