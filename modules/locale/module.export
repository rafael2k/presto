API_LOC_PREFSFILE_LANGFILE	peter

	Enables support for reading language files in LNG file format, using the
	PrefsFile API. This makes the OpPrefsFileLanguagemanager available in
	builds.

	For normal builds, you should not import this API manually, you should
	just enable the feature FEATURE_LANGUAGE_FILE, which not only makes the
	class available, but also makes the locale module initialize it. This
	API is for those that want the PrefsFile-based support but which want to
	control the language handling themselves.

	Defines:    LOC_LNGFILELANGMAN
	Depends on: nothing

API_LOC_BINARY_LANGFILE		peter

	Enables support for reading language files in binary format. This makes
	the OpBinaryLanguageFileManager class available in builds.

	For normal builds, you should not import this API manually, you should
	just enable the feature FEATURE_BINARY_LANGUAGE_FILE, which not only
	makes the class available, but also makes the locale module initialize
	it. This API is for those that want the binary file but which want to
	control the language handling themselves, such as Opera Mini.

	Defines:    LOC_BINFILELANGMAN
	Depends on: nothing

API_LOC_CONTEXTS			peter

	Adds a OpLanguageManager::SetContext() API which allows the language
	manager to return different results depending on the context it is to
	displayed in.

	Opera Mini uses this to be able to serve different language strings to
	different clients.

	Defines:    LOCALE_CONTEXTS
	Depends on: nothing

API_LOC_STR_NAMESPACE		arjanl

	Defines 'Str' as a namespace instead of a class, so that Str::LocaleString
	can be used as a forward declaration.

	Defines:	LOC_STR_NAMESPACE
	Depends on: HAVE_NAMESPACE
