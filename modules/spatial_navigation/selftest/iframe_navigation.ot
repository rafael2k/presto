group "spatnav.iframes";

require _SPAT_NAV_SUPPORT_;
require initialization;

language c++;

include "modules/spatial_navigation/sn_handler.h";
include "modules/doc/html_doc.h";
include "modules/doc/frm_doc.h";
include "modules/logdoc/htm_elm.h";

require _SPAT_NAV_SUPPORT_;
require SUPPORT_DATA_URL;

html {
	//! <!DOCTYPE html>
	//! <html>
	//! <head>
	//! <style type="text/css">
	//!     object, iframe { width: 100%; }
	//! </style>
	//! </head>
	//! <body>
	//! <p><a href="" id="p">link</a></p>
	//! <iframe
	//!     src="data:text/html;charset=utf-8;base64,PGEgaHJlZj0iIiBpZD0iZnJhbWUiPmxpbms8L2E+">
	//! </iframe>
	//! <object
	//!     data="data:text/html;charset=utf-8;base64,PGEgaHJlZj0iIiBpZD0ib2JqZWN0Ij5saW5rPC9hPg">
	//! </object>
	//! </body>
	//! </html>
}

test("iframes navigation")
{
	// testing navigation on a page with a link with id "p", an iframe 
	// containing a link with id "frame" and an object with text/html 
	// content which should act like an iframe and contains a link with id
	// "object"

	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	SnHandler handler;
	Window* window = doc->GetWindow();
	verify(window != NULL);

	verify(handler.Init(window) == OpStatus::OK);

	// Get first link
# ifndef SN_HIGHLIGHT_ON_LOAD
	verify(handler.MarkNextItemInDirection(DIR_DOWN, NULL));
# endif // SN_HIGHLIGHT_ON_LOAD

	FramesDocument* frmDoc = (FramesDocument*)handler.GetActiveFrame();
	verify(frmDoc != NULL);

	HTML_Element* helm = handler.GetActiveLink();
	verify(helm != NULL);

	HTML_Document* htmlDoc = frmDoc->GetHtmlDocument();
	verify(htmlDoc != NULL);
	verify(helm == htmlDoc->GetNavigationElement());

	// Get link in iframe
	verify(handler.MarkNextItemInDirection(DIR_DOWN, NULL));

	helm = handler.GetActiveLink();
	verify(helm != NULL);
	verify(uni_strcmp(helm->GetId(), UNI_L("frame")) == 0);
	
	frmDoc = (FramesDocument*)handler.GetActiveFrame();
	htmlDoc= frmDoc->GetHtmlDocument();
	verify(htmlDoc != NULL);
	verify(helm == htmlDoc->GetNavigationElement());
/*
	// Get link in object
	handler->MarkNextItemInDirection(270, NULL);
	verify(handler->MarkNextItemInDirection(270, NULL));

	helm = handler->GetActiveLink();
	verify(helm != NULL);
	verify(uni_strcmp(helm->GetId(), UNI_L("object")) == 0);

	frmDoc = (FramesDocument*)handler->GetActiveFrame();
	htmlDoc= frmDoc->GetHtmlDocument();
	verify(htmlDoc != NULL);
	verify(helm == htmlDoc->GetHighlightedElement());

	// There should be no more links to find down by now
	verify(handler->MarkNextItemInDirection(270, NULL) == FALSE);
	*/
}


html {
        //! <!DOCTYPE html>
        //! <html>
        //! <head>
        //! <style type="text/css">

        //! html   {height:200%;}
        //! p      { padding-bottom: 50%; }
        //! iframe { height:100px; }

        //! </style>
        //! </head>

        //! <body>
        //! <p><a href="" id=first>First link</a></p>

        //! <iframe src="data:text/html,<html><style>p { height: 200px; }</style>
        //!   <p>Scroll down to link</p>
        //!   <a id=iframe href=''>link</a>
        //!   </html>">
        //! </iframe>

        //! <br>
        //! <a href="" id=last>Last link</a>
        //! </body>
        //! </html>
}

table expected_ids(const uni_char*)
{
	{ UNI_L("first") }
	{ UNI_L("iframe") }
	{ UNI_L("last") }
}

table expected_ids_reverse(const uni_char*)
{
	{ UNI_L("iframe") }
	{ UNI_L("first") }
}

test("iframes navigation 2 - scrolling")
{
	// Tests navigating a document with an iframe.  The iframe is outside
	// the visible part at first, and the link in the iframe is also outside
	// of the visible part of the iframe.  So this tests will have to first
	// scroll the main window, and then the iframe to eventually find the link
	
	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	SnHandler handler;

	Window* window = doc->GetWindow();
	verify(window != NULL);

	verify(handler.Init(window) == OpStatus::OK);

	// check that we're able to navigate to all the links
	iterate (expected) from expected_ids
	{
		BOOL more = TRUE;
		while ((more = handler.MarkNextItemInDirection(DIR_DOWN, NULL)))
		{
			HTML_Element* helm = handler.GetActiveLink();
			if (helm && uni_str_eq(helm->GetId(), expected))
				break;  // found the one we're looking for
		}

		verify(more);  // should be possible to navigate more as long as we haven't found all links
	}

	// and again in reverse
	iterate (expected) from expected_ids_reverse
	{
		BOOL more = TRUE;
		while ((more = handler.MarkNextItemInDirection(DIR_UP, NULL)))
		{
			HTML_Element* helm = handler.GetActiveLink();
			if (helm && uni_str_eq(helm->GetId(), expected))
				break;  // found the one we're looking for
		}

		verify(more);  // should be possible to navigate more as long as we haven't found all links
	}
}


// Some really nasty code with a frame inside an iframe using data URLs
html {
        //! <html>
        //! <a href="" id=1>link 1</a><br>
        //! <iframe src="data:text/html,<html><frameset rows=&quot;*&quot; cols=&quot;*&quot;><frame src=&quot;data:text/html,<html><body><p><a href='' id=frame>You should be able to select this link by spatnav</a></p></body></html>&quot;</frame></frameset>"></iframe><br>
        //! <a href="" id=2>link 2</a>
        //! </html>
}

table expected_ids2(const uni_char*)
{
	{ UNI_L("1") }
	{ UNI_L("frame") }
	{ UNI_L("2") }
}

test("frame inside iframe")
{
	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	SnHandler handler;

	Window* window = doc->GetWindow();
	verify(window != NULL);

	verify(handler.Init(window) == OpStatus::OK);

	// check that we're able to navigate to all the links
	iterate (expected) from expected_ids2
	{
		BOOL more = TRUE;
		while ((more = handler.MarkNextItemInDirection(DIR_DOWN, NULL)))
		{
			HTML_Element* helm = handler.GetActiveLink();
			if (helm && uni_str_eq(helm->GetId(), expected))
				break;  // found the one we're looking for
		}

		verify(more);  // should be possible to navigate more as long as we haven't found all links
	}
}

// check that we're able to enter an iframe if it covers the entire start of the page
html {
	//! <!doctype html>
	//! <html>
	//! <style>
	//! body, iframe {
	//!   padding: 0px;
	//!   margin:  0px;
	//!   boder:   0px;
	//! }
	//! iframe {
	//!   position: absolute;
	//!   left: 0px;
	//!   right: 0px;
	//! }
	//! </style>
	//! <body>
	//! <iframe 
	//!   src="data:text/html,<html><a href='' id='link'>link</a></html>">
	//! </iframe>
	//! </body>
	//! </html>
}

test("nothing but iframe")
{
	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	Window* window = doc->GetWindow();
	verify(window != NULL);

	SnHandler* handler = static_cast<SnHandler*>(window->GetSnHandler());
	verify(handler != NULL);

	// check that we're able to find link inside iframe
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
	HTML_Element* helm = handler->GetActiveLink();
	verify(helm);
	verify(uni_str_eq(helm->GetId(), UNI_L("link")));
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!iframe
//!{
//!	display:block;
//!	width:100px;
//!	height:50px;
//!}
//!</style>
//!</head>
//!
//!<body>
//!
//!<a href="#" id="first">Link 1</a>
//!<iframe src="data:text/plain,Iframe"></iframe>
//!<a href="#" id="second">Link 2</a>
//!<iframe src="data:text/plain,Iframe"></iframe>
//!
//!</body>
//!</html>
}
test("navigating past empty iframes")
	// Empty - nothing to navigate inside and not scrollable in any direction.
{
	OpAutoPtr<SnHandler> handler;
	Window* window;
	HTML_Element* helm;

	handler = OP_NEW(SnHandler, ());
	verify(handler.get() != NULL);

	window = state.GetWindow();
	verify(window != NULL);

	verify_success(handler->Init(window));

#ifndef SN_HIGHLIGHT_ON_LOAD
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
#endif // SN_HIGHLIGHT_ON_LOAD

	// 1st navigation should result in top anchor highlight
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "first");

	// 2nd navigation should result in lower anchor highlight
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "second");

	// 3nd navigation should make no action
	verify(!handler->MarkNextItemInDirection(DIR_DOWN, NULL));
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "second");
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!iframe
//!{
//!	width:100px;
//!	height:50px;
//!}
//!
//!#second
//!{
//!	vertical-align:top;
//!}
//!</style>
//!</head>
//!
//!<body>
//!
//!<a href="#" id="first">Link 1</a>
//!<br>
//!<iframe src="data:text/plain,Iframe"></iframe>
//!<a href="#" id="second">Link 2</a>
//!
//!</body>
//!</html>
}
test("navigating past empty iframe, keeping initial search origin")
{
	OpAutoPtr<SnHandler> handler;
	Window* window;
	HTML_Element* helm;

	handler = OP_NEW(SnHandler, ());
	verify(handler.get() != NULL);

	window = state.GetWindow();
	verify(window != NULL);

	verify_success(handler->Init(window));

#ifndef SN_HIGHLIGHT_ON_LOAD
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
#endif // SN_HIGHLIGHT_ON_LOAD

	// 1st navigation should result in top anchor highlight
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "first");

	/* 2nd navigation down should result in lower anchor highlight
	   This is barely reachable in this direction. However it won't be reachable
	   at all if the search origin was the area occupied by the iframe.
	   However we keep the link 1 search origin after checking that we can't do
	   any navigation action inside the iframe. */

	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "second");
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!iframe
//!{
//!	width:100px;
//!	height:50px;
//!}
//!
//!div
//!{
//!	display:inline-block;
//!	overflow:auto;
//!	width:50px;
//!	height:50px;
//!}
//!
//!a
//!{
//!	display:block;
//!	background-color:blue;
//!}
//!
//!#first
//!{
//!	width:70px;
//!	height:30px;
//!}
//!
//!#second
//!{
//!	width:30px;
//!	height:70px;
//!}
//!</style>
//!</head>
//!
//!<body>
//!
//!<div id="first_scrollable"><a href="#" id="first"></a></div><iframe src="data:text/plain,Iframe"></iframe>
//!<br>
//!<iframe src="data:text/plain,Iframe"></iframe>
//!<br>
//!<div id="second_scrollable"><a href="#" id="second"></a></div><iframe src="data:text/plain,Iframe"></iframe>
//!
//!</body>
//!</html>
}
test("navigating past empty iframes with links in scrollables")
{
	OpAutoPtr<SnHandler> handler;
	Window* window;
	HTML_Element* helm;

	handler = OP_NEW(SnHandler, ());
	verify(handler.get() != NULL);

	window = state.GetWindow();
	verify(window != NULL);

	verify_success(handler->Init(window));

#ifndef SN_HIGHLIGHT_ON_LOAD
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
#endif // SN_HIGHLIGHT_ON_LOAD

	// 1st navigation should result in top anchor highlight
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "first");
	verify(handler->activeScrollable);
	verify_string(handler->activeScrollable->GetId(), "first_scrollable");

	// 2nd should move us down to lower anchor in another scrollable
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "second");
	verify(handler->activeScrollable);
	verify_string(handler->activeScrollable->GetId(), "second_scrollable");

	// 3rd navigation should do nothing
	verify(!handler->MarkNextItemInDirection(DIR_RIGHT, NULL));
	helm = handler->GetActiveLink();
	verify(helm);
	verify_string(helm->GetId(), "second");
	verify(handler->activeScrollable);
	verify_string(handler->activeScrollable->GetId(), "second_scrollable");
}
