group "spatnav.picker";

language c++;

require _SPAT_NAV_SUPPORT_;
require initialization;

include "modules/spatial_navigation/sn_handler.h";
include "modules/doc/html_doc.h";
include "modules/doc/frm_doc.h";

html {
	//! <html>
	//! <a id=a href="">A</a><br>
	//! <a id=b href="mailto:opera@opera.com">B</a><br>
	//! <a id=c href="tel:666">C</a><br>
	//! <img id=d src=""><br>
	//! </html>
}

table link_elements(const uni_char*)
{
	{ UNI_L("a") }
	{ UNI_L("b") }
	{ UNI_L("c") }
	{ UNI_L("d") }
}

test("testing picker mode")
{
	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	OpAutoPtr<OpSnHandler>handler;
	handler = OP_NEW(SnHandler, ());
	verify(handler.get() != NULL);

	Window* window = doc->GetWindow();
	verify(window != NULL);

	verify(handler->Init(window) == OpStatus::OK);

	// Set up a picker mode filter
	SnPickerModeFilter picker_filter;
	handler->SetNavigationFilter(&picker_filter, TRUE, TRUE);
	verify(handler->GetNavigationFilter() == &picker_filter);

	// check that it finds all navigatable elements
	iterate (link_elem) from link_elements
	{
		verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL));

		HTML_Element* helm = handler->GetActiveLink();
		verify(helm != NULL);
		verify(helm->GetId());
		verify(uni_strcmp(helm->GetId(), link_elem) == 0);
	}

	// Make sure it doesn't find anything else
	verify(handler->MarkNextItemInDirection(DIR_DOWN, NULL) == FALSE);
}
