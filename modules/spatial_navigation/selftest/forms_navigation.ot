group "spatnav.forms";

require _SPAT_NAV_SUPPORT_;
require initialization;

language c++;

include "modules/spatial_navigation/sn_handler.h";
include "modules/doc/html_doc.h";
include "modules/doc/frm_doc.h";

html {
	//! <html>
	//! <input type="text" name="Inputfield" size="10" maxlength="10">
	//! <br>
	//! <input type="button" value="button" name="Button">
	//! <br>

	//! <input type="checkbox" name="Checkbox" value="1">
	//! <input type="checkbox" name="Checkbox" value="2">
	//! <br>

	//! <input type="radio" name="Radiobutton" value="1">
	//! <input type="radio" name="Radiobutton" value="2">
	//! <br>

	//! <select name="Field" size="1">
	//! <option value="1111">1111 </option>
	//! <option value="2222">2222 </option>
	//! <option value="3333">3333 </option>
	//! </select>
	//! <br>

	//! <select name="Selectlist" size="2" multiple="multiple">
	//! <option value="1111">1111 </option>
	//! <option value="2222">2222 </option>
	//! <option value="3333">3333 </option>
	//! </select>
	//! <br>

	//! <textarea name="Textarea" rows="5" cols="10"></textarea>
	//! </hmtl>
}

table form_elements(const uni_char*)
{
	{ UNI_L("Button") }
	{ UNI_L("Checkbox") }
	{ UNI_L("Radiobutton") }
	{ UNI_L("Field") }
	{ UNI_L("Selectlist") }
	{ UNI_L("Textarea") }
}

test("Forms navigation")
{
#ifdef _SPAT_NAV_SUPPORT_
	// Init
	FramesDocument* doc = state.doc;
	verify(doc != NULL);

	OpAutoPtr<OpSnHandler>handler;
	handler = OP_NEW(SnHandler, ());
	verify(handler.get() != NULL);

	Window* window = doc->GetWindow();
	verify(window != NULL);

	verify(handler->Init(window) == OpStatus::OK);
	handler->SetNavigationMode(OpSnHandler::NavigateForms);
	verify(handler->GetNavigationMode() == OpSnHandler::NavigateForms);

	// Get first form element
# ifndef SN_HIGHLIGHT_ON_LOAD
	verify(handler->MarkNextItemInDirection(270, NULL));
# endif // SN_HIGHLIGHT_ON_LOAD

	FramesDocument* frmDoc = (FramesDocument*)handler->GetActiveFrame();
	verify(frmDoc != NULL);
	HTML_Document* htmlDoc= frmDoc->GetHtmlDocument();
	verify(htmlDoc != NULL);

	HTML_Element* helm = handler->GetActiveLink();
	verify(helm != NULL);
	verify(uni_strcmp(helm->GetName(), UNI_L("Inputfield")) == 0);
	verify(helm == htmlDoc->GetNavigationElement());
	
	// Check focusing and unfocusing of input element
	verify(handler->FocusCurrentForm());
	verify(helm == htmlDoc->GetFocusedElement());

	verify(handler->UnfocusCurrentForm());
	verify(helm == htmlDoc->GetNavigationElement());

	HTML_Element* previous = NULL;

	// Check that we can navigate to the other elements
	iterate (input_elem) from form_elements
	{
		verify(handler->MarkNextItemInDirection(270, NULL));
		HTML_Element* helm = handler->GetActiveLink();

		if(helm == previous)
		{
			// We probably scrolled, spatnav down once again
			verify(handler->MarkNextItemInDirection(270, NULL));
			helm = handler->GetActiveLink();		
		}

		previous = helm;

		verify(helm != NULL);
		verify(helm == htmlDoc->GetNavigationElement() || helm == htmlDoc->GetFocusedElement());
		verify(uni_strcmp(helm->GetName(), input_elem) == 0);
	}

	// Should find no more links now
	// verify(handler->MarkNextItemInDirection(270, NULL) == FALSE);
#endif // _SPAT_NAV_SUPPORT_
}
