/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2011-2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
*/

group "Unique OpRequests";
require init;
language c++;

include "modules/network/op_url.h";
include "modules/network/op_request.h";
include "modules/network/op_response.h";
include "modules/network/network.h";
include "modules/locale/locale-enum.h";

global {
	OpRequest *singleRequest;

	class RequestListener : public OpRequestListener
	{
	public:
		void OnRequestFailed(OpRequest *req, OpResponse *res, Str::LocaleString error)
		{
			ST_failed("Request failed");
		}

		void OnResponseFinished(OpRequest *req, OpResponse *response)
		{
			if (response->GetResource())
				ST_passed();
			else
				ST_failed("Should get a resource object for the response");
		}
	};

	RequestListener *requestListener = NULL;
}

setup
{
	requestListener = OP_NEW(RequestListener, ());
	singleRequest = NULL;
}

exit
{
	OP_DELETE(requestListener);
}

test("Initialized")
{
	verify(requestListener != NULL);
}

test("Unique OpRequest creation.")
	require success "Initialized";
{
	OpURL test_url = OpURL::Make("http://t/resources/httpstatuscodes/200.php");
	OpRequest::Make(singleRequest, requestListener, test_url, 0);
	singleRequest->SetHTTPMethod(HTTP_Put);
	OP_DELETE(singleRequest);
	OpRequest::Make(singleRequest, requestListener, test_url, 0);
	singleRequest->SetHTTPMethod(HTTP_Post);
	OP_DELETE(singleRequest);
	OpRequest::Make(singleRequest, requestListener, test_url, 0);
	singleRequest->SetCustomHTTPMethod("TEST");
	OP_DELETE(singleRequest);
	OpRequest::Make(singleRequest, requestListener, test_url, 0);
	OP_DELETE(singleRequest);
}

