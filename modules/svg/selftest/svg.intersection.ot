/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 1995-2006 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
*/

group "svg.intersection";

require SVG_SUPPORT;
require init;
require SVG_FULL_11;

language ecmascript;

xml
{
//! <svg xmlns="http://www.w3.org/2000/svg" 
//! 	 xmlns:xlink="http://www.w3.org/1999/xlink" 
//! 	 viewBox="0 0 100 100" 
//! 	 width="100" 
//! 	 height="100" 
//! 	 id="svg-root">
//! 	<circle id="c1" cx="40" cy="40" r="10" fill="blue" stroke="lime"/>
//! 	<circle id="c2" cx="10" cy="50" r="10" fill="red" stroke="lime"/>
//! 	<circle id="c3" cx="20" cy="20" r="20" fill="green" stroke="lime"/>
//! 	<line id="l1" x1="5" y1="5" x2="40" y2="20" stroke="black"/>
//! 	<line id="l2" x1="20" y1="20" x2="40" y2="30" stroke="red"/>
//!
//! 	<rect id="r" x="10" y="10" width="50" height="50" fill="none" stroke="red"/>
//!
//!		<circle id="c4" cx="80" cy="50" r="10" fill="yellow"/>
//! </svg>
}

test("Test checkIntersection")
{
	var root = document.getElementById("svg-root");
	var rect = root.createSVGRect();
	rect.x = 10;
	rect.y = 10;
	rect.width = 50;
	rect.height = 50;
	
	verify(root.checkIntersection(document.getElementById("c1"), rect));
	verify(root.checkIntersection(document.getElementById("c2"), rect));
	verify(root.checkIntersection(document.getElementById("c3"), rect));
	verify(root.checkIntersection(document.getElementById("l1"), rect));
	verify(root.checkIntersection(document.getElementById("l2"), rect));
	verify(root.checkIntersection(document.getElementById("r"), rect));
	verify(!root.checkIntersection(document.getElementById("c4"), rect));
}

test("Test getIntersectionList")
{
	var root = document.getElementById("svg-root");
	var rect = root.createSVGRect();
	rect.x = 10;
	rect.y = 10;
	rect.width = 50;
	rect.height = 50;
	
	var list = root.getIntersectionList(rect, null);
	//verify(list.length == 6);
	var arraylist = new Array();
	for(var i = 0; i < list.length; i++)
	{
		//opera.postError("Element " + i + ": " + list.item(i) + " id: " + (list.item(i)?list.item(i).id:"."));
		if(list.item(i) && list.item(i).id)
			arraylist[list.item(i).id] = list.item(i);
	}
	
	verify(arraylist["c1"]);
	verify(arraylist["c2"]);
	verify(arraylist["c3"]);
	verify(arraylist["l1"]);
	verify(arraylist["l2"]);
	verify(arraylist["r"]);
	verify(!arraylist["c4"]);
}

test("Test getIntersectionList with array syntax")
{
	var root = document.getElementById("svg-root");
	var rect = root.createSVGRect();
	rect.x = 10;
	rect.y = 10;
	rect.width = 50;
	rect.height = 50;
	
	var list = root.getIntersectionList(rect, null);
	//verify(list.length == 6);
	var arraylist = new Array();
	for(var i = 0; i < list.length; i++)
	{
		if(list[i] && list[i].id)
			arraylist[list[i].id] = list[i];
	}
	
	verify(arraylist["c1"]);
	verify(arraylist["c2"]);
	verify(arraylist["c3"]);
	verify(arraylist["l1"]);
	verify(arraylist["l2"]);
	verify(arraylist["r"]);
	verify(!arraylist["c4"]);
}

test("Test checkEnclosure")
{
	var root = document.getElementById("svg-root");
	var rect = root.createSVGRect();
	rect.x = 10;
	rect.y = 10;
	rect.width = 50;
	rect.height = 50;
	
	verify(root.checkEnclosure(document.getElementById("c1"), rect));
	verify(!root.checkEnclosure(document.getElementById("c2"), rect));
	verify(!root.checkEnclosure(document.getElementById("c3"), rect));
	verify(!root.checkEnclosure(document.getElementById("l1"), rect));
	verify(root.checkEnclosure(document.getElementById("l2"), rect));
	verify(!root.checkEnclosure(document.getElementById("r"), rect));
	verify(!root.checkEnclosure(document.getElementById("c4"), rect));
}

test("Test getEnclosureList")
{
	var root = document.getElementById("svg-root");
	var rect = root.createSVGRect();
	rect.x = 10;
	rect.y = 10;
	rect.width = 50;
	rect.height = 50;
	
	var list = root.getEnclosureList(rect, null);
	//verify(list.length == 3);
	var arraylist = new Array();
	for(var i = 0; i < list.length; i++)
	{
		opera.postError("Element " + i + ": " + list.item(i) + " id: " + (list.item(i)?list.item(i).id:"."));
		if(list.item(i) && list.item(i).id)
			arraylist[list.item(i).id] = list.item(i);
	}
	
	verify(arraylist["c1"]);
	verify(!arraylist["c2"]);
	verify(!arraylist["c3"]);
	verify(!arraylist["l1"]);
	verify(arraylist["l2"]);
	verify(!arraylist["r"]);
	verify(!arraylist["c4"]);
}
