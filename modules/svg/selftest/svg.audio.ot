// -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
group "svg.audio";
require init;
require SVG_SUPPORT;
require SVG_SUPPORT_MEDIA;

language c++;

include "modules/svg/src/SVGManagerImpl.h";
include "modules/svg/src/SVGTimedElementContext.h";
include "modules/svg/src/svgmediamanager.h";
include "modules/media/mediaplayer.h";

global
{
}

svg {
//! <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
//!   <!-- Nine seconds of silence: -->
//!   <audio id="audio" xlink:href="data:audio/ogg;base64,T2dnUwACAAAAAAAAAABtcxByAAAAAE0o5EUBHgF2b3JiaXMAAAAAAkAfAAAAAAAASFgAAAAAAACZ
//! AU9nZ1MAAAAAAAAAAAAAbXMQcgEAAAD0OjKcDDr/////////////XQN2b3JiaXMqAAAAWGlwaC5P
//! cmcgbGliVm9yYmlzIEkgMjAxMDAzMjUgKEV2ZXJ5d2hlcmUpAAAAAAEFdm9yYmlzEUJDVgEAAAEA
//! DFIUISUZU0pjCJVSUikFHWNQW0cdY9Q5RiFkEFOISRmle08qlVhKyBFSWClFHVNMU0mVUpYpRR1j
//! FFNIIVPWMWWhcxRLhkkJJWxNrnQWS+iZY5YxRh1jzlpKnWPWMUUdY1JSSaFzGDpmJWQUOkbF6GJ8
//! MDqVokIovsfeUukthYpbir3XGlPrLYQYS2nBCGFz7bXV3EpqxRhjjDHGxeJTKILQkFUAAAEAAEAE
//! AUJDVgEACgAAwlAMRVGA0JBVAEAGAIAAFEVxFMdxHEeSJMsCQkNWAQBAAAACAAAojuEokiNJkmRZ
//! lmVZlqZ5lqi5qi/7ri7rru3qug6EhqwEAMgAABglHnUOQmmMSBAp5qQYY4QQQggNgUUVc9BaCK5z
//! UErMEFjOIOWkQmA5ZBCDjIEHFULKOQcidUopBiW4VkLGHBAaskIACM0AMEgSIGkaIGkaAAAAAAAA
//! AEieBmieCGieCAAAAAAAAACS5gGa6AGa6AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIHke4Iki4IkiAAAAAAAAAGiiCHie
//! CYimCQAAAAAAAACaKAKeKQKiaQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIHke4Iki4IkiAAAAAAAAAGiiCIimCXiiCQAA
//! AAAAAACaKAKiaQKe6QEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAgAAAhwAAAIsBAKDVkRAMQJADgcR5IAAMBxHMsCAADHcSwLAAAsy9I0AACwLEvTAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE
//! AAAMOAAABJhQBgoNWQkARAEAGAxF0wCWBbAsgKYBNA3geQDRA5gmABAAAFDgAAAQYIOmxOIAhYas
//! BACiAAAMiuJIluV58DxNE0V4nqaJIkTT80QRpul5ogjV9DzThKp6nmnCdUXRNIEomqYAAIACBwCA
//! ABs0JRYHKDRkJQAQEgBgUBRJ8jzPE0XTVFVVhed5niiKommqquvC8zxPFEXRNFXVdSGKnmeapqmq
//! ruu6EEXPM03TVFXXdV2YpiiapmmqquvKMkxTFE3TNFXVdWUZqiqKpmmaquq6sgxE0TRNU1VdV5aB
//! KJqmqrqu68oyEEXTVFVXdV1ZBqapqqrqurIrywDVVFXXlWVZBqiq67quLMs2QFVd13Vl2ZYBruu6
//! sizLtg3AdWVZlm1bAADAgQMAQIARdJJRZRE2mnDhASg0ZEUAEAUAABijlGJKGcYkhBJCxJiEUEKo
//! pJRSUikVhBJKKqWCUEJIoWRSUkqplApCKSWFUEEopZQQCgAAO3AAADuwEAoNWQkA5AEAEIQgxBhj
//! jEkJGWPMOecghIwx5pxzUkrGGHPOOSklY4w555yU0jnnnHNOSumcc845J6V0zjnnnJNSSumcc85J
//! KaV0zjnnpJRSOueccwIAgAocAAACbBTZnGAkqNCQlQBAKgCAwXEsy/M8TxRNU5MkTfM8zxNNVdUk
//! SdM8TxRNU1V5nueJoiiKpqryPM8TRVE0TVXluqIoiqZoqqpKdkVPFE1TVV0VoiiKpqmqrgvTFEXT
//! VFXXhSybpqq6quzCtk1TNVXVdYHrqqrryjJwXdV0VdkVAACe4AAAVGDD6ggnRWOBhYasBAAyAAAI
//! QhBSSiGklEJIKYWQUgohAQAAAw4AAAEmlIFCQ1YCAKkAAAAhUkoppZRSIqWklFJKKaVUzEkppZRS
//! SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkop
//! pZRSSimllFJKKaWUUkoppZRSSimllFJCCKEAQOwKB4CdCBtWRzgpGgssNGQlABAOAAAYgxBjEFJq
//! LcYKIaUglNJai7lWCDEGoZTWWqwxaMw5KSm1GGOMQWPOSUkpxhhrDSqFkFJrLcaaY3AthJRaizHG
//! 2oMQqrUWY6y55hyEcC2lGGvNNecghM4x1pprzj0HIXSOMdaac849CCF8zbXmWnPOQQghbO0155xz
//! DkIIIXzPQecadPBBCOFzzTnnnAsAMHlwAIBKsHGGlaSzwtHgQkNWAgC5AQCEMUox5pxz0EEIIYQQ
//! UmoZY8w5CCGUUkoppaSUMsaYc9BBCCGEUkpJqXXOOecghFBKKaWUklLKmHPOQQihlFJKKSWl1Dnn
//! IIQQQimllFJKSqlzzkEIIYRSSimllNRSCB2EEEIppZRSSikppZQ6ByGEUkoppZRSUksthRBCKKWU
//! UkoppaSUUgohhFJKKaWUUkppqaUUQiillFJKKaWU0lJKKaVSSimllFJKKSmlllJLpZRSSimllJJK
//! SimllEoppZRSSimllJRaaimVUkoppZRSSikptdRSSqmUUkoppZRSUmoptZRaKamUUkoppaSUUkop
//! pVJKKaWUUkppLbWUWmsplVJKKaWU1FpqLbWUUiqllFJKKaUAAKADBwCAACMqLcROM648AkcUMkxA
//! AQAAIAAgwAQQGCAoGIUgQBgBAQAAAAAAAYAPAICkAAiIiGbO4AAhQWGBocHhASICAAAQQAAAAAAA
//! AAAAAAFPZ2dTAAAA/gAAAAAAAG1zEHICAAAAPD4IHf8BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
//! AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
//! AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
//! AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
//! AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
//! AQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
//! AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPZ2dTAAQ/GQEAAAAAAG1zEHIDAAAAwZOAYhwB
//! AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==" dur="3s" begin="indefinite" repeatCount="2"/>
//! </svg>
}

test("Start playing audio")
	language ecmascript;
	async;
{
	var audio = document.getElementById("audio");
	var id=setTimeout(function() { ST_failed("Timed out"); }, 5000);
	if(!id)
		ST_failed("Failed to set timeout");

	audio.addEventListener("repeatEvent", function() {
		setTimeout(function() { ST_passed(); clearTimeout(id); }, 500);
	}, false);

	audio.beginElement();
}

test("Test repeat duration")
	require success "Start playing audio";
{
	HTML_Element* audio = find_element("audio", 1);
	verify(audio);
	SVGMediaBinding* bind = g_svg_manager_impl->GetMediaManager()->GetBinding(audio);
	verify(bind);
	MediaPlayer* player = bind->GetPlayer();
	verify(player);
	double pos = 0;

	// the position in the stream should now have been reset to 0, for looping, and in any case it
	// must be less than 3 seconds since that's the duration specified in the markup
	verify(OpStatus::IsSuccess(player->GetPosition(pos)));
	verify(pos > 0.0);
	verify(pos <= 3.0);
}
