/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2007 Opera Software AS.  All rights reserved.
**
** This file is part of the Opera web browser.	It may not be distributed
** under any circumstances.
*/
group "svg.dom";

require SVG_SUPPORT;
require SVG_DOM;
require init;

language ecmascript;

xml {
//! <?xml version="1.0" encoding="UTF-8"?>
//! <svg id="svgroot" viewBox="0 0 480 360" width="480" height="360" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
//! </svg>
};

test("SVGSVGElement.currentScale")
{
  var svgelm = document.getElementById("svgroot");

  verify(svgelm.currentScale == 1.0);
  svgelm.currentScale = 2.0;
  verify(svgelm.currentScale == 2.0);
}

test("SVGSVGElement.currentRotate")
	require SVG_TINY_12;
{
  var svgelm = document.getElementById("svgroot");

  verify(svgelm.currentRotate == 0.0);
  svgelm.currentRotate = 45.0;
  verify(svgelm.currentRotate == 45.0);
}

test("SVGPreserveAspectRatio")
	require SVG_FULL_11;
{
  var svgelm = document.getElementById("svgroot");

  var par = svgelm.preserveAspectRatio.baseVal;
  verify(par.align == SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID);
  verify(par.meetOrSlice == SVGPreserveAspectRatio.SVG_MEETORSLICE_MEET);

  par.align = SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN;
  par.meetOrSlice = SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE;
  verify(par.align == SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN);
  verify(par.meetOrSlice == SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE);
}

test("SVGLength")
	require SVG_FULL_11;
{
  var svgelm = document.getElementById("svgroot");

  var len = svgelm.width.baseVal;
  verify(Math.abs(len.value - 480.0) < 1e-6);

  len.newValueSpecifiedUnits(SVGLength.SVG_LENGTHTYPE_CM, 10.0);
  verify(Math.abs(len.valueInSpecifiedUnits - 10.0) < 1e-6);
  verify(len.unitType == SVGLength.SVG_LENGTHTYPE_CM);

  len.convertToSpecifiedUnits(SVGLength.SVG_LENGTHTYPE_MM);
  verify(Math.abs(len.valueInSpecifiedUnits - 100.0) < 1e-6);
  verify(len.unitType == SVGLength.SVG_LENGTHTYPE_MM);

  len.value = 480.0;
  verify(Math.abs(len.value - 480.0) < 1e-6);
  verify(len.unitType == SVGLength.SVG_LENGTHTYPE_NUMBER);

  len.valueAsString = "10cm";
  verify(Math.abs(len.valueInSpecifiedUnits - 10.0) < 1e-6);
  verify(len.unitType == SVGLength.SVG_LENGTHTYPE_CM);

  verify(len.valueAsString == "10cm");
}

svg {
//! <?xml version="1.0" encoding="UTF-8"?>
//! <svg viewBox="0 0 480 360" width="480" height="360" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
//!   <g stroke-dasharray="10 20 30" id="g1">
//!     <g stroke-dasharray="inherit" id="g2">
//!       <rect width="100%" height="100%" fill="lime" stroke-dasharray="40 50" id="r"/>
//!     </g>
//!   </g>
//! </svg>
};

test("getComputedStyle stroke-dasharray")
{
	verify(getComputedStyle(document.getElementById('g1'), null).strokeDasharray == "10 20 30 10 20 30");
	verify(getComputedStyle(document.getElementById('g2'), null).strokeDasharray == "10 20 30 10 20 30");
	verify(getComputedStyle(document.getElementById('r'), null).strokeDasharray == "40 50");
}

svg {
//! <?xml version="1.0" encoding="UTF-8"?>
//! <svg xmlns="http://www.w3.org/2000/svg" style="font: 20px Ahem" viewBox="0 0 200 100" width="300" height="150">
//!   <g font-size="2em">
//!     <rect x="0" y="0" width="2em" height="3ex" />
//!     <rect x="0" y="0" width="32%" height="1.5rem" />
//!   </g>
//! </svg>
};

test("Relative lengths resolving and conversion")
{
	var rects = document.getElementsByTagName('rect');
	var rect_1_width = rects[0].width.baseVal;
	var rect_1_height = rects[0].height.baseVal;
	var rect_2_width = rects[1].width.baseVal;
	var rect_2_height = rects[1].height.baseVal;

	verify(rect_1_width.value == 80); // 2em = 2 * 40px
	verify(rect_1_height.value == 96); // 3ex = 3 * 32px (ex height for 40px Ahem)
	verify(rect_2_width.value == 64); // 32% from 200 viewport width
	verify(rect_2_height.value == 30); // 1.5rem = 1.5 * 20px

	rect_1_width.convertToSpecifiedUnits(rect_1_width.SVG_LENGTHTYPE_PERCENTAGE);
	rect_1_height.convertToSpecifiedUnits(rect_1_height.SVG_LENGTHTYPE_REMS);
	rect_2_width.convertToSpecifiedUnits(rect_2_width.SVG_LENGTHTYPE_EXS);
	rect_2_height.convertToSpecifiedUnits(rect_2_height.SVG_LENGTHTYPE_EMS);

	verify(Math.abs(rect_1_width.valueInSpecifiedUnits - 40) < 1e-6); // 40% of 200 is 80
	verify(Math.abs(rect_1_height.valueInSpecifiedUnits - 4.8) < 1e-6); // 4.8 * 20px = 96px
	verify(Math.abs(rect_2_width.valueInSpecifiedUnits - 2) < 1e-6); // 2 * 32px = 64px
	verify(Math.abs(rect_2_height.valueInSpecifiedUnits - 0.75) < 1e-6); // 0.75 * 40px = 30px
}
