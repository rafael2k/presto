TWEAK_SVG_FIX_BROKEN_PAINTER_ALPHA		ed

	If the OpPainter implementation is broken such that when painting
	text on a 32-bits per pixel OpBitmap the alpha channel is set to
	zero then, if this tweak is enabled, attempt to restore the alpha 
	channel from the other channels.

	Note that enabling this tweak means we have to do some extra 
	processing on the bitmaps, so it's not recommended that this
	tweak is enabled unless it's really necessary.

	If this tweak is disabled on a platform that needs this fix, it
	will mean that text in svg will be invisible when painted with the 
	OpPainter.

	Known platforms that need this tweak enabled: Windows desktop.

	Category: workaround
	Define: SVG_BROKEN_PAINTER_ALPHA
	Depends on: FEATURE_SVG

TWEAK_SVG_DOUBLE_PRECISION_ARITHMETICS		bratell

	This controls the precision of floating point arithmetics in
	SVG calculations. The default is to use single precision (the
	|float| type in C/C++) since it is faster and gives smaller
	footprint (approx. 15 KB) and is "good enough'. If turning on
	this tweak the calculations are done with double precision
	(the |double| type in C/C++). For conformance to the SVG high
	quality requirements, it's necessary to turn this tweak on
	(and implement ICC support and some more things)

	Category: setting, performance, footprint
	Define: SVG_DOUBLE_PRECISION_FLOATS
	Depends on: FEATURE_SVG
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_SVG_RENDERING_TIMESLICE_MS		ed

	This controls how long the svg rendering stage can run before returning
	to the main loop. 

	Note that this timeslice limit is approximate, factors outside the svg 
	module control, such as time spent in a libvega function call, may affect
	how well this approximate limit holds. In general it should mean that
	control is returned to the main loop more often.

	If the value set is less than or equal to 0 it means this tweak is disabled,
	and that svg may spend any amount of time in it's function calls before 
	returning control to the main loop.

	It is recommended that platforms set this tweak to NO.

	Category: setting, performance
	Define: SVG_RENDERING_TIMESLICE_MS
	Value: 100
	Depends on: FEATURE_SVG
	Value for tv: 0
	Value for mini: 2000
	Disabled for: desktop, smartphone, minimal

TWEAK_SVG_ZOOM_IN_KEYMASK			ed

	a mask of modifier keys required to trigger zoom in on mousedown in an svg.
	The Adobe SVG plugin uses ctrl for zooming in, but the default value for
	TWEAK_PAN_KEYMASK is ctrl. Avoid the conflict by making sure that different
	modifiers are used for TWEAK_PAN_KEYMASK and TWEAK_SVG_ZOOM_IN/OUT_KEYMASK.

	Category: setting
	Define: SVG_ZOOM_IN_KEYMASK
	Value: SHIFTKEY_CTRL
	Depends on: FEATURE_SVG
	Disabled for: desktop, smartphone, tv, minimal, mini
  
TWEAK_SVG_ZOOM_OUT_KEYMASK			ed

	a mask of modifier keys required to trigger zoom out on mousedown in an svg.
	The Adobe SVG plugin uses ctrl+shift for zooming out, but the default value for
	TWEAK_PAN_KEYMASK is ctrl. Avoid the conflict by making sure that different
	modifiers are used for TWEAK_PAN_KEYMASK and TWEAK_SVG_ZOOM_IN/OUT_KEYMASK.

	Category: setting
	Define: SVG_ZOOM_OUT_KEYMASK
	Value: SHIFTKEY_CTRL | SHIFTKEY_SHIFT
	Depends on: FEATURE_SVG
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_SVG_PAN_KEYMASK				ed

	a mask of modifier keys required to trigger pan on mousedown in an svg.
	The Adobe SVG plugin uses alt for panning, but the default value for
	TWEAK_PAN_KEYMASK is ctrl. For consistency it is recommended that 
	SVG_PAN_KEYMASK be defined to PAN_KEYMASK if FEATURE_PAN is enabled.

	Category: setting
	Define: SVG_PAN_KEYMASK
	Value: SHIFTKEY_ALT
	Depends on: FEATURE_SVG
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_SVG_LOG_ERRORS				bratell

	Enables the svg module to output messages to console. This is
	mostly useful for SVG developers who might want to know why a
	certain SVG doesn't display as it should. If you have CSS errors
	enabled, then you probably want SVG errors enables and the other
	way around.

	Enabling this cost a small amount of footprint, but it won't
	affect the processing of error free SVG images.

	Category   : setting
	Define     : SVG_LOG_ERRORS
	Depends on : FEATURE_SVG, FEATURE_CONSOLE
	Enabled for: desktop, smartphone, tv, mini
	Disabled for: minimal

TWEAK_SVG_CACHE_BITMAPS				ed

	The maximum number of cached (rendered) bitmaps in svg.
	This determines the maximum number of concurrently animated svg:s that 
	can be displayed on screen.
	
	Note that the cache size is also limited by a maximum size in memory,
	which can be set via the SVGRAMCacheSize preference.

	Category   : performance, memory
	Define	   : SVG_CACHED_BITMAPS_MAX
	Value	   : 64
	Depends on : FEATURE_SVG
	Value for smartphone: 64
	Value for tv: 64
	Value for minimal: 24
	Disabled for: desktop, mini

TWEAK_SVG_DETECT_SUSPEND				davve

	Normally, the animation engine will compute the animation
	intervals for the suspended period at the point when it is
	unsuspended. This can cause long computation times, especially
	for animations with complex time dependencies, like time
	loops.

	This tweak sets a maximum lag threshold in milliseconds.  Lag
	is defined as the difference in time between what the
	animation expected to be called back and when it really got a
	call back.

	Lag longer than a certain threshold is handled as it was
	`paused' during that time.

	Category   : workaround
	Define	   : SVG_MAX_ANIMATION_LAG
	Value	   : 10000
	Depends on : FEATURE_SVG
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_SVG_DISABLE_SVG_DRAGGING			mareka

	Disable panning for SVGs.

	Category   : workaround
	Define	   : SVG_DISABLE_SVG_DRAGGING
	Depends on : FEATURE_SVG
	Disabled for : desktop, tv, minimal, smartphone
	Enabled for : mini

TWEAK_SVG_SHARED_BLIT_BITMAP			deprecated

	The default behavior is to let the SVG main render target be a
	bitmap render target, and just use that directly when blitting
	- but only when FEATURE_VEGA_OPPAINTER is enabled - otherwise
	the result is always copied to a temporary bitmap which is
	then blitted (like the behavior with this tweak disabled).

TWEAK_SVG_THROTTLING_FPS_HIGH		pstanek

	If enabled, controls the maximum frame rate of SVG animations (both SMIL and script-driven).
	Animations with higher FPS will be throttled.
	Throttling is turned on/off automatically based on core load checks performed periodically.
	A value less than or equal to 0 disables throttling.

	Category   : performance
	Define     : SVG_THROTTLING_FPS_HIGH
	Depends on : FEATURE_SVG
	Value      : 0
	Value for smartphone: 18
	Value for desktop: 20
	Disabled for : tv, minimal, mini
	
TWEAK_SVG_THROTTLING_FPS_LOW		pstanek

	Controls the minimum frame rate SVG animations will be throttled to if necessary.
	A value less than or equal to 0 are forced to 1.
	When not defined, the throttling frame rate will only be controlled by SVG_THROTTLING_FPS_HIGH

	Category   : performance
	Define     : SVG_THROTTLING_FPS_LOW
	Depends on : FEATURE_SVG
	Value      : 1
	Value for smartphone: 2
	Value for desktop : 5
	Disabled for : tv, minimal, mini

TWEAK_SVG_CLIPRECT_TOLERANCE				fs

	When performing clipping, a simple rectangle will be converted
	into a rectangular clip (instead of a stencil), if the
	rectangle is sufficiently aligned to the device-pixel
	grid. This tweak defines the error allowed when doing this
	simplification. The value defines the upper bound on the
	deviation that is allowed, i.e. something like:

		  deviation < 1 / value

	Use of stencils can be costly - both performance and
	memory-wise, so reducing this value can have the effect,
	depending on the content, of increasing performance and
	decreasing (peak) memory usage.

	Category   : performance, memory
	Define	   : SVG_CLIPRECT_TOLERANCE
	Value	   : 32
	Depends on : FEATURE_SVG
	Value for smartphone: 4
	Value for tv: 1
	Value for minimal: 1
	Value for mini: 32
	Disabled for: desktop

TWEAK_SVG_FIX_POINT		deprecated

	Always using floats.
