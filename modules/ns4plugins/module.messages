MSG_PLUGIN_ECMASCRIPT_RESTART                     hela

	No description. Please move and document this message.

	Depends on: FEATURE_PLUGIN

MSG_PLUGIN_CALL                                   hela

	When Opera wants to call into one of the plugin's NPP_* functions, it
	is handled by posting a MSG_PLUGIN_CALL to Opera's message loop and
	it's not until that message is processed that the actual call to the
	NPP_* function is made. 
	
	The reason for this delayed dispatch is because it's not safe to
	make NPP_* calls from arbitrary locations in the Opera code.
	Suppose Opera has a pointer to some HTML element or JavaScript object
	stored as a local variable on the stack and then Opera makes a NPP_*
	call directly, then there is no guarantee that those local variable
	pointers are still pointing to valid objects after the NPP_* call.
	
	For example, a NPP_* call can trigger scripts inside the plugin
	itself (think ActionScript running inside Flash) and those scripts
	in turn can call back into the browser using NPN_Invoke() to execute
	JavaScript code inside the page where the plugin is embedded. This
	Javascript can in turn delete elements from the DOM, it can even
	remove the embedded plugin element itself. A concrete example is when
	the function EmbedContent::ShowEmbed() needs to call NPP_NewStream(),
	if it had called NPP_NewStream() directly from inside the function
	EmbedContent::Showembed(), then it could not be sure afterwards
	whether the "EmbedContent" object was still in the DOM or not.
	
	On the other hand, NPP_* calls are made from the message loop, the 
	stack is shallow and there are no assumptions about local variables 
	holding pointers directly to elements in the DOM etc.
		
	Parameter 1 (wParam) PluginMsgStruct pointer specifying function, plugin instance, stream id etc.
	Parameter 2 (lParam) not used.
	
	When this message is received by the ns4plugins module, it calls the
	function and parameters given by wParam.

	Depends on: FEATURE_PLUGIN

MSG_PLUGIN_CALL_ASYNC                             jhoff

	Used for the implementation of NPN_PluginThreadAsyncCall.
	Parameter 1 (wParam) specifies the plugin instance (NPP).
	Parameter 2 (lParam) provides a function pointer and a parameter to
	that function. These are placed in the struct PluginAsyncCall.

	When this message is received by the ns4plugins module, it calls the
	function and parameter given by lParam. If the plugin instance does
	not exist anymore, it is simply ignored.

	Depends on: FEATURE_PLUGIN

