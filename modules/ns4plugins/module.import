API_ESUTILS_SYNC_INTERFACE                      jl

        Used to implement the script execution parts of the extended
        plugin API.

        Import if: _PLUGIN_SUPPORT_

API_ESUTILS_SYNC_EVAL                           jl

        Used to implement the script evaluation parts of the extended
        plugin API's scripting support.

        Import if: _PLUGIN_SUPPORT_

API_ESUTILS_SYNC_CALL                           jl

        Used to implement the function calling parts of the extended
        plugin API's scripting support.

        Import if: _PLUGIN_SUPPORT_

API_ESUTILS_SYNC_PROPERTIES                     jl

        Used to implement the property access parts of the extended
        plugin API's scripting support.

        Import if: _PLUGIN_SUPPORT_

API_PI_OPSYSTEMINFO_STATIC_PLUGIN				psmaas

		Needed to support static plug-ins.

		Import if: TWEAK_NS4P_STATIC_PLUGINS

API_URL_ALLOW_DISABLE_COMPRESS					johan_e

		Needed to disable compression of url objects loaded as plugin streams

		Import if: TWEAK_NS4P_DISABLE_HTTP_COMPRESS

API_PI_OP_THREAD_TOOLS							jhoff

		Needed for the implementation of NPN_PluginThreadAsyncCall.

		Import if: _PLUGIN_SUPPORT_

API_URL_PERSISTENT_CACHE_ALL_HTTP_HEADERS		hela

		Needed for persistent caching of URL::KStoreAllHeaders enabled loading.

		Import if:  _PLUGIN_SUPPORT_

API_PI_PLUGIN_EVENT						terjes

	OpPluginWindow supports new methods for generating and sending
	platform-specific events. This is an optional API only temporarily,
	until all platforms have adapted to the new way. At some point
	this code will be enabled unconditionally.

	This also makes the OpNS4PluginAdapter class available.

	A lot of code in other modules changes behavior when this API is
	imported. This enables cleaned up code for plug-in display in display,
	layout and ns4plugins.

	Import if: _PLUGIN_SUPPORT_

API_UTIL_SPLIT_FILENAME_INTO_COMPONENTS			peter

		Use SplitFilenameIntoComponentsL() in Plugin::CheckPluginName().

		Import if: TWEAK_NS4P_CHECK_PLUGIN_NAME
