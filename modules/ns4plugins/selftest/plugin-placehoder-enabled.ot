group "ns4plugins.placeholder.enabled";

require _PLUGIN_SUPPORT_;
require ON_DEMAND_PLUGIN;
require init;

include "modules/doc/frm_doc.h";
include "modules/logdoc/htm_elm.h";
include "modules/prefs/prefsmanager/collections/pc_display.h";

language c++;

global
{
	int old_demand_pref;
	int old_placeholder_pref;
	OP_STATUS oom;
}

setup
{
	old_demand_pref = g_pcdisplay->GetIntegerPref(PrefsCollectionDisplay::EnableOnDemandPlugin);
	old_placeholder_pref = g_pcdisplay->GetIntegerPref(PrefsCollectionDisplay::EnableOnDemandPluginPlaceholder);

	oom = OpStatus::OK;
	TRAP(oom, OpStatus::Ignore(g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::EnableOnDemandPlugin, TRUE)));
	TRAP(oom, OpStatus::Ignore(g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::EnableOnDemandPluginPlaceholder, TRUE)));
}

subtest testPlaceholder(HTML_Element *plugin_elm, BOOL should_have)
{
	/* Ensure EmbedContent is present. */
	state.doc->Reflow(TRUE);

	verify(plugin_elm);
	verify(plugin_elm->IsPluginPlaceholder() == should_have);
	verify((plugin_elm->GetNS4Plugin() == NULL) == should_have);
	verify(plugin_elm->GetLayoutBox());
}

html
{
	//! <html><body>
	//! <embed src="data:application/x-vnd.opera-test-plugin,content" bgcolor="#ff0000" width="200" height="200"></embed>
	//! </body></html>
}

test("On-demand plugins: Use placeholder image - embed with type")
{
	HTML_Element *embed_elm = find_element("embed");
	verify(testPlaceholder(embed_elm, TRUE));
}

html
{
	//! <html><body>
	//! <object type="application/x-vnd.opera-test-plugin" bgcolor="#ff0000" width="200" height="200"></object>
	//! </body></html>
}

test("On-demand plugins: Use placeholder image - object with type")
{
	HTML_Element *object_elm = find_element("object");
	verify(testPlaceholder(object_elm, TRUE));
}

html
{
	//! <html><body>
	//! <object type="application/x-vnd.opera-test-plugin" bgcolor="#ff0000" style="visibility:hidden"></object>
	//! </body></html>
}

test("On-demand plugins: Use placeholder image - visibility:hidden")
{
	verify(testPlaceholder(find_element("object"), FALSE));
}

html
{
	//! <html><body>
	//! <object type="application/x-vnd.opera-test-plugin" bgcolor="#ff0000" width="0"></object>
	//! </body></html>
}

test("On-demand plugins: Use placeholder image - width == 0")
{
	verify(testPlaceholder(find_element("object"), FALSE));
}

html
{
	//! <html><body>
	//! <object type="application/x-vnd.opera-test-plugin" bgcolor="#ff0000" height="0"></object>
	//! </body></html>
}

test("On-demand plugins: Use placeholder image - height == 0")
{
	verify(testPlaceholder(find_element("object"), FALSE));
}

html
{
	//! <html><body>
	//! <embed src="data:application/x-vnd.opera-test-plugin,content" bgcolor="#ff0000" width="200" height="200"></embed>
	//! </body></html>
}

test("On-demand plugins: Use placeholder text - embed with type")
{
	HTML_Element *embed_elm = find_element("embed");
	verify(testPlaceholder(embed_elm, TRUE));
}

html
{
	//! <html><body>
	//! <object type="application/x-vnd.opera-test-plugin" bgcolor="#ff0000" width="200" height="200"></object>
	//! </body></html>
}

test("On-demand plugins: Use placeholder text - object with type")
{
	HTML_Element *object_elm = find_element("object");
	verify(testPlaceholder(object_elm, TRUE));
}

exit
{
	TRAP(oom, OpStatus::Ignore(g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::EnableOnDemandPlugin, old_demand_pref)));
	TRAP(oom, OpStatus::Ignore(g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::EnableOnDemandPluginPlaceholder, old_placeholder_pref)));
}
