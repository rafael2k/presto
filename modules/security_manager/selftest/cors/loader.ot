/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "security_manager.cors.loader";
require init;
require CORS_SUPPORT;

language c++;

include "modules/security_manager/src/cors/cors_request.h";
include "modules/security_manager/src/cors/cors_loader.h";
include "modules/url/url2.h";
include "modules/url/url_man.h";

global
{
	OpCrossOrigin_Request *request = NULL;
	const uni_char *origin_url_str = NULL;
	URL origin_url;
	URL request_url;
	OpCrossOrigin_Loader *loader = NULL;
}

setup
{
	origin_url_str = UNI_L("http://www.a.com");
	origin_url = g_url_api->GetURL("http://www.a.com/path/somewhere/foo.txt", static_cast<const char *>(NULL), TRUE);
	request_url = g_url_api->GetURL("http://www.b.com/", static_cast<const char *>(NULL), TRUE);
}

exit
{
	origin_url = URL();
	request_url = URL();
}

test("Loader #1")
  language c++;
{
	verify(origin_url.IsValid());
	verify(request_url.IsValid());

	const uni_char *method = UNI_L("GET");
	BOOL with_credentials = FALSE;
	BOOL is_anon = FALSE;
	verify_success(OpCrossOrigin_Request::Make(request, origin_url, request_url, method, with_credentials, is_anon));
	verify_success(OpCrossOrigin_Loader::Make(loader, NULL, request, NULL));
}
finally
{
	OP_DELETE(loader);
	OP_DELETE(request);
	request = NULL;
}

/* Testing the loading of an OPTIONS request is not well suited for selftests; see
   CORS testsuite's preflight tests for that. */
