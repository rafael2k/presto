/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright 2008 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "security_manager.privileged_block";

require XSLT_SUPPORT;

include "modules/security_manager/include/security_manager.h";
include "modules/url/url2.h";

global {
	class AllowDOMStandard : public OpSecurityManager::PrivilegedBlock
	{
	public:
		virtual BOOL AllowOperation(OpSecurityManager::Operation op) { return op == OpSecurityManager::DOM_STANDARD; }
	};
}

test("Local privileged blocks")
{
	URL url1 = g_url_api->GetURL(UNI_L("http://www.opera.com"));
	URL url2 = g_url_api->GetURL(UNI_L("http://www.pvv.org"));
	OpSecurityContext context1(url1);
	OpSecurityContext context2(url2);
	BOOL allowed = FALSE;

	verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::DOM_STANDARD, context1, context2, allowed)));
	verify(allowed == FALSE);

	verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::XSLT_DOCUMENT, context1, context2, allowed)));
	verify(allowed == FALSE);

	{
		OpSecurityManager::PrivilegedBlock privileged;

		verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::DOM_STANDARD, context1, context2, allowed)));
		verify(allowed == TRUE);

		verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::XSLT_DOCUMENT, context1, context2, allowed)));
		verify(allowed == TRUE);

		{
			AllowDOMStandard allow_dom;

			verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::DOM_STANDARD, context1, context2, allowed)));
			verify(allowed == TRUE);

			verify(OpStatus::IsSuccess(OpSecurityManager::CheckSecurity(OpSecurityManager::XSLT_DOCUMENT, context1, context2, allowed)));
			verify(allowed == FALSE);
		}
	}
}

