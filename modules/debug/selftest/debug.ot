group "debug";

include "modules/debug/debug.h";

test("debug_leak") leakcheck;
{
	OP_NEW_DBG("debug_leak", "selftest_debug_leak");
	OP_DBG((""));
	OP_DBG(("%s", "string"));
}

test("asserts") require DEBUG_ENABLE_OPASSERT;
{
	OP_ASSERT(1);
	OP_ASSERT_MSG(1, ("%d", 1));

	// Block scope
	OP_STATIC_ASSERT(3 > 2);

	// Class scope
	struct Foobar {
		OP_STATIC_ASSERT(3 > 2);
	};
	// Unfortunatelly no way to test
	// namespace scope from selftests

	OP_ASSERT_STATUS(OpStatus::OK);
	OP_ASSERT_STATUS(OpBoolean::IS_TRUE);
	OP_CHECK_STATUS(OpStatus::OK);
	int x; // Unlikely for a stack variable to be unaligned.
	OP_ASSERT_ALIGNED(int, &x);
}

test("asserts 2")
{
	// Test for release builds, where OP_ASSERT is disabled
	// but OP_CHECK_STATUS is not.
	OP_STATUS x = OpStatus::ERR;
	OP_CHECK_STATUS(x = OpStatus::OK);
	verify(x == OpStatus::OK);
}
