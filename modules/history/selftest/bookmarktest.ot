/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.bookmarks";
require init;
require HISTORY_SUPPORT;

include "modules/history/OpHistoryModel.h";
include "modules/history/OpHistoryPage.h";

language C++;

table bookmark_samples (const uni_char *, const uni_char*, const uni_char*)
{
	{ UNI_L("http://www.little-gamers.com/comics/00001551.gif"), UNI_L("Title 1"), UNI_L("A")},
	{ UNI_L("http://xkcd.org/c230.html"),                        UNI_L("Title 2"), UNI_L("B")},
	{ UNI_L("http://www.vg.no/"),                                UNI_L("Title 3"), UNI_L("C")},
	{ UNI_L("http://db.no/"),                                    UNI_L("Title 4"), UNI_L("D")},
	{ UNI_L("http://www.adobe.com/no/"),                         UNI_L("Title 5"), UNI_L("E")},
	{ UNI_L("http://www.cafemir.no/"),                           UNI_L("Title 6"), UNI_L("F")},
	{ UNI_L("http://www.gulesider.no/tk/index.c"),               UNI_L("Title 7"), UNI_L("G")},
	{ UNI_L("http://people.opera.com/howcome/"),                 UNI_L("Title 8"), UNI_L("God")},
	{ UNI_L("http://www.ifi.uio.no"),                            UNI_L("Title 9"), UNI_L("More than one word")},
}

test("History Bookmarks")
{
    OP_STATUS status;

    // ------------------------------------------------------
    //Clear history :

    status = g_globalHistory->DeleteAllItems();
    verify(status == OpStatus::OK);

    // ------------------------------------------------------
    //Clear bookmarks :

	OpVector<HistoryPage> vector;
	g_globalHistory->GetBookmarkItems(vector);

	while(vector.GetCount())
	{
		HistoryPage * item = vector.Remove(0);

		verify(item != 0);

		OpString address;
		item->GetAddress(address);

		verify(address.HasContent());

		status = g_globalHistory->RemoveBookmark(address.CStr());

		verify(status == OpStatus::OK);
	}

	// ------------------------------------------------------
    // Check that they are gone :

	verify(vector.GetCount() == 0);
	g_globalHistory->GetBookmarkItems(vector);
	verify(vector.GetCount() == 0);

    // ------------------------------------------------------
    // Add bookmarks and nicks :

    iterate(url_name, title, nick) from bookmark_samples
		{
			HistoryPage * out_item = 0;

			status = g_globalHistory->AddBookmark(url_name, title, out_item);
			verify(status == OpStatus::OK);
			verify(out_item != 0);

			status = g_globalHistory->AddBookmarkNick(nick, *out_item);
			verify(status == OpStatus::OK);

			HistoryPage * check_item = 0;
			status = g_globalHistory->GetBookmarkByNick(nick, check_item);
			verify(status == OpStatus::OK);
			verify(check_item != 0);

			verify(out_item == check_item);
		}

	// ------------------------------------------------------
    // Change nick :

	const uni_char * url_name = UNI_L("http://db.no/");
	const uni_char * title    = UNI_L("Title 4");
	const uni_char * nick     = UNI_L("new_nick");

	HistoryPage * out_item = 0;

	status = g_globalHistory->AddBookmark(url_name, title, out_item);
	verify(status == OpStatus::OK);
	verify(out_item != 0);

	status = g_globalHistory->AddBookmarkNick(nick, *out_item);
	verify(status == OpStatus::OK);

	HistoryPage * check_item = 0;
	status = g_globalHistory->GetBookmarkByNick(nick, check_item);
	verify(status == OpStatus::OK);
	verify(check_item != 0);

	verify(out_item == check_item);

	// ------------------------------------------------------
    // Get the bookmarks :

	OpVector<HistoryPage> bookmark_vector;
	g_globalHistory->GetBookmarkItems(bookmark_vector);

	verify(bookmark_vector.GetCount() == 9);

	// ------------------------------------------------------
    // And delete them all :

	while(bookmark_vector.GetCount())
	{
		HistoryPage * item = (HistoryPage *) bookmark_vector.Remove(0);

		verify(item != 0);

		OpString address;
		item->GetAddress(address);

		status = g_globalHistory->RemoveBookmark(address.CStr());

		verify(status == OpStatus::OK);
	}

	// ------------------------------------------------------
    // Check that they are gone :

	verify(bookmark_vector.GetCount() == 0);
	g_globalHistory->GetBookmarkItems(bookmark_vector);
	verify(bookmark_vector.GetCount() == 0);
}
