/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.typed_iterate";
require init;
require DIRECT_HISTORY_SUPPORT;

include "modules/history/direct_history.h";

language C++;

table typed_strings (const uni_char *, DirectHistory::ItemType, time_t)
{
	{ UNI_L("ikke.no"),                       DirectHistory::TEXT_TYPE,     1173106132  },
	{ UNI_L("g opera"),                       DirectHistory::SEARCH_TYPE,   1173106172  }, 
	{ UNI_L("http://www.dagbladet.no/"),      DirectHistory::SELECTED_TYPE, 1172586234  }, // HIDDEN
	{ UNI_L("db.no"),                         DirectHistory::TEXT_TYPE,     1138388417  }, 
	{ UNI_L("g opera desktop"),               DirectHistory::SEARCH_TYPE,   1172479246  }, 
	{ UNI_L("http://youtube.com/"),           DirectHistory::SELECTED_TYPE, 1170861512  }, // HIDDEN 
	{ UNI_L("vg.no"),                         DirectHistory::TEXT_TYPE,     1170684169  }, 
	{ UNI_L("g super hero"),                  DirectHistory::SEARCH_TYPE,   1131017655  }, 
	{ UNI_L("http://www.spreadfirefox.com/"), DirectHistory::SELECTED_TYPE, 1146072219  }, // HIDDEN 
}

table sorted_strings (const uni_char *)
{
	{ UNI_L("g opera")                       }, 
	{ UNI_L("ikke.no")                       },
	{ UNI_L("http://www.dagbladet.no/")      }, 
	{ UNI_L("g opera desktop")               }, 
	{ UNI_L("http://youtube.com/")           }, 
	{ UNI_L("vg.no")                         }, 
	{ UNI_L("http://www.spreadfirefox.com/") }, 
	{ UNI_L("db.no")                         }, 
	{ UNI_L("g super hero")                  }, 
}

test("Typed History Iterate")
{
#ifdef SYNC_TYPED_HISTORY
	OpTypedHistorySyncLock lock;
#endif // SYNC_TYPED_HISTORY

	g_directHistory->DeleteAllItems();

    OP_STATUS status;

    // ------------------------------------------------------
    // Add items :
    iterate(text, type, time) from typed_strings
    {
        status = g_directHistory->Add(text, type, time);
		verify(OpStatus::IsSuccess(status));
    }

    // ------------------------------------------------------
    // Iterate :
	uni_char* output = g_directHistory->GetFirst();

	iterate(text) from sorted_strings
    {
		verify(output);
		verify(uni_strcmp(output, text) == 0);

		uni_char* current = g_directHistory->GetCurrent();
		verify(uni_strcmp(output, current) == 0);

		output = g_directHistory->GetNext();
	}

	verify(output == NULL);
}
