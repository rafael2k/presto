/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.findfailtest";
require init;
require HISTORY_SUPPORT;

include "modules/history/OpHistoryModel.h";
include "modules/history/OpHistoryItem.h";

language C++;

test("History Fail to Find")
{
    OP_STATUS status;

	// ------------------------------------------------------
	//Clear history :
	status = g_globalHistory->DeleteAllItems();
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Set up the info :
	OpString url_name;
	url_name.Set("http://www.ebay.com/");

	OpString title;
	title.Set("Ebay");

	time_t acc = g_timecache->CurrentTime();

	// ------------------------------------------------------
	// Add the item :
	status = g_globalHistory->Add(url_name.CStr(), title.CStr(), acc);
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Check the result (prefix one) :

	const uni_char* match_string = UNI_L("em");
	uni_char **     result       = 0;
	int             num_items    = 0;

	status = g_globalHistory->GetItems (match_string,
					    &result,
					    &num_items,
					    OpHistoryModel::ALPHABETICALLY);

	verify(status == OpStatus::OK);
	verify(num_items == 0);

	delete [] result;
	result = 0;
}
