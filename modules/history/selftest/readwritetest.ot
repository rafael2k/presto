/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.readwrite";
require init;
require HISTORY_SUPPORT;

include "modules/history/OpHistoryModel.h";
include "modules/history/OpHistoryItem.h";

include "modules/prefs/prefsmanager/collections/pc_files.h";

language C++;

test("History Read Write")
{
	OpString url_name;
	OpString title;
	time_t acc;
	OP_STATUS status;
	INT32 num_items;

	// ------------------------------------------------------
	// Clear history :
	status = g_globalHistory->DeleteAllItems();
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Add item one:

	// Set up the info :
	url_name.Set("http://www.webmonkey.com/");
	title.Set("Webmonkey: The Web Developer's Resource");
	acc = g_timecache->CurrentTime();

	// Add the item :
	status = g_globalHistory->Add(url_name.CStr(), title.CStr(), acc);
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Add item two:

	// Set up the info :
	url_name.Set("http://www.whatismyip.com/");
	title.Set("WhatIsMyIP.com");
	acc = g_timecache->CurrentTime();

	// Add the item :
	status = g_globalHistory->Add(url_name.CStr(), title.CStr(), acc);
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Add item three:

	// Set up the info :
	url_name.Set("http://www.whitehouse.gov/");
	title.Set("Welcome to the White House");
	acc = g_timecache->CurrentTime();

	// Add the item :
	status = g_globalHistory->Add(url_name.CStr(), title.CStr(), acc);
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Check that all the elements are there :
	
	num_items = g_globalHistory->GetCount();
	verify(num_items == 3);

	// ------------------------------------------------------
	// Force a save:

	status = g_globalHistory->Save(TRUE);
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Remove everything :

	status = g_globalHistory->DeleteAllItems();
	verify(status == OpStatus::OK);

	// ------------------------------------------------------
	// Check that it's gone :
	
	num_items = g_globalHistory->GetCount();
	verify(num_items == 0);

	// ------------------------------------------------------
	// Read it back in :
	OpFile file;

	// Get the filename :
	g_pcfiles->GetFileL(PrefsCollectionFiles::GlobalHistoryFile, file);
	verify(file.GetFullPath());

	if (file.GetFullPath())
	{
		// Open the file :
		status = file.Open(OPFILE_READ);
		verify(status == OpStatus::OK);

		if (OpStatus::IsSuccess(status))
		{
			// Read the file :
			status = globalHistory->Read(&file);
			verify(status == OpStatus::OK);

			// Close it :
			file.Close();
		}
	}

	// ------------------------------------------------------
	// Check that all the elements are back :
	
	num_items = g_globalHistory->GetCount();
	verify(num_items == 3);
}
