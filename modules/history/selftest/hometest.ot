/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.home";
require init;
require HISTORY_SUPPORT;

include "modules/history/OpHistoryModel.h";
include "modules/history/OpHistoryItem.h";

language C++;

table url_samples (const uni_char *)
{
	{ UNI_L("http://home.opera.com")  },
	{ UNI_L("https://home.opera.com") },
}

table string_samples (const uni_char *, int)
{
	{ UNI_L("http://home."),  1   },
	{ UNI_L("https://home."), 1   },
	{ UNI_L("home."),         2   },
}

test("History Home")
{
    OP_STATUS status;	
    
    // ------------------------------------------------------
    //Clear history :
    status = g_globalHistory->DeleteAllItems();
    verify(status == OpStatus::OK);
    
    // ------------------------------------------------------
    // Add items :
    iterate(url_string) from url_samples
    {
        status = g_globalHistory->Add(url_string, UNI_L("Opera Home"), g_timecache->CurrentTime());
	verify(status == OpStatus::OK);
    }

    // ------------------------------------------------------
    // Check the autocompletion :
    uni_char ** result = 0;
    int num_items = 0;

    iterate(input_string, num_occ) from string_samples
    {
	result       = 0;
	num_items    = 0;

	status = g_globalHistory->GetItems(input_string,
					   &result,
					   &num_items,
					   OpHistoryModel::ALPHABETICALLY);

	verify(status == OpStatus::OK);
	verify(num_items == num_occ);

	for(int i = 0; i < num_items*3; i++)
		delete [] result[i];

	delete [] result;
	result = 0;
    }
}
