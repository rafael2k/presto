/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "history.acceptable";
require init;
require HISTORY_SUPPORT;

include "modules/history/OpHistoryModel.h";

language C++;

table string_samples (const uni_char *, BOOL)
{
	{ UNI_L("http://www."),          FALSE},
	{ UNI_L("http://"),              FALSE},
	{ UNI_L("opera.com"),            FALSE},
	{ UNI_L(""),                     FALSE},
	{ UNI_L("opera"),                FALSE},
	{ UNI_L("http://www.opera.com"), TRUE},
	{ UNI_L("http://vg.no"),         TRUE},
	{ UNI_L("ftp://ftp.opera.com"),  TRUE},
}

test("History Acceptable")
{
    iterate(input_string, retval) from string_samples
	{
		OpString address;
		address.Set(input_string);

		BOOL ret = g_globalHistory->IsAcceptable(address);

		verify(ret == retval);
	}
}
