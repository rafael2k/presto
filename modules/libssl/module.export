

API_XML_DIGITAL_SIGNING					deprecated

	Use API_CRYPTO_XML_DIGITAL_SIGNING instead	

API_LIBSSL_ELGAMAL_SUPPORT					yngve

	Activates support for ElGamal encryption support

	Defines		: SSL_ELGAMAL_SUPPORT
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_DH_SUPPORT					yngve

	Activates support for Diffie-Hellman key exchange support

	Defines		: SSL_DH_SUPPORT
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_DSA_SUPPORT					yngve

	Activates support for DSA signature support

	Defines		: SSL_DSA_SUPPORT
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_DECRYPT_STREAM				yngve

	Activates SSL_Cipher's Datastream decryption API
	
	Defines		: USE_SSL_DECRYPT_STREAM
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_ENCRYPT_STREAM				yngve

	Activates SSL_Cipher's Datastream encryption API
	
	Defines		: USE_SSL_ENCRYPT_STREAM
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_PGP_CFB_MODE					yngve

	Activates SSL_Cipher's PGP CFB mode API
	
	Defines		: USE_SSL_PGP_CFB_MODE
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_ASN1_SIGNING						yngve

	Enable the ANS1 Signing functionality

	Defines		: USE_SSL_ASN1_SIGNING
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_CERTSINSTALL_CLASS			yngve

	Enables the SSL_Certificate_Installer_Base class and associated functions
	
	Defines		: USE_SSL_CERTINSTALLER
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_EXTERNAL_DIGEST_FUNCTION_SUPPORT		yngve
	This API provides the capability to add digest functions
	that are defined by externally, such as by a customer,
	without hardcoding access to these functions inside the
	libssl functions.
	
	The currently defined system requires the functions to 
	work within the OpenSSL 0.9.8 framework. The API is defined in
	libssl/external/ext_digest/register_digest_openssl.h
	
	This API also activates support code in the auth module.

	Defines		: EXTERNAL_DIGEST_API
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_VECTOR_EXTRACT_DIGESTS			yngve

	This API enables the SSL_Hash::ExtractHash and 
	SSL_Hash::ExtractDigest functions.

	Defines		: LIBSSL_VECTOR_EXTRACT_DIGESTS
	Depends on	: FEATURE_SSL

API_LIBSSL_BLOWFISH_SUPPORT					yngve

	This activates the Blowfish support in the SSL library
	Actual ifdef handling is in modules/libopeay/openssl/cryptlib.h
	
	Defines		: SSL_BLOWFISH_SUPPORT
	Depends on	: FEATURE_NATIVE_SSL
	
API_LIBSSL_PRIVATE_KEY_DECRYPT					yngve

	This activate the private key decrypt functionality
	
	Defines		: SSL_PRIVATE_KEY_DECRYPT
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_ASYNC_KEYGEN					yngve

	This activates the Asynchronous key generation functionality (and disables the blocking one)

	Defines		: LIBSSL_ENABLE_KEYGEN
	Depends on	: FEATURE_NATIVE_SSL, API_LIBSSL_CERTSINSTALL_CLASS

API_LIBSSL_CHECK_CRLS					yngve

	This activates the support for checking CRLs when establishing SSL/TLS connections
	
	Defines		: LIBSSL_ENABLE_CRL_SUPPORT
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_AUTOUPDATE					yngve

	This activates the autoupdater functionality that can be used to automatically download EV OID info and CA roots

	Defines		: LIBSSL_AUTO_UPDATE
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_SECURITY_PASSWD		yngve

	This activates the ability encrypt/decrypt data using the security password
	
	Defines		: LIBSSL_SECURITY_PASSWD
	Depends on	: FEATURE_NATIVE_SSL, API_LIBSSL_CERTSINSTALL_CLASS

API_LIBSSL_DECRYPT_WITH_SECURITY_PASSWD		yngve

	This activates the ability for non-libssl functionality to maintain security password 
	sessions and to encrypt/decrypt data using a specified password or the security password
	
	Defines		: LIBSSL_DECRYPT_WITH_SECURITY_PASSWD
	Depends on	: FEATURE_NATIVE_SSL, API_LIBSSL_CERTSINSTALL_CLASS

API_LIBSSL_RC4_256				yngve

	This activates support for the 256 bit version of RC4
	
	Defines		: LIBSSL_USE_RC4_256
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_REGISTER_LOOKUP_CERT_REPOSITORY		yngve

	Allows implementations to define extra certificate lookups for their platform,
	based on registering a SSL_External_CertRepository_Base repository handler via
	g_ssl_api->RegisterExternalCertLookupRepository function.
	
	Additionally, Opera's internal repository can be disabled, but this is should only  
	be done for shorter periods during which only special URLs are loaded.
	
	The actual implementation and API is implementated in a subclass of 
	SSL_External_CertRepository_Base depends on the crypto library. The current 
	implementation is for OpenSSL.
	
	Defines		: SSL_API_REGISTER_LOOKUP_CERT_REPOSITORY
	Depends on	: FEATURE_NATIVE_SSL

API_LIBSSL_OPENSSL_REGISTER_CUSTOM_ROOT_TABLE		yngve

	Allows implementations to define extra certificate lookups for their platform,
	based on registering table of certificates in a OpenSSL_External_Trusted_Repository_Table 
	repository handler via g_ssl_api->RegisterExternalCertLookupRepository function.
	
	Additionally, Opera's internal repository can be disabled, but this is should only  
	be done for shorter periods during which only special URLs are loaded.
	
	
	Defines		: SSL_API_OPENSSL_REGISTER_CUSTOM_ROOT_TABLE
	Depends on	: FEATURE_NATIVE_SSL, TWEAK_LIBSSL_USE_OPENSSL_CRYPTO

API_LIBSSL_USE_EXTERNAL_CLIENT_KEYMANAGER			yngve

	This API allows platform implementations to register Client certificate and private key providers,
	for example smart cards (though that support is not yet ready)

	Defines		: _SSL_USE_EXTERNAL_KEYMANAGERS_
	Depends on	: FEATURE_NATIVE_SSL, TWEAK_LIBSSL_USE_OPENSSL_CRYPTO

API_LIBSSL_READ_PKCS12			yngve

	This API allows products who enable TWEAK_LIBSSL_DISABLE_CLIENT_CERTIFICATE_INSTALLATION 
	while importing API_LIBSSL_REGISTER_LOOKUP_CERT_REPOSITORY to decode PKCS #12 formatted key 
	and certificates.
	
	Defines		: SSL_ENABLE_READ_PKCS12
	Depends on	: FEATURE_NATIVE_SSL, TWEAK_LIBSSL_USE_OPENSSL_CRYPTO
	
API_LIBSSL_URL_HANDSHAKE_STATUS	yngve

	Enable the dynamic flag URL attributes stored as g_KSSLHandshakeSent and g_KSSLHandshakeCompleted, 
	which are TRUE when a SSL handshake has been sent and when it has been completed, respectively.
	
	They are BOOLean flags, and can be set/get using url.GetAttribute and url.SetAttribute 
	functions with g_KSSLHandshakeSent or g_KSSLHandshakeCompleted as the attribute.
	
	Defines		: SSL_ENABLE_URL_HANDSHAKE_STATUS
	Depends on	: FEATURE_NATIVE_SSL
