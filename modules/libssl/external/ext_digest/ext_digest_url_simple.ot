/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2004-2006 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Yngve N. Pettersen
*/

group "libssl externaldigest url load simple";
require _NATIVE_SSL_SUPPORT_;
require EXTERNAL_DIGEST_API;
require _SSL_USE_OPENSSL_;
require _ENABLE_AUTHENTICATE;


language c++;

include "core/pch.h";

include "modules/network_selftest/urldoctestman.h";
include "modules/util/opfile/opfile.h";

global {
	extern void InitExternalTest();
	URL_DocSelfTest_Manager *extdigest_tests = NULL;

}

table filename_list (const char *) filelist "testfiles";

table url_list (const char *, const char *) 
{
  {"certotest.htm", "http://certo.opera.com/Auth/Digest/"},
}

setup 
{
	::InitExternalTest();
	extdigest_tests = OP_NEW(URL_DocSelfTest_Manager, ());
}

exit
{
	OP_DELETE(extdigest_tests);
	extdigest_tests = NULL;
}

test("Initialized")
{
	verify(extdigest_tests != NULL);
}

subtest AddSimpleTest(URL_DocSelfTest_Batch *batch, const OpStringC8 &url, URL &ref_url, const OpStringC8 &filename)
{
	verify(batch != NULL);
	verify(filename.HasContent());

	OpAutoPtr<URL_DocVerySimpleTest> test(OP_NEW(URL_DocVerySimpleTest, ()));
	verify(test.get() != NULL);

	verify(OpStatus::IsSuccess(test->Construct(url, ref_url, filename)));

	verify(batch->AddTestCase(test.release()));
}

subtest AddBatch(URL_DocSelfTest_Batch *batch)
{
	verify(batch != NULL);
	verify(extdigest_tests->AddBatch(batch));
}

subtest StartTestSet()
{
	verify(extdigest_tests->SetLastBatch());
}

subtest ConfigureATest(URL_DocSelfTest_Batch *batch, const OpStringC8 &filename, URL &ref_url)
{
	verify(batch != NULL);

	iterate(name, url) from url_list
	{
		OpString a_filename;
		verify(OpStatus::IsSuccess(a_filename.Set(filename)));

		OpFile a_file;

		verify(OpStatus::IsSuccess(a_file.Construct(a_filename)));

		OpStringC a_name(a_file.GetName());

		verify(a_name.HasContent());

		if(a_name.Compare(name) == 0)
		{
			verify(AddSimpleTest(batch, url, ref_url, filename));
		}
	}
}


subtest Setup_SingleExtDigestTest(const OpStringC8 &filename, URL &ref_url)
{
	OpAutoPtr<URL_DocSelfTest_Batch> batch(OP_NEW(URL_DocSelfTest_Batch, ()));

	verify(batch.get() != NULL);

	verify(ConfigureATest(batch.get(), filename, ref_url));

	verify(!batch->Empty());

	verify(AddBatch(batch.release()));
}

test("Load External Digest URLs") 
	require success "Initialized";
	async;
{
	URL ref_url;
	iterate(filename) from filename_list
	{
		if (!Setup_SingleExtDigestTest(filename, ref_url))
			ST_failed("Could not setup test " filename);
	}
	if (!StartTestSet())
		ST_failed("Could not start test set");
}



