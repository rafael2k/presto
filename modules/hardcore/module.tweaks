TWEAK_HC_AGGRESSIVE_ECMASCRIPT_GC			markus

	With this tweak enabled, when a document is thrown
	out from the document cache the garbage collector
	in Ecmascript will run. If a product has limited
	memory and is not having many live documents this
	tweak is recommended. If a product has many live
	documents and performance is more important than
	memory, this tweak should not be enabled.

	Define    : AGGRESSIVE_ECMASCRIPT_GC
	Category  : memory

TWEAK_HC_DEBUG_MESSAGEHANDLER				markus

	Turns on debugging of the MessageHandler class.
	Mainly prints how long it takes to handle one
	message.

	Define    : DEBUG_HC_MESSAGEHANDLER
	Depends on: FEATURE_LOCALHOST
	Category  : performance

TWEAK_HC_FREE_MESSAGE_POOL_INITIAL_SIZE         jl

        Set the number of message objects to allocate and pool during
        startup.  Setting this to the same as the pool max size will
        ensure that the pooled objects have no significant impact on
        fragmentation.  Having a filled pool from the start might also
        reduce the risk of failing to post a message due to OOM,
        something that usually isn't handled.

        Define                  : HC_FREE_MESSAGE_POOL_INITIAL_SIZE
        Category                : memory
        Value                   : 64
        Disabled for            : desktop, tv, smartphone, mini
        Value for minimal       : 16

TWEAK_HC_FREE_MESSAGE_POOL_MAX_SIZE             jl

        Set the upper limit for the number of free (unused) message
        objects to keep around in a pool for future (re)use.  The
        objects are at least 40 bytes large on 32 bit architectures
        and 68 bytes large on 64 bit architectures.

        Define                  : HC_FREE_MESSAGE_POOL_MAX_SIZE
        Category                : memory
        Value                   : 64
        Value for desktop       : 512
        Value for minimal       : 16
        Disabled for            : tv, smartphone, mini

TWEAK_HC_INIT_BLACKLIST						markus

	Makes it possible for a product to construct a list
	of modules which should not be initialized. This means
	that their InitL() function will not be run. This
	functionality is dynamically controlled by setting
	a value in the OperaInitInfo structure sent to
	Opera::InitL().

	To use the black list you must:

	1. Enable this tweak.
	2. Edit blacklist.txt (in the root of the source tree).
	   Modules to be excluded are line break separated.
	   Lines beginning with # are ignored.
	3. Set OperaInitInfo::use_black_list to TRUE at runtime.

	Define    : INIT_BLACKLIST
	Depends on: nothing
	Category  : setting

TWEAK_HC_MEM_ALLOC_INIT_SIZE			jl

        Set the minimum memory block size used by the MemoryHandler
        allocator.

        Define          : MEM_ALLOC_INIT_SIZE
        Category        : memory
        Value           : (65536-64)
        Disabled for    : desktop, tv, smartphone, minimal, mini

TWEAK_HC_MEM_MAN_DOCS_CACHE_SOFT_LIMIT_LEVEL		pstanek

	Indicates at what level (in percents) the soft limit of docs ram
	cache is placed.
	When a size of the documents stored in the cache exceeds the soft limit
	some of them are freed to go below the limit again. However
	only the documets which are not in the design mode are freed then.
	When the whole docs cache size (the hard limit - driven
	either by amount of available memory if
	PrefsCollectionNetwork::AutomaticRamCache is set or
	by PrefsCollectionCore::RamCacheDocs pref value)
	is crossed the documents are freed to go below the limit - no matter
	if they are	in design mode or not.

	Define       : MEM_MAN_DOCS_CACHE_SOFT_LIMIT_LEVEL
	Category     : memory
	Value        : 80
	Disabled for : desktop, tv, smartphone, minimal, mini

TWEAK_HC_MEM_MAN_TMP_BUF_LEN			marcusc

        The size of the buffer returned by GetTempBuf(), GetTempBuf2()
        and GetTempBufUni() in bytes.

        Define          : MEM_MAN_TMP_BUF_LEN
        Category        : memory
        Value           : 4096
        Disabled for    : desktop, tv, smartphone, minimal, mini

TWEAK_HC_MEM_MAN_TMP_BUF_2K_LEN			marcusc

        The size of the buffer returned by GetTempBuf2k() in bytes.

        Define          : MEM_MAN_TMP_BUF_2K_LEN
        Category        : memory
        Value           : 4096
        Disabled for    : desktop, tv, smartphone, minimal, mini


TWEAK_HC_MEM_STOP_LOADING_THRESHOLD	  jb

	Threshold in bytes for when document loading should be stopped
	after memory flush.  When memory is flushed, the amount of
	memory that was freed is accounted for and the document
	loading is stopped if it is less than the threshold value.

	Define	     : MEM_STOP_LOADING_THRESHOLD
	Value        : (48*1024)
	Depends on   : FEATURE_OUT_OF_MEMORY_POLLING
	Category     : memory
	Disabled for : desktop, tv, smartphone, minimal, mini

TWEAK_HC_MODULE_INIT_PROFILING               pettern

	Enable this tweak to allow profiling of Opera's startup and shutdown
	sequence. The default behaviour for this is to use the probes
	OP_PROBE_HC_INIT_MODULE and OP_PROBE_HC_DESTROY_MODULE for each module,
	where the probes are identified by the module's name and initialisation
	order. See also FEATURE_PROBETOOLS.

	If the FEATURE_PROBETOOLS is not used, or if the platform wants to use a
	different profiling tool, the platform has the possibility to define the
	following macro in the platform's systems.h:

	#define PLATFORM_HC_PROFILE_INCLUDE

	If that macro is defined, the specified file will be include as

	#include PLATFORM_HC_PROFILE_INCLUDE

	This include file (or the platform's system.h) can then define the
	following macros:

	#define HC_PROFILE_INIT_START(i, module_name)
	#define HC_PROFILE_INIT_STOP(i, module_name)
	#define HC_PROFILE_DESTROY_START(i, module_name)
	#define HC_PROFILE_DESTROY_STOP(i, module_name)

	where
	- i is an integer that has the number of the module initialisation order
	- module_name is a const char* containing the name of the module.
	These macros are called directly before resp. after the specified module
	is initialised resp. destroyed.

	If the tweak is disabled, the macros are defined to be empty so no
	additional code is needed.

	Define          : HC_MODULE_INIT_PROFILING
	Category        : setting
	Disabled for    : tv, smartphone, mini, minimal
	Enabled for     : desktop

TWEAK_HC_OPERA_MEMORY_THRESHOLD			markus

	When FEATURE_OUT_OF_MEMORY_POLLING is active
	Opera will try clearing caches etc to free
	memory when the amount of free memory on the
	Opera heap reaches this threshold.

	The threshold is set in bytes and the definition
	of free/used Opera memory in this context is unfortunately
	conditioned on platform/project defines in the
	core code, for details see: hardcore/mem/oom.cpp

	Define       : FREE_OPERA_MEMORY_THRESHOLD
	Value        : (400*1024)
	Value for tv : (1024*1024*1)
	Depends on   : FEATURE_OUT_OF_MEMORY_POLLING
	Disabled for : desktop, mini, minimal, smartphone
	Category     : memory

TWEAK_HC_PLATFORM_DEFINES_VERSION               danielb

	Enable this tweak to let the platform add the following
	macros to the platform's systems.h (with example values):

	#define VER_NUM_FORCE_STR       "9.80"
	#define VER_NUM                 10.50
	#define VER_NUM_MINOR              50
	#define VER_NUM_MAJOR           10
	#define VER_NUM_STR            "10.50"
	#define VER_NUM_STR_UNI  UNI_L("10.50")
	#define VER_NUM_INT_STR           "1050"
	#define VER_NUM_INT_STR_UNI UNI_L("1050")

	(Note: the macro VER_NUM_FORCE_STR is optional, the value is used to
	generate the User Agent string; if that macro is not defined, then
	the value of VER_NUM_STR is used instead; see also
	modules/hardcore/version.ini.)

	If this tweak is disabled, these macros are defined in the generated
	header file modules/hardcore/features/features.h and the values for
	the macros are derived from the settings OperaVersion resp.
	ForceVersion in modules/hardcore/version.ini.

	Define          : HC_PLATFORM_DEFINES_VERSION
	Category        : setting
	Disabled for    : desktop, tv, smartphone, minimal, mini
	Enabled for     : none

TWEAK_HC_SYSTEM_MEMORY_THRESHOLD			markus

	Set the threshold for when to start freeing
	memory because the amount of free system
	memory is so limited.

	Define     : FREE_SYSTEM_MEMORY_THRESHOLD
	Value      : (128*1024)
	Depends on : FEATURE_OUT_OF_MEMORY_POLLING
	Category   : memory


TWEAK_HC_DEBUG_OP_YIELD					deprecated

	The tweak defined DEBUG_OP_YIELD and enabled debugging of op_yield().
	This debugging feature is no longer supported. The method
	OperaListener::OnTimeLimitExceeded() which was called by this feature
	is no longer needed.

TWEAK_HC_DEBUG_OP_YIELD_TIME_LIMIT			deprecated

	Previously a time limit used by TWEAK_HC_DEBUG_OP_YIELD, which is
	deprecated as well.
