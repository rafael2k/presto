/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
group "WebForms2.Validation";
require init;

include "modules/forms/formmanager.h";
include "modules/forms/piforms.h";
include "modules/logdoc/htm_elm.h";

language ecmascript;

html
{
	//! <html>
	//!		<body>
	//!			<form id='myform' action='http://localhost:8080/lek.jsp' method='post'>
	//!				<textarea id="grej" pattern="Hippa*"
	//!                 autocomplete="on" autofocus required
	//!                 maxLength=100>Hipp</textarea>
	//!			</form>
	//!		</body>
	//! </html>
}

test("WebForms2.Validation.TextArea")
{
	verify(document);
	verify(document.getElementById);
	var textarea = document.getElementById("grej");
	verify(textarea);
	verify("pattern" in textarea);
	verify(textarea.pattern == "Hippa*");
	verify("value" in textarea);
	verify(textarea.value == "Hipp");
	verify("checkValidity" in textarea);
	verify(textarea.validity.valid);
	verify(!("validate" in textarea)); // This was renamed checkValidity

	textarea.pattern = "Hoppa*";
	verify(textarea.pattern == "Hoppa*");
	verify(textarea.validity.patternMismatch);
	textarea.value = "Hoppaaaaa";
	verify(textarea.validity.valid);

	textarea.value = "xxxHoppaaa";
	verify(textarea.validity.patternMismatch);

	textarea.value = "Hoppaaaxxx";
	verify(textarea.validity.patternMismatch);

	textarea.pattern = ".*";
	verify(textarea.validity.valid);

	textarea.value="";
	verify(textarea.validity.valueMissing);
}

html
{
	//! <html>
	//!		<body>
	//!			<form id='myform' action='http://localhost:8080/lek.jsp' method='post'>
	//!				<input type=tel id="grej" maxlength=5 pattern="123">
	//!			</form>
	//!		</body>
	//! </html>
}

test("WebForms2.Validation.Tel")
{
	verify(document);
	verify(document.getElementById);
	var tel = document.getElementById("grej");
	verify(tel);
	verify("pattern" in tel);
	verify(tel.pattern == "123");
	verify("value" in tel);
	verify(tel.validity.valid);
	verify(!tel.validity.patternMismatch);
	tel.value = "4";
	verify(!tel.validity.valid);
	verify(tel.validity.patternMismatch);
	tel.value = "123";
	verify(tel.validity.valid);
	verify(!tel.validity.patternMismatch);
	tel.pattern="1{3}";
	verify(!tel.validity.valid);
	verify(tel.validity.patternMismatch);
	tel.value = "111";
	verify(tel.validity.valid);
	verify(!tel.validity.patternMismatch);
	tel.value = "111111";
	verify(!tel.validity.valid);
	verify(tel.validity.tooLong);
}

html
{
	//! <html>
	//!		<body>
	//!			<form id='myform' action='http://localhost:8080/lek.jsp' method='post'>
	//!				<input type=search maxlength=5 required id="grej" pattern="123">
	//!			</form>
	//!		</body>
	//! </html>
}

test("WebForms2.Validation.Search")
{
	verify(document);
	verify(document.getElementById);
	var search = document.getElementById("grej");
	verify(search);
	verify("pattern" in search);
	verify(search.pattern == "123");
	verify("value" in search);
	verify(!search.validity.valid);
	verify(!search.validity.patternMismatch);
	verify(search.validity.valueMissing);
	verify(!search.validity.tooLong);
	search.value = "4";
	verify(!search.validity.valid);
	verify(search.validity.patternMismatch);
	search.value = "123";
	verify(search.validity.valid);
	verify(!search.validity.patternMismatch);
	search.pattern="1+";
	verify(!search.validity.valid);
	verify(search.validity.patternMismatch);
	search.value = "111111";
	verify(!search.validity.valid);
	verify(!search.validity.patternMismatch);
	verify(search.validity.tooLong);
}

html
{
	//! <html><body><form><input type="number"></form></body></html>
}
test("WebForms2.Validation.Number.Step")
{
	verify(false == 0); // Or I will have to rewrite the tests
	verify(true != 0); // Or I will have to rewrite the tests
	verify(!(false != 0)); // Or I will have to rewrite the tests
	verify(!(true == 0)); // Or I will have to rewrite the tests

	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "number");

	verify(i.validity.valid);

	i.value = 12; // default step
	verify(i.validity.valid);

	i.value = 13.5;
	verify((i.validity.stepMismatch) != 0);

	i.step = 0.5;
	verify(i.validity.valid);

	i.value = 12;
	i.step = 0.1;
	verify(i.validity.valid);

	i.step=4;
	verify(i.validity.valid);

	i.value=11;
	verify((i.validity.stepMismatch) != 0);

	i.step = 11;
	verify(i.validity.valid);

	i.step = 0.1;
	verify(i.validity.valid);

	i.value = 0.11;
	verify((i.validity.stepMismatch) != 0);

	i.min = 0.01;
	verify(i.validity.valid);

	i.min = 0;
	i.step = 0.00001;
	i.value = 0;
	verify(i.validity.valid);

	i.removeAttribute("max");
	i.max = 18;
	i.step = 0.25;
	i.value = 16.25;
	verify(i.validity.valid);

	i.value = 16.40;
	verify((i.validity.stepMismatch) != 0);

	i.min = 16.10;
	verify((i.validity.stepMismatch) != 0);

	i.min = 16.15;
	verify(i.validity.valid);

}

html
{
	//! <html><body><form><input type="range"></form></body></html>
}
test("WebForms2.Validation.Range.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "range");

	verify(i.validity.valid);

	i.value = 12; // defaut step
	verify(i.validity.valid);

	i.value = 13.5;
	verify(i.value == 14);
	verify(i.validity.valid);

	i.step = 0.5;
	verify(i.validity.valid);

	i.value = 12;
	i.step = 0.1;
	verify(i.validity.valid);

	i.step=4;
	verify(i.validity.valid);

	i.value=11;
	verify(i.value == 12);
	verify(i.validity.valid);

	i.step = 11;
	verify(i.value == 11);
	verify(i.validity.valid);

	i.step = 0.1;
	verify(i.validity.valid);

	i.value = 0.11;
	verify(i.value == 0.1);
	verify(i.validity.valid);

	i.min = 0.01;
	verify(i.validity.valid);

	i.min = 0;
	i.step = 0.00001;
	i.value = 0;
	verify(i.validity.valid);

	i.removeAttribute("max");
	i.max = 18;
	i.step = 0.25;
	i.value = 16.25;
	verify(i.validity.valid);

	i.value = 16.40;
	verify(i.value == 16.50);
	verify(i.validity.valid);

	i.min = 16.10;
	verify(i.value == 16.60);
	verify(i.validity.valid);

	i.min = 16.15;
	verify(i.value == 16.65);
	verify(i.validity.valid);

}



html
{
	//! <html><body><form><input type="date"></form></body></html>
}
test("WebForms2.Validation.Date.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "date");

	verify(i.validity.valid);

	i.value = "2001-12-12"; // default step
	verify(i.validity.valid);

	i.step = "0.981674637"; // Illegal step, use default step
	verify(i.validity.valid);

	i.step = 2;
	i.value = "1970-01-01"; // zero point
	verify(i.validity.valid);

	i.value = "1970-01-02";
	verify((i.validity.stepMismatch) != 0);

	i.min = "1970-01-02";
	verify(i.validity.valid);

	i.min = "2003-03-13";
	i.value = "2003-03-13";
	verify(i.validity.valid);

	i.value = "2003-03-15";
	verify(i.validity.valid);

	i.value = "2003-03-14";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2003-03-14";
	verify(i.validity.valid);

	i.step = 5;
	verify(i.validity.valid);

	i.value = "2003-04-03";
	verify(i.validity.valid);

	i.value = "2003-04-02";
	verify((i.validity.stepMismatch) != 0);

	i.value = "2003-04-04";
	verify((i.validity.stepMismatch) != 0);

	i.removeAttribute("min");
	i.max = "2003-04-09";
	verify(i.validity.valid);

	i.value = "2003-04-03";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2003-03-14";
	verify(i.validity.valid);
}

html
{
	//! <html><body><form><input type="week"></form></body></html>
}
test("WebForms2.Validation.Week.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "week");

	verify(i.validity.valid);

	i.value = "2001-W12"; // default step
	verify(i.validity.valid);

	i.step = "0.981674637"; // Illegal step, use default step
	verify(i.validity.valid);

	i.step = 2;
	i.value = "1970-W01"; // zero point
	verify(i.validity.valid);

	i.value = "1970-W02";
	verify((i.validity.stepMismatch) != 0);

	i.min = "1970-W02";
	verify(i.validity.valid);

	i.min = "2003-W13";
	i.value = "2003-W13";
	verify(i.validity.valid);

	i.value = "2003-W15";
	verify(i.validity.valid);

	i.value = "2003-W14";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2003-W14";
	verify(i.validity.valid);

	i.step = 5;
	verify(i.validity.valid);

	i.value = "2003-W34";
	verify(i.validity.valid);

	i.value = "2003-W33";
	verify((i.validity.stepMismatch) != 0);

	i.value = "2003-W35";
	verify((i.validity.stepMismatch) != 0);

	i.removeAttribute("min");
	i.max = "2003-W40";
	verify(i.validity.valid);

	i.value = "2003-W34";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2003-W14";
	verify(i.validity.valid);
}

html
{
	//! <html><body><form><input type="month"></form></body></html>
}
test("WebForms2.Validation.Month.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "month");

	verify(i.validity.valid);

	i.value = "2001-12"; // default step
	verify(i.validity.valid);

	i.step = "0.981674637"; // Illegal step, use default step
	verify(i.validity.valid);

	i.step = 2;
	i.value = "1970-01"; // zero point
	verify(i.validity.valid);

	i.value = "1970-02";
	verify((i.validity.stepMismatch) != 0);

	i.min = "1970-02";
	verify(i.validity.valid);

	i.min = "2004-01";
	i.value = "2004-01";
	verify(i.validity.valid);

	i.value = "2004-03";
	verify(i.validity.valid);

	i.value = "2004-12";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2004-02";
	verify(i.validity.valid);

	i.step = 5;
	verify(i.validity.valid);

	i.value = "2005-10";
	verify(i.validity.valid);

	i.value = "2005-09";
	verify((i.validity.stepMismatch) != 0);

	i.value = "2005-11";
	verify((i.validity.stepMismatch) != 0);

	i.removeAttribute("min");
	i.max = "2006-04";
	verify(i.validity.valid);

	i.value = "2005-10";
	verify((i.validity.stepMismatch) != 0);

	i.min = "2004-02";
	verify(i.validity.valid);
}

html
{
	//! <html><body><form><input type="time"></form></body></html>
}
test("WebForms2.Validation.Time.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "time");

	verify(i.validity.valid);

	i.value = "12:12";
	verify(i.validity.valid);

	i.value = "12:12:12"; // default step is 1 minute
	verify((i.validity.stepMismatch) != 0);

	i.value = "12:12:00.01";
	verify((i.validity.stepMismatch) != 0);

	i.step = 1;
	i.value = "12:12:12"; // default step is 1 minute
	verify(i.validity.valid);

	i.step = 60;
	i.max = "13:00:12.0000";
	verify(i.validity.valid);

	i.min = "12:00:00.1";
	verify((i.validity.stepMismatch) != 0);

	i.step = 0.1;
	verify(i.validity.valid);

	i.value = "12:00"; // UNDERFLOW but not ERROR_STEP_MISMATCH
	verify((i.validity.stepMismatch) == 0);
	verify((i.validity.rangeUnderflow) != 0);

	i.value = "13:20:04.6"; // OVERFLOW but not ERROR_STEP_MISMATCH
	verify((i.validity.stepMismatch) == 0);
	verify((i.validity.rangeOverflow) != 0);

	i.step = "0.437878";
	verify((i.validity.stepMismatch) != 0);
}

html
{
	//! <form><input type="email">
}
test("WebForms2.Validation.Email.Setup")
language C++;
{
	// Fake a user input of a non-ascii email address.
	HTML_Element* input = find_element("input");
	verify(input);
	FormObject* form_object = input->GetFormObject();
	verify(form_object);
	uni_char test_string[10]; // ARRAY OK bratell 2011-05-10
	uni_strcpy(test_string, UNI_L("a@-.c"));
	test_string[2] = 0xe4; // Latin small a with two dots.
	form_object->SetFormWidgetValue(test_string);
}

test("WebForms2.Validation.Email#1")
require success "WebForms2.Validation.Email.Setup";
{
	var input = document.getElementsByTagName("input")[0];
	verify(input);
	verify(input.value);
	verify(input.value == 'a@xn--4ca.c');
	verify(input.validity.valid);
}

test("WebForms2.Validation.Email#2")
language C++;
require FORMS_VALIDATE_EMAIL;
{
	uni_char test_string[10]; // ARRAY OK bratell 2011-05-11
	uni_strcpy(test_string, UNI_L("a@-.c"));
	test_string[2] = 0xe4; // Latin small a with two dots.
	verify(FormManager::IsValidEmailAddress(test_string));
}

html
{
	//! <html><body><form><input type="datetime"></form></body></html>
}
test("WebForms2.Validation.DateTime.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "datetime");

	verify(i.validity.valid);

	i.value = "1970-01-01T12:12Z";
	verify(i.validity.valid);

	i.value = "1970-01-01T12:12:12Z"; // default step is 1 minute
	verify(i.validity.stepMismatch);

	i.value = "1970-01-01T12:12:00.01Z";
	verify(i.validity.stepMismatch);

	i.step = 1;
	i.value = "1970-01-01T12:12:12Z"; // default step is 1 minute
	verify(i.validity.valid);

	i.step = 60;
	i.max = "1970-01-01T13:00:12.0000Z";
	verify(i.validity.valid);

	i.min = "1970-01-01T12:00:00.1Z";
	verify(i.validity.stepMismatch);

	i.step = 0.1;
	verify(i.validity.valid);

	i.value = "1970-01-01T12:00Z"; // UNDERFLOW but not ERROR_STEP_MISMATCH
	verify(i.validity.stepMismatch == false);
	verify(i.validity.rangeUnderflow);

	i.value = "1970-01-01T13:20:04.6Z"; // UNDERFLOW but not ERROR_STEP_MISMATCH
	verify((i.validity.stepMismatch) == 0);
	verify((i.validity.rangeOverflow) != 0);

	i.step = 0.437878;
	verify((i.validity.stepMismatch) != 0);

	i.min = "1980-03-26T23:01Z";
	i.max = "1982-02-22T03:00Z";
	i.step = 86400; // whole days
	i.value = "1980-03-27T23:01:00.00Z";
	verify(i.validity.valid);

	i.value = "1980-03-27T23:01:00.20Z";
	verify((i.validity.stepMismatch) != 0);

	i.value = "2053-12-24T23:01Z"; // Overflow
	verify((i.validity.stepMismatch) == 0);

	i.value = "2053-12-24T23:01:00.1Z";
	verify((i.validity.stepMismatch) != 0);
}

html
{
	//! <html><body><form><input type="datetime-local"></form></body></html>
}
test("WebForms2.Validation.DateTime.Step")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "datetime-local");

	verify(i.validity.valid);

	i.value = "1970-01-01T12:12";
	verify(i.validity.valid);

	i.value = "1970-01-01T12:12:12"; // default step is 1 minute
	verify(i.validity.stepMismatch);

	i.value = "1970-01-01T12:12:00.01";
	verify(i.validity.stepMismatch);

	i.step = 1;
	i.value = "1970-01-01T12:12:12"; // default step is 1 minute
	verify(i.validity.valid);

	i.step = 60;
	i.max = "1970-01-01T13:00:12.0000";
	verify(i.validity.valid);

	i.min = "1970-01-01T12:00:00.1";
	verify((i.validity.stepMismatch) != 0);

	i.step = 0.1;
	verify(i.validity.valid);

	i.value = "1970-01-01T12:00"; // UNDERFLOW but not ERROR_STEP_MISMATCH
	verify((i.validity.stepMismatch) == 0);
	verify((i.validity.rangeUnderflow) != 0);

	i.value = "1970-01-01T13:20:04.6"; // UNDERFLOW but not ERROR_STEP_MISMATCH
	verify((i.validity.stepMismatch) == 0);
	verify((i.validity.rangeOverflow) != 0);

	i.step = 0.437878;
	verify((i.validity.stepMismatch) != 0);

	i.min = "1980-03-26T23:01";
	i.max = "1982-02-22T03:00";
	i.step = 86400; // whole days
	i.value = "1980-03-27T23:01:00.00";
	verify(i.validity.valid);

	i.value = "1980-03-27T23:01:00.20";
	verify((i.validity.stepMismatch) != 0);

	i.value = "2053-12-24T23:01"; // Overflow
	verify((i.validity.stepMismatch) == 0);

	i.value = "2053-12-24T23:01:00.1";
	verify((i.validity.stepMismatch) != 0);
}

html
{
	//! <html><body><form><input type="range"></form></body></html>
}
test("WebForms2.Validation.Range.MinMax")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "range");

	i.value = 0;
	verify(i.validity.valid);

	i.value = 100;
	verify(i.validity.valid);

	i.value = 50;
	verify(i.validity.valid);

	i.value = -1;
	// Range is different from other fields! We should never accept values out of range in the slider.
	verify((i.validity.rangeUnderflow) == 0);
	verify(i.value == 0);

	i.value = 101;
	// Range is different from other fields! We should never accept values out of range in the slider.
	verify((i.validity.rangeOverflow) == 0);
	verify(i.value == 100);

	//	verify(i.min == 0); // Has an implicit min

	//	verify(i.max == 100); // Has an implicit max
}


html
{
	//! <html><body><form><input type="number"></form></body></html>
}
test("WebForms2.Validation.Number.MinMax")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);

	var i = document.forms[0][0];

	verify(i.type == "number");

	i.value = 0;
	verify(i.validity.valid);

	i.value = 100;
	verify(i.validity.valid);

	i.value = 50;
	verify(i.validity.valid);

	i.value = -1;
	verify(i.validity.valid);

	verify(i.value == -1);
	i.min = 0;
	verify (i.value == -1);

	verify((i.validity.rangeUnderflow) != 0);

	i.value = 101;
	verify(i.validity.valid);

	i.max = 100;
	verify((i.validity.rangeOverflow) != 0);

	//	verify(i.min == 0); // Has an implicit min

	//	verify(i.max == 100); // Has an implicit max
}

html
{
	//! <html><body><form><input type="checkbox" checked required>
	//! <input type="checkbox" required></form></body></html>
}
test("WebForms2.Validation.Checkbox.Required")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);
	c1 = document.forms[0][0];
	verify(document.forms[0][1]);
	c2 = document.forms[0][1];

	verify(c1.required);
	verify(c2.required);

	verify((c1.validity.valueMissing) == 0);
	verify((c2.validity.valueMissing) != 0);
}

html
{
	//! <html><body><form>
	//! <input name="one" type="radio" checked required>
	//! <input name="one" type="radio">
	//! <input name="two" type="radio" required>
	//! <input name="two" type="radio">
	//! <input name="three" type="radio" checked>
	//! <input name="three" type="radio" required>
	//! <input name="four" type="radio">
	//! <input name="four" type="radio" required>
	//! </form></body></html>
}
test("WebForms2.Validation.RadioButton.Required")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);
	one_a = document.forms[0][0];
	verify(document.forms[0][1]);
	one_b = document.forms[0][1];
	verify(document.forms[0][2]);
	two_a = document.forms[0][2];
	verify(document.forms[0][3]);
	two_b = document.forms[0][3];
	verify(document.forms[0][4]);
	three_a = document.forms[0][4];
	verify(document.forms[0][5]);
	three_b = document.forms[0][5];
	verify(document.forms[0][6]);
	four_a = document.forms[0][6];
	verify(document.forms[0][7]);
	four_b = document.forms[0][7];

	verify(one_a.required);
	verify(!one_b.required);
	verify(two_a.required);
	verify(!two_b.required);
	verify(!three_a.required);
	verify(three_b.required);
	verify(!four_a.required);
	verify(four_b.required);

	verify(!one_a.validity.valueMissing);
	verify(!one_b.validity.valueMissing);
	verify(two_a.validity.valueMissing);
	verify(!two_b.validity.valueMissing);
	verify(!three_a.validity.valueMissing);
}

test("WebForms2.Validation.RadioButton.Required.Part2")
{
	verify(!three_b.validity.valueMissing);
	verify(!four_a.validity.valueMissing);
	verify(four_b.validity.valueMissing);
}

html
{
	//! <html><body><form>
	//! <select required><option>a</option></select>
	//! </form></body></html>
}
test("WebForms2.Validation.Select.Required#1")
{
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	verify(document.forms[0][0]);
	sel = document.forms[0][0];

	verify(sel.getAttribute("required") == "");
	verify(sel.required);
	verify(!sel.validity.valueMissing);
}

html
{
	//! <select required><option value="">Placeholder</option></select>
}

test("WebForms2.Validation.Select.Required#2")
{
	var select = document.getElementsByTagName("select")[0];
	verify(select);
	verify("required" in select);
	verify(select.required === true);
	verify(select.validity.valueMissing);

	select.required = false;
	verify(select.required === false);
	verify(!select.validity.valueMissing);
}

html
{
	//! <select required><optgroup><option value="">Placeholder</option></optgroup></select>
}

test("WebForms2.Validation.Select.Required#3")
{
	var select = document.getElementsByTagName("select")[0];
	verify(select);
	verify("required" in select);
	verify(select.required === true);
	verify(!select.validity.valueMissing); // Placeholder in an optgroup isn't a placeholder.
}

html
{
	//! <select required><option></option></select>
}

test("WebForms2.Validation.Select.Required#4")
{
	// Making sure a completely empty value isn't misinterpreted as OOM.
	var select = document.getElementsByTagName("select")[0];
	verify(select);
	verify("required" in select);
	verify(select.required === true);
	verify(select.validity.valueMissing);
}

html
{
	//! <html><body><form><input></form></body></html>
}

test("WebForms2.Validation.CustomError.Reset")
{
	// Reset shouldn't affect the custom error bit
	verify(document);
	verify(document.forms);
	verify(document.forms[0]);
	var f = document.forms[0];
	verify(f[0]);
	var input = f[0];
	verify(input.validity.valid);
	input.setCustomValidity("Hej");
	verify(input.validity.customError);
	verify(input.validationMessage == "Hej");
	f.reset();
	verify(input.validity.customError);
	verify(input.validationMessage == "Hej");
	input.setCustomValidity("");
	verify(input.validity.valid);
	f.reset();
	verify(input.validity.valid);
}

html
{
	//! <html><body><form><input type="radio" name="hej">
	//! <input required type="radio" name="hej"></form></body></html>
}

test("WebForms2.Validation.Radio.Required")
{
	// No radio button should "automagically" be selected. Breaks
	// RFC1866 but is what's implemented everywhere and is in WF2
	// spec.
	verify(document.forms[0]);
	f = document.forms[0];
	verify(f[0]);
	verify(f[1]);

	verify(f[0].type == "radio");
	verify(f[1].type == "radio");

	verify(!f[0].checked);
	verify(!f[1].checked);

	verify(!f[1].validity.valid);
	verify(f[1].validity.valueMissing);

	f[0].checked = true;
	verify(f[0].checked);
	verify(!f[1].validity.valueMissing);
	verify(f[1].validity.valid);

	f[0].name="kalle";
	verify(!f[1].validity.valid);
	verify(f[1].validity.valueMissing);

	verify("f" in window); // Used in the next testcase
}

test("WebForms2.Validation.Radio.Required.Part2")
	require success "WebForms2.Validation.Radio.Required";
{
	verify("f" in window); // Exists since the last testcase
	f[1].name="kalle";
	verify(!f[1].validity.valueMissing);
	verify(f[1].validity.valid);
}

html
{
	//! <html>
	//!		<body>
	//!			<form id='myform' action='http://localhost:8080/lek.jsp' method='post'>
	//!				<object id="grej">tom<object>
	//!			</form>
	//!		</body>
	//! </html>
}

test("WebForms2.Validation.Object")
{
	verify(document);
	verify(document.getElementById);
	var object = document.getElementById("grej");
	verify(object);
	verify("willValidate" in object);
	verify("validity" in object);
	verify("validationMessage" in object);

	verify(object.willValidate === false);
	verify(object.validity.valid === true);
	verify(object.validationMessage === "");

	verify("setCustomValidity" in object);
	verify("checkValidity" in object);

	object.setCustomValidity("BAD");
	// Objects don't support validation.
	verify(object.validity.valid === true);

	verify(object.checkValidity());
}

html
{
	//! <html><body><form>
	//! <input name="ctrl" readonly>
	//! <input name="ctrl" disabled>
	//! <input name="ctrl">
	//! <input name="ctrl" type="hidden">
	//! <input id="ctrl">
	//! <output>Onion</output>
	//! <datalist></datalist>
	//! <fieldset></fieldset>
	//! <object>Onion</object>
	//! </form>
	//! <input id="tomato">
	// </body></html>
}

test("WebForms2.willValidate")
{
	verify(document.forms[0]);
	var f = document.forms[0];
	verify(f.length >= 5);
	verify(f[0]);
	var input = f[0];
	verify("willValidate" in input);
	verify(input.willValidate === false); // Since it's readonly

	input = f[1];
	verify("willValidate" in input);
	verify(input.willValidate === false); // Since it's disabled

	input = f[2];
	verify("willValidate" in input);
	verify(input.willValidate === true); // Since it's an ordinary control

	input = f[3];
	verify("willValidate" in input);
	verify(input.willValidate === false); // Since it's of type hidden

	input = f[4];
	verify("willValidate" in input);
	verify(input.willValidate === true); // Since it's an ordinary control

	input = document.getElementById("tomato");
	verify(input);
	verify(input.willValidate === true); // Since it's an ordinary control

	var output = document.getElementsByTagName("output")[0];
	verify("willValidate" in output);
	verify(output.willValidate === false);

	input = document.createElement("input");
	verify(input);
	var datalist = document.getElementsByTagName("datalist")[0];
	datalist.appendChild(input);
	verify(input.willValidate === false);

	var fieldset = document.getElementsByTagName("fieldset")[0];
	verify("willValidate" in fieldset);
	verify(fieldset.willValidate === false);

	var object = document.getElementsByTagName("object")[0];
	verify("willValidate" in object);
	verify(object.willValidate === false);
}
