/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2008 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
*/

group "crypto certificate test";
require CRYPTO_CERTIFICATE_VERIFICATION_SUPPORT;
require CRYPTO_CERTIFICATE_VERIFICATION_USE_CORE_IMPLEMENTATION && API_CRYPTO_CERTIFICATE_VERIFICATION || undefined CRYPTO_CERTIFICATE_VERIFICATION_USE_CORE_IMPLEMENTATION; 

include "modules/libcrypto/include/CryptoCertificate.h";
include "modules/libcrypto/include/CryptoCertificateChain.h";
include "modules/libcrypto/include/CryptoCertificateStorage.h";
include "modules/libcrypto/include/CryptoSignature.h";
include "modules/formats/base64_decode.h";

require init;
require CRYPTO_API_SUPPORT;
require USE_OPENSSL;

global
{
	CryptoCertificateStorage *ca_storage = NULL;
	CryptoCertificateStorage *wrong_ca_storage = NULL;
}

setup
{
	
	RETURN_IF_ERROR(CryptoCertificateStorage::Create(ca_storage));	
	RETURN_IF_ERROR(ca_storage->AddToCertificateBase64("MIIHFTCCBP2gAwIBAgIJAMi9jQDUYvJn"
	                                                   "MA0GCSqGSIb3DQEBBQUAMIGPMQswCQYD"
	                                                   "VQQGEwJOTzEPMA0GA1UECBMGTm9yd2F5"
	                                                   "MQ0wCwYDVQQHEwRPc2xvMRcwFQYDVQQK"
	                                                   "Ew5PcGVyYSBTb2Z0d2FyZTEQMA4GA1UE"
	                                                   "CxMHUUEgQ29yZTEUMBIGA1UEAxMLd3d3"
	                                                   "LmZvby5iYXIxHzAdBgkqhkiG9w0BCQEW"
	                                                   "EGFuZ2VsZkBvcGVyYS5jb20wHhcNMDgx"
	                                                   "MTA1MTUzMTM2WhcNMzYwMzIzMTUzMTM2"
	                                                   "WjCBjzELMAkGA1UEBhMCTk8xDzANBgNV"
	                                                   "BAgTBk5vcndheTENMAsGA1UEBxMET3Ns"
	                                                   "bzEXMBUGA1UEChMOT3BlcmEgU29mdHdh"
	                                                   "cmUxEDAOBgNVBAsTB1FBIENvcmUxFDAS"
	                                                   "BgNVBAMTC3d3dy5mb28uYmFyMR8wHQYJ"
	                                                   "KoZIhvcNAQkBFhBhbmdlbGZAb3BlcmEu"
	                                                   "Y29tMIICIjANBgkqhkiG9w0BAQEFAAOC"
	                                                   "Ag8AMIICCgKCAgEA267dRNJgPaPITSzo"
	                                                   "PVkWOHNz+5ACQdbUvXmW5dXIIhGVXmFz"
	                                                   "6woKIy1A4q88LQGcWy8T3gsnD9Ku/FKn"
	                                                   "FlnF6SClrGXWTF4MsLpdH4r/H4+r+Tt5"
	                                                   "yC0febbrOfGr44q0MGk/UvS9RGmjsNsA"
	                                                   "AXhRhrsWklJ3OADcytr90A/blKrkBTRO"
	                                                   "IyebZMWXvRsiiRlF45qsP7+tNVH/3x3Q"
	                                                   "7eSX8278/2RPI6fM8iu8R91pfYLnp8O3"
	                                                   "03xr42S8OCZi6JZ3e3yN9cS1fX5yGAoW"
	                                                   "jYtXAHoMysrctArsZAxjbqjmQWi7xtAS"
	                                                   "+YvGbr6xP3pEQk8w0Bw6u2EcZCx05s2U"
	                                                   "5PLRNPAn18TRaWTwtPlyWErVp9SLsyqh"
	                                                   "kaG6vGGerE9Q8fvFXv05JSci+Pen7os9"
	                                                   "fmyBU/Sb1q40AYDSRr6DbazUvILEsePV"
	                                                   "bDv4HFFBzwetR6qTISYQGJOmKKmUBLqW"
	                                                   "NPkA04aTpJr5rVRV87hibR6+xNM4fT1T"
	                                                   "0UGkJuG5qkRK/qpTtAyFQ6GQc4GyHDqh"
	                                                   "8BBAEszTXOqPzLor7AjGWIzVsDCm6zKy"
	                                                   "Gvr4t3TFVoV1owEwfMEShygdhdCL2DPM"
	                                                   "QX60km5oxefF8kFTX4cRXXqpYjcHwSHN"
	                                                   "+jUypvy/72StasYUzR+IHHmgkky8J16T"
	                                                   "/Ip8EJpoTGRcURi2VK0nvFU+288CAwEA"
	                                                   "AaOCAXAwggFsMBEGCWCGSAGG+EIBAQQE"
	                                                   "AwIABzAmBglghkgBhvhCAQ0EGRYXU2Vs"
	                                                   "ZiBTaWduZWQgY2VydGlmaWNhdGUwHQYD"
	                                                   "VR0OBBYEFJ46pb7ZmSt27ldFX2rlPdYx"
	                                                   "0iiFMIHEBgNVHSMEgbwwgbmAFJ46pb7Z"
	                                                   "mSt27ldFX2rlPdYx0iiFoYGVpIGSMIGP"
	                                                   "MQswCQYDVQQGEwJOTzEPMA0GA1UECBMG"
	                                                   "Tm9yd2F5MQ0wCwYDVQQHEwRPc2xvMRcw"
	                                                   "FQYDVQQKEw5PcGVyYSBTb2Z0d2FyZTEQ"
	                                                   "MA4GA1UECxMHUUEgQ29yZTEUMBIGA1UE"
	                                                   "AxMLd3d3LmZvby5iYXIxHzAdBgkqhkiG"
	                                                   "9w0BCQEWEGFuZ2VsZkBvcGVyYS5jb22C"
	                                                   "CQDIvY0A1GLyZzAPBgNVHRMBAf8EBTAD"
	                                                   "AQH/MBsGA1UdEQQUMBKBEGFuZ2VsZkBv"
	                                                   "cGVyYS5jb20wGwYDVR0SBBQwEoEQYW5n"
	                                                   "ZWxmQG9wZXJhLmNvbTANBgkqhkiG9w0B"
	                                                   "AQUFAAOCAgEA08y/+GAYlw1dZ/73cjhF"
	                                                   "DUY6HCbUrDYmqIXyCvMqJ/eagxYBeaXO"
	                                                   "jgpzYMsbDq4qnm/ECK8kzmGG/UJiaDsL"
	                                                   "FMQaB8WwW3idJ5OIq08Yk779d7WpBCD7"
	                                                   "Z3jVPUkuCNMxLJP8X050tcGUgSC7PoP7"
	                                                   "mk3h+dRCE7xZP8xfzwVHMjWVfyyATtaI"
	                                                   "zpXVRj8fJUAp8XyFO+ZG99l3PBU8+Iw2"
	                                                   "SgJKVzUkpIGl5J6DYC20LYt2FR+wALW9"
	                                                   "+iHJX8TLIJYaQUlTUKwd4koTm58xjhge"
	                                                   "GOajvi3zj0SrrIBiu9U1OlYqgg6jx1pe"
	                                                   "ZXlYmvvEdY4aYsyvhbBOeTKvTIEgGAb9"
	                                                   "WMGNGrB9/WzvymXOScXlt7RduwKJHfFr"
	                                                   "vE77fZbgpEKw7dBr4C3bO5JhJvd64yJl"
	                                                   "uCLsSmItyTHk5R7YCxSB06d83gfI4Y9Y"
	                                                   "oWGGdmLymD1Uk5A44HcAx6/ugOJrycxs"
	                                                   "YfXRcca+jPZc1p/hFDxoL6WvLauCkTGA"
	                                                   "QQ/Bu6SQYkFJlyjwNVUpOD9Kb53yUFm6"
	                                                   "15OzW+CvZLpdd1ntTSJ5WKrLEpBP6tQZ"
	                                                   "x8FCRSMb3IJLb45nnjIl+sqYQHFln0zO"
	                                                   "S8dmLci12MT1QvN/3y/NN+sFg/OX3QJY"
	                                                   "uCM3GjCPES0uTiq1W9KShpw1kowDDNEe"
	                                                   "VfzIrPmNxvpBKXgDEqqrQPk="
	                                                   ));

	RETURN_IF_ERROR(CryptoCertificateStorage::Create(wrong_ca_storage));			
}

exit
{
	OP_DELETE(wrong_ca_storage);
	OP_DELETE(ca_storage);
}

test("Verify certificate chain signature - bad certificate")
{
	CryptoCertificateChain *chain;
	
	verify(CryptoCertificateChain::Create(chain) == OpStatus::OK);
	verify(chain != NULL);
	OpAutoPtr<CryptoCertificateChain> anchor(chain);
	const char *certificate_pem_bad = 	"MIIFeTCCA2ECAQEwDQYJKoZIhvcNAQEF"
										"BQAwgZAxCzAJBgNVBAYTAk5PMRMwEQYD"
										"VQQIEwpTb21lLVN1YXRlMQ0wCwYDVQQH"
										"EwRPc2xvMR8wHQYDVQQKExZUZXN0IFdp"
										"ZGdldCBDQSBMdGQgaW5jMRkwFwYDVQQD"
										"ExBBcnZlIEJlcnN2ZW5kc2VuMSEwHwYJ"
										"KoZIhvcNAQkBFhJhcnZlYitjYUBvcGVy"
										"YS5jb20wHhcNMDgwODA1MDczMjIwWhcN"
										"MDkwODA1MDczMjIwWjB0MQswCQYDVQQG"
										"EwJOTzENMAsGA1UEBxMET3NsbzEcMBoG"
										"A1UEChMTV2lkZ2V0IHNpZ25lcnMgdXRk"
										"LjETMBEGA1UEAxMKV2lkZ2V0IEpvZTEj"
										"MCEGCSqGSIb3DQEJARYUYXJ2ZWIrd2pv"
										"ZUBvcGVyYS5jb20wggIiMA0GCSqGSIb3"
										"DQEBAQUAA4ICDwAwggIKAoICAQC2e2Cw"
										"sNmiUrsW1DVnOjSe9f1aOM7JAyumtCCO"
										"SZYKVcAZDqwVGPzxC0RJoqv3XfOS7531"
										"eHRqHIH3ICRw310Q8bHFdB+oipFiRzic"
										"Rmeg+u2e+SLl0gFzoaps65YTnpIkTfJu"
										"Nz6C+NK/r8pkpSj1CcvkklcA9/hRRSUG"
										"VYdTQhp09tLAAfXASQsOSK3iyMQ2kNKU"
										"rkdMWAyVJHwmFmcZ83FtHyby2+eujK+3"
										"y2NshFx2cGLFqkm+xbwmKmBPrKC16vnc"
										"nDsxskfm5xHWOxSXm5cH1U0ejWJdIJxZ"
										"mppBykz9f3LWDbq9qLggJzI43IIzHP6j"
										"9KQneoSoBRi+GQTxhQ2MwDzYSIJpr4tt"
										"p6IK+PiA1ySPf4ThSTqff0F+hjTkj3Aq"
										"+JQKdNqB++jDKklbHtjWLkWq7xS0MKs8"
										"+roK6zLFoBPZVghBWTxTOQUSJB37nZV5"
										"n5RBli/fv8/hla5hUVPYtMsC/rHltVk8"
										"MqCJ3MFDynHnrKkXzq8hgIsGKyRYo4Hy"
										"TPCr+hXUQPzRf01EZKO7MCWkJat0EiHB"
										"8KFJ516WTD8rmJSymbJ6Qr6Lk7LiTKrO"
										"biLl7oXEvK2DADQ9cVmlfF62iEOTgBhS"
										"/V2/pKVZ+Lu0jVY0r2VsFkii1GU/mYSI"
										"yPFSKma8z1Edmy2EWBxvAQQQufLOuqop"
										"TwvwwQIDAQABMA0GCSqGSIb3DQEBBQUA"
										"A4ICAQA4AVwwaO4yByYA2HJztZylcM7C"
										"ffa6ZD1CToyt6sgXR/JDLQO+zJyPwu0B"
										"PWeh8/KRmjHPFZ7A2AA1NnGkGCVeKkzR"
										"9XcNfgji7LWIDqElK+Rg8kMwlKGWcVxX"
										"FIkEtOZVXL/vTM05KbeHFSnaIaV646uR"
										"DfmWw9FG5fqtRWNuBTqJoUXeUtWowBLw"
										"UxGYiqrRE+ShdXro5DS8pwo2G0bHo17t"
										"/fWcZDMcHOR2RcMRze0tAf9oE/mmOVOC"
										"4NYaC0k2O37Ukl19TyJySlXtZFOayIbP"
										"7khoMG76Sk0Wy6/aFNjU9yH1YX5ruQQv"
										"gamBpMrS2mCRu0abY2JzVVpH5qbfzI0Q"
										"51bgEPckt5fiSuSeS19RME1wduj5u5Fw"
										"k87Lbs54UwUu2flV0eWnpDsux4hH5RVf"
										"0eOSN+wuSCXvQyQlB38tHX/CNmD5qaig"
										"9bQYUFkbp8ebgoAM0w/wicPqw51mek4/"
										"nkz7CU6CUfw7+8EjSRfIIQqZFkRBfaFI"
										"Hi91SYqHmE+GKSKR1p5L/nhmeBpZw+WL"
										"VsPfG9d2w8pty/49HxHZekfd20ocM9cK"
										"R7On2twU53LLG0EAw6J2cZNz6pKot1Tx"
										"yhNkjzGYXhRpYbPCZVszMQM1CYM7T6Kh"
										"alDX2IrXxfy84mkSBB4IYIffMdcZKc1Z"
										"TKUvWkmAW6qKEFVPvA==";
	
	verify(chain->AddToChainBase64(certificate_pem_bad) == OpStatus::OK);
	CryptoCertificateChain::VerifyStatus reason;

	verify(chain->VerifyChainSignatures(reason, ca_storage) == OpStatus::OK);
	verify(reason == CryptoCertificateChain::CERTIFICATE_INVALID_CERTIFICATE_CHAIN);
}


test("Verify certificate chain signature - good certificate")
{
	CryptoCertificateChain *chain;
	
	verify(CryptoCertificateChain::Create(chain) == OpStatus::OK);
	verify(chain != NULL);
	OpAutoPtr<CryptoCertificateChain> anchor(chain);

	const char *certificate_pem_good = 	"MIIGCTCCA/GgAwIBAgIBATANBgkqhkiG" 
										"9w0BAQQFADCBjzELMAkGA1UEBhMCTk8x"
										"DzANBgNVBAgTBk5vcndheTENMAsGA1UE"
										"BxMET3NsbzEXMBUGA1UEChMOT3BlcmEg"
										"U29mdHdhcmUxEDAOBgNVBAsTB1FBIENv"
										"cmUxFDASBgNVBAMTC3d3dy5mb28uYmFy"
										"MR8wHQYJKoZIhvcNAQkBFhBhbmdlbGZA"
										"b3BlcmEuY29tMB4XDTA4MTEwNTE1MzE0"
										"OFoXDTM2MDMyMzE1MzE0OFowgY8xCzAJ"
										"BgNVBAYTAk5PMQ8wDQYDVQQIEwZOb3J3"
										"YXkxDTALBgNVBAcTBE9zbG8xFzAVBgNV"
										"BAoTDk9wZXJhIFNvZnR3YXJlMRAwDgYD"
										"VQQLEwdRQSBDb3JlMRQwEgYDVQQDEwt3"
										"d3cuZm9vLmJhcjEfMB0GCSqGSIb3DQEJ"
										"ARYQYW5nZWxmQG9wZXJhLmNvbTCCASIw"
										"DQYJKoZIhvcNAQEBBQADggEPADCCAQoC"
										"ggEBAPMKlp5lhPB2rVIjORcaqPr5EFGo"
										"tiI9ZuDgk90vtWrc9UBTvym4B/16dyC8"
										"bqHYL8Z9mtzHNV8M9OuP+nnq/1mA2/0d"
										"Z+2OT/T1J1MEXBb+Qm3r3g7MsfGNaCfx"
										"TuHm+uCpHdZWTLYNO1htiAi/CICka99z"
										"Clb/MYtH/A915DxgZibUHqhl6CHCF8aY"
										"sFIcI1n/ZoEd4h1qigZuF77PW4RD4rji"
										"5sienCKXrNfxUpaaOHkqSp2qinuJflBr"
										"mYvd9E1Mq8dj35OnM2s9gvErnMes2CQc"
										"3U4xR+PDkqnR4Dm6ROjzmlemZz49U2Ny"
										"qu7Ev8jO9UtvRhwZxj+ziXxmOjkCAwEA"
										"AaOCAWwwggFoMBEGCWCGSAGG+EIBAQQE"
										"AwIEEDAoBglghkgBhvhCAQ0EGxYZT2Jq"
										"ZWN0IHNpZ25lciBjZXJ0aWZpY2F0ZTAd"
										"BgNVHQ4EFgQUukqQ8hbLqLyFOjys5U/C"
										"wKpVcH0wgcQGA1UdIwSBvDCBuYAUnjql"
										"vtmZK3buV0VfauU91jHSKIWhgZWkgZIw"
										"gY8xCzAJBgNVBAYTAk5PMQ8wDQYDVQQI"
										"EwZOb3J3YXkxDTALBgNVBAcTBE9zbG8x"
										"FzAVBgNVBAoTDk9wZXJhIFNvZnR3YXJl"
										"MRAwDgYDVQQLEwdRQSBDb3JlMRQwEgYD"
										"VQQDEwt3d3cuZm9vLmJhcjEfMB0GCSqG"
										"SIb3DQEJARYQYW5nZWxmQG9wZXJhLmNv"
										"bYIJAMi9jQDUYvJnMAkGA1UdEwQCMAAw"
										"GwYDVR0RBBQwEoEQYW5nZWxmQG9wZXJh"
										"LmNvbTAbBgNVHRIEFDASgRBhbmdlbGZA"
										"b3BlcmEuY29tMA0GCSqGSIb3DQEBBAUA"
										"A4ICAQBKTztNLFJ5xM3PkYOnefXzvJOB"
										"pafPpFw/gMPYfS1TCPkNaWyrrjFnO9TC"
										"YzEzo4W0+DBkHEUHaeBH3OS6EKeayw7n"
										"0q6ydiXKUDeXNM0HgFbVceLX8nntxQA5"
										"moLc5maZoD/eEFWlnmUjCV5DjAoS+a8L"
										"aFMmy6oGk5hwvLSypPTQ1NMOb+ArJIEW"
										"kRYxk6fraZqfyznhSenk8nMMDd5v5f5v"
										"z95VDpTpzMZ0lIpXwRxzJ2WF3U1uXcPS"
										"2lOIDE0qUsB4fob7ZeS04MKB/m7oLJfc"
										"MMO51KuoFD1Wh2+gF2aO3o6hW63EtL9X"
										"r8uH0K4N78EpwyPnvv3IcauSm3iv4Rqk"
										"6MFSNAdDUxRzsAPBY+6YUbtNbYn2fiSP"
										"mwvuWQJqX8UP+Fa7CmE6ZjQ9btqIZ2T0"
										"aTDrwi8J6jNQcWbCDXvgVGtwMVnCnHZE"
										"HN+d/g0+oKlvMaKoyyqQ58fELw8wcFew"
										"x2/h16sVVxmfS5tiYS29yRKAVoZiHH5C"
										"2yERBm+raTXLfRCxbvgPp0eAdOsLd1Pn"
										"DbXOYUREBMAk9p+i6F+AWpmH1Thmj/XJ"
										"xIrCfIuKAm2lJxdz5FqA53GKh7yBl6by"
										"WkUtUyswN92IYc6Og+bq2xZPq77SyibG"
										"6oQJRsalLcwhLfXMcbSGD9wnQmWdy7jN"
										"btMNM8meDIWwq+Upzg==";
	
	verify(chain->AddToChainBase64(certificate_pem_good) == OpStatus::OK);
	CryptoCertificateChain::VerifyStatus reason;

	verify(chain->VerifyChainSignatures(reason, ca_storage) == OpStatus::OK);
	verify(reason == CryptoCertificateChain::OK_CHECKED_LOCALLY);
}

test("Verify certificate chain signature - good certificate no ca")
{
	CryptoCertificateChain *chain;
	
	verify(CryptoCertificateChain::Create(chain) == OpStatus::OK);
	verify(chain != NULL);
	OpAutoPtr<CryptoCertificateChain> anchor(chain);
	const char *certificate_pem_good = 	"MIIGCTCCA/GgAwIBAgIBATANBgkqhkiG" 
										"9w0BAQQFADCBjzELMAkGA1UEBhMCTk8x"
										"DzANBgNVBAgTBk5vcndheTENMAsGA1UE"
										"BxMET3NsbzEXMBUGA1UEChMOT3BlcmEg"
										"U29mdHdhcmUxEDAOBgNVBAsTB1FBIENv"
										"cmUxFDASBgNVBAMTC3d3dy5mb28uYmFy"
										"MR8wHQYJKoZIhvcNAQkBFhBhbmdlbGZA"
										"b3BlcmEuY29tMB4XDTA4MTEwNTE1MzE0"
										"OFoXDTM2MDMyMzE1MzE0OFowgY8xCzAJ"
										"BgNVBAYTAk5PMQ8wDQYDVQQIEwZOb3J3"
										"YXkxDTALBgNVBAcTBE9zbG8xFzAVBgNV"
										"BAoTDk9wZXJhIFNvZnR3YXJlMRAwDgYD"
										"VQQLEwdRQSBDb3JlMRQwEgYDVQQDEwt3"
										"d3cuZm9vLmJhcjEfMB0GCSqGSIb3DQEJ"
										"ARYQYW5nZWxmQG9wZXJhLmNvbTCCASIw"
										"DQYJKoZIhvcNAQEBBQADggEPADCCAQoC"
										"ggEBAPMKlp5lhPB2rVIjORcaqPr5EFGo"
										"tiI9ZuDgk90vtWrc9UBTvym4B/16dyC8"
										"bqHYL8Z9mtzHNV8M9OuP+nnq/1mA2/0d"
										"Z+2OT/T1J1MEXBb+Qm3r3g7MsfGNaCfx"
										"TuHm+uCpHdZWTLYNO1htiAi/CICka99z"
										"Clb/MYtH/A915DxgZibUHqhl6CHCF8aY"
										"sFIcI1n/ZoEd4h1qigZuF77PW4RD4rji"
										"5sienCKXrNfxUpaaOHkqSp2qinuJflBr"
										"mYvd9E1Mq8dj35OnM2s9gvErnMes2CQc"
										"3U4xR+PDkqnR4Dm6ROjzmlemZz49U2Ny"
										"qu7Ev8jO9UtvRhwZxj+ziXxmOjkCAwEA"
										"AaOCAWwwggFoMBEGCWCGSAGG+EIBAQQE"
										"AwIEEDAoBglghkgBhvhCAQ0EGxYZT2Jq"
										"ZWN0IHNpZ25lciBjZXJ0aWZpY2F0ZTAd"
										"BgNVHQ4EFgQUukqQ8hbLqLyFOjys5U/C"
										"wKpVcH0wgcQGA1UdIwSBvDCBuYAUnjql"
										"vtmZK3buV0VfauU91jHSKIWhgZWkgZIw"
										"gY8xCzAJBgNVBAYTAk5PMQ8wDQYDVQQI"
										"EwZOb3J3YXkxDTALBgNVBAcTBE9zbG8x"
										"FzAVBgNVBAoTDk9wZXJhIFNvZnR3YXJl"
										"MRAwDgYDVQQLEwdRQSBDb3JlMRQwEgYD"
										"VQQDEwt3d3cuZm9vLmJhcjEfMB0GCSqG"
										"SIb3DQEJARYQYW5nZWxmQG9wZXJhLmNv"
										"bYIJAMi9jQDUYvJnMAkGA1UdEwQCMAAw"
										"GwYDVR0RBBQwEoEQYW5nZWxmQG9wZXJh"
										"LmNvbTAbBgNVHRIEFDASgRBhbmdlbGZA"
										"b3BlcmEuY29tMA0GCSqGSIb3DQEBBAUA"
										"A4ICAQBKTztNLFJ5xM3PkYOnefXzvJOB"
										"pafPpFw/gMPYfS1TCPkNaWyrrjFnO9TC"
										"YzEzo4W0+DBkHEUHaeBH3OS6EKeayw7n"
										"0q6ydiXKUDeXNM0HgFbVceLX8nntxQA5"
										"moLc5maZoD/eEFWlnmUjCV5DjAoS+a8L"
										"aFMmy6oGk5hwvLSypPTQ1NMOb+ArJIEW"
										"kRYxk6fraZqfyznhSenk8nMMDd5v5f5v"
										"z95VDpTpzMZ0lIpXwRxzJ2WF3U1uXcPS"
										"2lOIDE0qUsB4fob7ZeS04MKB/m7oLJfc"
										"MMO51KuoFD1Wh2+gF2aO3o6hW63EtL9X"
										"r8uH0K4N78EpwyPnvv3IcauSm3iv4Rqk"
										"6MFSNAdDUxRzsAPBY+6YUbtNbYn2fiSP"
										"mwvuWQJqX8UP+Fa7CmE6ZjQ9btqIZ2T0"
										"aTDrwi8J6jNQcWbCDXvgVGtwMVnCnHZE"
										"HN+d/g0+oKlvMaKoyyqQ58fELw8wcFew"
										"x2/h16sVVxmfS5tiYS29yRKAVoZiHH5C"
										"2yERBm+raTXLfRCxbvgPp0eAdOsLd1Pn"
										"DbXOYUREBMAk9p+i6F+AWpmH1Thmj/XJ"
										"xIrCfIuKAm2lJxdz5FqA53GKh7yBl6by"
										"WkUtUyswN92IYc6Og+bq2xZPq77SyibG"
										"6oQJRsalLcwhLfXMcbSGD9wnQmWdy7jN"
										"btMNM8meDIWwq+Upzg==";
	
	verify(chain->AddToChainBase64(certificate_pem_good) == OpStatus::OK);
	CryptoCertificateChain::VerifyStatus reason;

	verify(chain->VerifyChainSignatures(reason, wrong_ca_storage) == OpStatus::OK);
	verify(reason == CryptoCertificateChain::CERTIFICATE_INVALID_CERTIFICATE_CHAIN);
}

test("GetPublicKey/SetPublicKey")
{
	CryptoCertificateChain * certificate_chain;
	verify(OpStatus::IsSuccess(CryptoCertificateChain::Create(certificate_chain)));

	OpAutoPtr<CryptoCertificateChain> anchor(certificate_chain);

	const char *certificate_pem_good = 	"MIIGCTCCA/GgAwIBAgIBATANBgkqhkiG" 
										"9w0BAQQFADCBjzELMAkGA1UEBhMCTk8x"
										"DzANBgNVBAgTBk5vcndheTENMAsGA1UE"
										"BxMET3NsbzEXMBUGA1UEChMOT3BlcmEg"
										"U29mdHdhcmUxEDAOBgNVBAsTB1FBIENv"
										"cmUxFDASBgNVBAMTC3d3dy5mb28uYmFy"
										"MR8wHQYJKoZIhvcNAQkBFhBhbmdlbGZA"
										"b3BlcmEuY29tMB4XDTA4MTEwNTE1MzE0"
										"OFoXDTM2MDMyMzE1MzE0OFowgY8xCzAJ"
										"BgNVBAYTAk5PMQ8wDQYDVQQIEwZOb3J3"
										"YXkxDTALBgNVBAcTBE9zbG8xFzAVBgNV"
										"BAoTDk9wZXJhIFNvZnR3YXJlMRAwDgYD"
										"VQQLEwdRQSBDb3JlMRQwEgYDVQQDEwt3"
										"d3cuZm9vLmJhcjEfMB0GCSqGSIb3DQEJ"
										"ARYQYW5nZWxmQG9wZXJhLmNvbTCCASIw"
										"DQYJKoZIhvcNAQEBBQADggEPADCCAQoC"
										"ggEBAPMKlp5lhPB2rVIjORcaqPr5EFGo"
										"tiI9ZuDgk90vtWrc9UBTvym4B/16dyC8"
										"bqHYL8Z9mtzHNV8M9OuP+nnq/1mA2/0d"
										"Z+2OT/T1J1MEXBb+Qm3r3g7MsfGNaCfx"
										"TuHm+uCpHdZWTLYNO1htiAi/CICka99z"
										"Clb/MYtH/A915DxgZibUHqhl6CHCF8aY"
										"sFIcI1n/ZoEd4h1qigZuF77PW4RD4rji"
										"5sienCKXrNfxUpaaOHkqSp2qinuJflBr"
										"mYvd9E1Mq8dj35OnM2s9gvErnMes2CQc"
										"3U4xR+PDkqnR4Dm6ROjzmlemZz49U2Ny"
										"qu7Ev8jO9UtvRhwZxj+ziXxmOjkCAwEA"
										"AaOCAWwwggFoMBEGCWCGSAGG+EIBAQQE"
										"AwIEEDAoBglghkgBhvhCAQ0EGxYZT2Jq"
										"ZWN0IHNpZ25lciBjZXJ0aWZpY2F0ZTAd"
										"BgNVHQ4EFgQUukqQ8hbLqLyFOjys5U/C"
										"wKpVcH0wgcQGA1UdIwSBvDCBuYAUnjql"
										"vtmZK3buV0VfauU91jHSKIWhgZWkgZIw"
										"gY8xCzAJBgNVBAYTAk5PMQ8wDQYDVQQI"
										"EwZOb3J3YXkxDTALBgNVBAcTBE9zbG8x"
										"FzAVBgNVBAoTDk9wZXJhIFNvZnR3YXJl"
										"MRAwDgYDVQQLEwdRQSBDb3JlMRQwEgYD"
										"VQQDEwt3d3cuZm9vLmJhcjEfMB0GCSqG"
										"SIb3DQEJARYQYW5nZWxmQG9wZXJhLmNv"
										"bYIJAMi9jQDUYvJnMAkGA1UdEwQCMAAw"
										"GwYDVR0RBBQwEoEQYW5nZWxmQG9wZXJh"
										"LmNvbTAbBgNVHRIEFDASgRBhbmdlbGZA"
										"b3BlcmEuY29tMA0GCSqGSIb3DQEBBAUA"
										"A4ICAQBKTztNLFJ5xM3PkYOnefXzvJOB"
										"pafPpFw/gMPYfS1TCPkNaWyrrjFnO9TC"
										"YzEzo4W0+DBkHEUHaeBH3OS6EKeayw7n"
										"0q6ydiXKUDeXNM0HgFbVceLX8nntxQA5"
										"moLc5maZoD/eEFWlnmUjCV5DjAoS+a8L"
										"aFMmy6oGk5hwvLSypPTQ1NMOb+ArJIEW"
										"kRYxk6fraZqfyznhSenk8nMMDd5v5f5v"
										"z95VDpTpzMZ0lIpXwRxzJ2WF3U1uXcPS"
										"2lOIDE0qUsB4fob7ZeS04MKB/m7oLJfc"
										"MMO51KuoFD1Wh2+gF2aO3o6hW63EtL9X"
										"r8uH0K4N78EpwyPnvv3IcauSm3iv4Rqk"
										"6MFSNAdDUxRzsAPBY+6YUbtNbYn2fiSP"
										"mwvuWQJqX8UP+Fa7CmE6ZjQ9btqIZ2T0"
										"aTDrwi8J6jNQcWbCDXvgVGtwMVnCnHZE"
										"HN+d/g0+oKlvMaKoyyqQ58fELw8wcFew"
										"x2/h16sVVxmfS5tiYS29yRKAVoZiHH5C"
										"2yERBm+raTXLfRCxbvgPp0eAdOsLd1Pn"
										"DbXOYUREBMAk9p+i6F+AWpmH1Thmj/XJ"
										"xIrCfIuKAm2lJxdz5FqA53GKh7yBl6by"
										"WkUtUyswN92IYc6Og+bq2xZPq77SyibG"
										"6oQJRsalLcwhLfXMcbSGD9wnQmWdy7jN"
										"btMNM8meDIWwq+Upzg==";

	verify(OpStatus::IsSuccess(certificate_chain->AddToChainBase64(certificate_pem_good)));

	// This is virtually copied from CryptoXmlSignature::VerifyWidgetSignature
	CryptoSignature *signature;
	verify(CryptoSignature::Create(signature, CRYPTO_CIPHER_TYPE_RSA, CRYPTO_HASH_TYPE_SHA1) == OpStatus::OK);
	OpAutoPtr<CryptoSignature> signature_anchor(signature);

	int key_len;
	const UINT8 *key = certificate_chain->GetCertificate(0)->GetPublicKey(key_len);
	verify(key);
	verify(signature->SetPublicKey(key, key_len) == OpStatus::OK);
}

