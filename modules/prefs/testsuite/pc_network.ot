/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2004-2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Krefting
*/

group "prefs.prefsmanager.collections.pcnetwork";
require PREFS_WRITE;
require initialization;

include "modules/prefs/prefsmanager/prefsmanager.h";
include "modules/prefs/prefsmanager/collections/pc_network.h";

// -- Tests --------------------------------------------------------------

test("Testing 100-continue settings")
{
	TRAPD(rc, g_pcnet->WriteUse100ContinueL(UNI_L("100.example.com"), TRUE));
	verify(OpStatus::IsSuccess(rc));
	TRAP(rc, g_pcnet->WriteUse100ContinueL(UNI_L("example.com"), FALSE));
	verify(OpStatus::IsSuccess(rc));

	verify(g_pcnet->GetUse100Continue(UNI_L("100.example.com")) == TRUE);
	verify(g_pcnet->GetUse100Continue(UNI_L("example.com")) == FALSE);

	TRAP(rc, g_pcnet->WriteUse100ContinueL(UNI_L("100.example.com"), FALSE));
	verify(OpStatus::IsSuccess(rc));
	verify(g_pcnet->GetUse100Continue(UNI_L("100.example.com")) == FALSE);

#ifdef PREFS_HOSTOVERRIDE
	// Clean up
	g_prefsManager->RemoveOverridesL(UNI_L("100.example.com"), FALSE);
	g_prefsManager->RemoveOverridesL(UNI_L("example.com"), FALSE);
#endif
}

test("Checking that Accept-Language has a default value")
{
	const uni_char *acceptlang =
		g_pcnet->GetDefaultStringPref(PrefsCollectionNetwork::AcceptLanguage);
	verify(acceptlang);
	verify(*acceptlang);
}

test("Protocol helper functions")
{

	verify(g_pcnet->GetStringPref(PrefsCollectionNetwork::AcceptLanguage)
	       .Compare(g_pcnet->GetAcceptLanguage()) == 0);
	verify(g_pcnet->GetStringPref(PrefsCollectionNetwork::AcceptTypes)
	       .Compare(g_pcnet->GetAcceptTypes()) == 0);
}
