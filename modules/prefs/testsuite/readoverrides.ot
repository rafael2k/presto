/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2007 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Karlsson
*/

group "prefs.prefsmanager.readoverrides";
require initialization;
require PREFS_HOSTOVERRIDE;
include "modules/prefsfile/impl/backend/prefssectioninternal.h";
include "modules/prefs/prefsmanager/collections/pc_files.h";
include "modules/prefs/prefsmanager/collections/pc_display.h";
include "modules/prefs/prefsmanager/prefsmanager.h";

// -- Global variables ---------------------------------------------------

global
{
	PrefsSectionInternal *data;
	OpFile *localcss;
}

setup
{
	data = NULL;
	localcss = NULL;
}

// -- Tests --------------------------------------------------------------

test("Setup")
{
	// Create a section
	data = OP_NEW(PrefsSectionInternal, ());
	verify(data);
	TRAPD(rc, data->ConstructL(UNI_L("www.example.com")));
	verify(OpStatus::IsSuccess(rc));

	// Add a file preference
	localcss = OP_NEW(OpFile, ());
	verify(localcss);
	verify(OpStatus::IsSuccess(localcss->Construct(UNI_L("selftest.css"), OPFILE_HOME_FOLDER)));
	TRAP(rc, data->SetL(UNI_L("User Prefs|Local CSS File"), localcss->GetSerializedName()));
	verify(OpStatus::IsSuccess(rc));

	// Add a regular preference
	TRAP(rc, data->SetL(UNI_L("User Prefs|Minimum Font Size"), UNI_L("99")));
}

test("Reading file override")
	require success "Setup";
{
	// Trigger a read
	TRAPD(rc, g_pcfiles->ReadOverridesL(UNI_L("www.example.com"), data, TRUE, TRUE));
	verify(OpStatus::IsSuccess(rc));

	// Check result
	const OpFile *file =
		g_pcfiles->GetFile(PrefsCollectionFiles::LocalCSSFile, UNI_L("www.example.com"));
	verify(uni_strcmp(file->GetFullPath(), localcss->GetFullPath()) == 0);
}
finally
{
	// Remove the overrides
#ifdef PREFS_WRITE
	g_prefsManager->RemoveOverridesL(UNI_L("www.example.com"), TRUE);
#endif
}

test("Reading regular override")
	require success "Setup";
{
	// Trigger a read
	TRAPD(rc, g_pcdisplay->ReadOverridesL(UNI_L("www.example.com"), data, TRUE, TRUE));
	verify(OpStatus::IsSuccess(rc));

	// Check result
	verify(g_pcdisplay->GetIntegerPref(PrefsCollectionDisplay::MinFontSize, UNI_L("www.example.com")) == 99);
}
finally
{
	// Remove the overrides
#ifdef PREFS_WRITE
	g_prefsManager->RemoveOverridesL(UNI_L("www.example.com"), TRUE);
#endif
}

// -- Global cleanup -----------------------------------------------------

exit
{
	// Deallocate
	OP_DELETE(localcss);
	OP_DELETE(data);
}
