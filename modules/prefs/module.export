# APIs for the preference framework

API_PRF_STRING_API				peter

	Enables support for a string based API to read and write preferences.
	This API should not be used from inside the core code, but may be
	used to expose preferences to customer code in a tidy manner.

	Also used by preference download and the opera:config DOM bindings.

	Defines:    PREFS_HAVE_STRING_API
	Depends on: FEATURE_PREFS_READ

API_PRF_ENUMERATE				peter

	Enables support for enumerating all available preferences, retrieving
	a list of all the settings and their current values.

	Used by opera:config.

	Defines    : PREFS_ENUMERATE
	Depends on : FEATURE_PREFS_READ

API_PRF_OVERRIDDEN_HOSTS		peter

	Enables the PrefsManager::GetOverriddenHostsL() API, allowing the
	caller to extract a list of hosts that have host overrides defined.

	Defines    : PREFS_GETOVERRIDDENHOSTS
	Depends on : nothing

# APIs for various preferences and collections

API_PRF_DESKTOP_UI				peter

	Enables preferences for the desktop UI (PrefsCollectionUI).

	Defines:    PREFS_HAVE_DESKTOP_UI
	Depends on: nothing

API_PRF_TOOLS_PROXY				peter

	Enables preferences for accessing the debugging proxy. Among these
	settings are proxy host, proxy port and whether to enable debugging
	(connect to proxy).

	Defined in PrefsCollectionTools.

	Defines:    PREFS_TOOLS_PROXY
	Depends on: FEATURE_SCOPE

API_PRF_TOOLS_SCRIPT_DEBUG		peter

	Enables preference for enabling script debugging. This preference is
	read by the EcmaScript compiler to include debugging information
	during compile.

	This preference is deprecated and should no longer be used.

	Defined in PrefsCollectionTools.

	Defines:    PREFS_SCRIPT_DEBUG
	Depends on: FEATURE_SCOPE

API_PRF_INTERPOLATE_IMAGES	peter

	Enables preference settings to enable smooth zooming of images
	(interpolation).

	Defines   : PREFS_HAVE_INTERPOLATE_IMAGES
	Depends on: nothing

API_PRF_PRINT_JOB_TYPE		peter

	Enable preference setting for controlling print job type (PrintJobType)
	(requires platforms/photon/photon_opprintercontroller.h).

	Defines   : PREFS_HAVE_PRINT_JOB_TYPE
	Depends on: nothing

API_PRF_RUN_IN_TERMINAL		peter

	Enable preference settings for running different external programs,
	such as source viewer, telnet client and e-mail client, in a terminal.
	Settings are available per application.

	Defines   : PREFS_HAVE_RUN_IN_TERMINAL
	Depends on: FEATURE_EXTERNAL_APPLICATIONS

API_PRF_MAIL_APPLICATION	peter

	Enables preference settings for external e-mail client
	(ExternalMailClient and ExtAppParamSpaceSubst).

	Defines   : PREFS_HAVE_MAIL_APP
	Depends on: FEATURE_EXTERNAL_APPLICATIONS

API_PRF_NEWS_APPLICATION	peter

	Enables preference settings for external newsgroup client
	(ExternalNewsClient and ExtAppParamSpaceSubst).

	Defines   : PREFS_HAVE_NEWS_APP
	Depends on: FEATURE_EXTERNAL_APPLICATIONS

API_PRF_PLUGIN_TIMEOUT		peter

	Enables preferences for time-out settings for plug-ins. This is
	used on some systems (notably Unix) where plug-ins run in a separate
	process.

	Defines   : PREFS_HAVE_PLUGIN_TIMEOUT
	Depends on: FEATURE_EXTERNAL_APPLICATIONS

API_PRF_SCRIPT_WINDOW		peter

	Enables preferences for allowing scripts to resize, move, raise and
	lower windows, and changing the status bar.

	Defines   : PREFS_HAVE_SCRIPT_ALLOW

API_PRF_HOTCLICKMENU		peter

	Enables preference for hot click menu (AutomaticSelectMenu).

	Defines   : PREFS_HAVE_HOTCLICK
	Depends on: nothing

API_PRF_FILE_HOTLIST		peter

	Enables preference that names the bookmarks file (HotListFile).

	Defines   : PREFS_HAVE_HOTLIST

API_PRF_FILE_HOTLIST_EXTRA	peter

	Enables preferences that name the additional hotlist files
	(ContactListFile, NoteListFile, MusicListFile, GadgetListFile).

	Defines   : PREFS_HAVE_HOTLIST_EXTRA

API_PRF_FILE_TOOLBARS		peter

	Enables preferences that names toolbar, menu and dialog configuration
	files (ToolbarConfig, MenuConfig, DialogConfig).

	Defines   : PREFS_HAVE_TOOLBARS

API_PRF_FILE_FASTFORWARD	peter

	Enables preferences that names the fast forward file (FastForwardFile).

	Defines   : PREFS_HAVE_FASTFORWARD

API_PRF_COOKIE_DISABLED		peter

	Enable preference that names the last cookie setting when cookies were
	enable, to use in UI so that the cookie setting can have a global
	checkbox "Enable Cookies" and still remember the previous user-entered
	setting when toggling it (DisabledCookieState).

	Defines   : PREFS_HAVE_DISABLED_COOKIE_STATE
	Depends on: nothing

API_PRF_COLORS_TOOLTIP		peter

	Enable preferences for configuring the colors of tooltips. This is used
	for platforms where there is no system definition of a tooltip color,
	so that the user can override a provided hardcoded default
	(OP_SYSTEM_COLOR_TOOLTIP_BACKGROUND, OP_SYSTEM_COLOR_TOOLTIP_TEXT).

	Defines   : PREFS_CSS_TOOLTIP_COLOR
	Depends on: nothing

API_PRF_MAX_COOKIES			peter

	Enable preference for configuring the maximum total number of allowed
	cookies (MaxTotalCookies).

	Defines   : PREFS_HAVE_MAX_COOKIES
	Depends on: nothing

API_PRF_UAMODE				peter

	Enable preference for selecting wheter the User-Agent string should
	identify in handheld or desktop mode (UAMode).

	Defines   : PREFS_HAVE_UAMODE
	Depends on: nothing

API_PRF_CUSTOM_UA			peter

	Enable preference setting to completely customize the User-Agent string
	(CustomUAString).

	Defines   : PREFS_HAVE_CUSTOM_UA
	Depends on: nothing

API_PRF_ERROR_CSS			peter

	Enable preference detailing style sheet for error pages
	(StyleErrorFile).

	Defines   : PREFS_HAVE_ERROR_CSS
	Depends on: FEATURE_LOCALHOST

API_PRF_BYTMOBILE_GUID		peter

	Enable preference for storing ByteMobile GUID (BytemobileGUID).

	Defines   : PREFS_HAVE_EBO_GUID
	Depends on: nothing

API_PRF_FILESELECTOR		peter

	Enable preferences to control what is shown in the file selector
	(FileSelectorShowHiddenFiles, FileSelectorShowDetails).

	Defines   : PREFS_HAVE_FILESELECTOR
	Depends on: UNIX

API_PRF_WORKSPACESTYLE		peter

	Enable preferences to control which workspace style to use
	(WorkSpaceButtonStyle, WorkspaceWindowBorderWidth, WorkspaceButtonType).

	Defines   : PREFS_HAVE_WORKSPACE
	Depends on: UNIX

API_PRF_X_FONTS				peter

	Enable preferences to control which X fonts to use (EnableCoreXFonts,
	EnableXftFonts, DrawAntiAliasedFonts, ForceDPI).

	Defines   : PREFS_HAVE_X_FONTS
	Depends on: UNIX

API_PRF_META_BUTTON			peter

	Enable preference for mapping META to ALT (MapMetaButtonToAltButton).

	Defines   : PREFS_HAVE_META_KEY
	Depends on: UNIX

API_PRF_APPEND_DEFAULT_EXT	peter

	Enable preference for adding default extension to file name if none
	was specified in the file dialogue (AppendExtensionToFilename).

	Defines   : PREFS_HAVE_APPEND_DEFAULT_EXT
	Depends on: UNIX

API_PRF_UNIX				psmaas

	Enable unix prefs collection.

	Defines   : PREFS_HAVE_UNIX
	Depends on: nothing

API_PRF_UNIX_PLUGIN			peter

	Enable preferences and state information for reading plug-ins on
	Unix (HasShownPluginError, ReadingPlugins).

	Defines   : PREFS_HAVE_UNIX_PLUGIN
	Depends on: nothing

API_PRF_LICENSE		peter

	Enable preference for recording information about whether we have
	shown the license (AcceptLicense).

	Defines   : PREFS_HAVE_LICENSE
	Depends on: nothing

API_PRF_DISABLE_OPEN_SAVE	peter

	Enable preferences for disabling document open/document save
	(NoDocSave, NoDocOpen, NoSave, NoOpen).

	Defines   : PREFS_HAVE_DISABLE_OPEN_SAVE
	Depends on: nothing

API_PRF_MIDDLE_MOUSEBUTTON_EXT	peter

	Enable preference for extended middle mosue button action
	(ExtendedCenterMouseButtonAction).

	Defines   : PREFS_HAVE_MIDDLE_MOUSEBUTTON_EXT
	Depends on: nothing

API_PRF_BOOKMARKS_FILE			peter

	Enable preference for bookmark file (BookmarksFile) for the core
	bookmarks module. This replaces the bookmark file preference in
	PrefsCollectionUI, if enabled.

	Defines   : PREFS_HAVE_BOOKMARKS_FILE
	Depends on: FEATURE_BOOKMARKS

API_PRF_DOWNLOAD_FOLDER			peter

	Enables preference for the download folder (OPFILE_DOWNLOAD_FOLDER).
	Please note that you might need to import/define the corresponding
	folder in the util module to use it.

	Defines   : PREFS_HAVE_DOWNLOAD_FOLDER
	Depends on: nothing

API_PRF_BUTTON_FOLDER			peter

	Enables preference for the skin directory (OPFILE_BUTTON_FOLDER).
	Please note that you might need to import/define the corresponding
	folder in the util module to use it.

	Defines   : PREFS_HAVE_BUTTON_FOLDER
	Depends on: nothing

API_PRF_LAST_SITEPATCH_UPDATE_CHECK		markuso

	Enables preference for saving the UTC date/time of the last update
	check. The update check downloads a file with information about
	the current browser.js and current spoof file version.
	The date/time of the laste update check is stored as the number
	of seconds since epoch. You can use e.g. the value of
	static_cast<int>(OpDate::GetCurrentUTCTime()/1000.0). The method
	PrefsCollectionCore::WriteLastSitepatchUpdateCheckNowL() writes
	the current date/time to that preference.

	Defines   : PREFS_HAVE_LAST_SITEPATCH_UPDATE_CHECK
	Depends on: nothing

API_PRF_BROWSERJS_TIMESTAMP			rogerj

	Enables preference for saving the current timestamp that
	belongs to the browser.js file that is installed
	(PrefsCollectionJS::BrowserJSTimeStamp) and the timestamp of
	the browser.js file that is available for download from the
	server (PrefsCollectionJS::BrowserJSServerTimeStamp). This is
	used to keep track of available new browser.js updates.

        Note: the BrowserJSServerTimeStamp and BrowserJSTimeStamp are
        usually only different if an update is available but not yet
        downloaded and installed.

	Defines   : PREFS_HAVE_BROWSERJS_TIMESTAMP
	Depends on: nothing

API_PRF_SPOOF_TIMESTAMP				rogerj

	Enables preference for saving the current timestamp that
	belongs to the override_downloaded.ini file that is installed
	(PrefsCollectionCore::SpoofTimeStamp) and the timestamp of the
	override file that is available for download from the server
	(PrefsCollectionCore::SpoofServerTimeStamp). This is used to
	keep track of available override file updates.

        Note: the SpoofServerTimeStamp and SpoofTimeStamp are usually
        only different if an update is available but not yet
        downloaded and installed.

	Defines   : PREFS_HAVE_SPOOF_TIMESTAMP
	Depends on: nothing

API_PRF_RIM_MDS_BROWSER_MODE		no
	Enables preference for saving the current timestamp that belongs 
	to the override_downloaded.ini file. Used for keeping track of 
	if there is new sitepatching updates available.

	Defines   : PREFS_HAVE_RIM_MDS_BROWSER_MODE
	Depends on: nothing

API_PRF_OPERA_ACCOUNT			adame

	Enables preference collection for preferences related to Opera
	Account for Alien.

	Defines	  : PREFS_HAVE_OPERA_ACCOUNT
	Depends on: nothing

API_PRF_BOOKMARK	adame

	Enables preferences for settings related to the bookmarks
	module.

	Defines : PREFS_HAVE_BOOKMARK
	Depends on : CORE_BOOKMARKS_SUPPORT

API_PRF_APP_INFO		pstanek

	Enables Appication Info preferences.

	Defines : PREFS_HAVE_APP_INFO
	Depends on : nothing

API_PRF_PREFER_IPV6		perarne

	Enables preferences for preferring IPv6 if available.

	Defines : PREFS_HAVE_PREFER_IPV6
	Depends on : nothing

API_PRF_NOTIFIER_ON_COLOR_CHANGED	arjanl

	Enables PrefsNotifier::OnColorChangedL to notify the core
	that a default color has changed

	Defines : PREFS_HAVE_NOTIFIER_ON_COLOR_CHANGED
	Depends on : nothing
	
API_PRF_ANIMATION_THROTTLING		kswitalski

	Enables two preferences related to throttling functionality: 
	LagThresholdForThrottling and SwitchThrottlingInterval. Those are
	used for global control on throttling functionality which can be 
	implemented in various ways but is mainly about descresing CPU
	time consumption by reduction of frequency of repainting the 
	animated content.

	Defines : PREFS_HAVE_ANIMATION_THROTTLING
	Depends on : nothing

API_PRF_HBBTV		wdrazek

	Enables HbbTV preferences.

	Defines : PREFS_HAVE_HBBTV
	Depends on : nothing

API_PRF_FILE_KEYBOARD_CONFIG		pettern

	Enables preferences that names the keyboard configuration file.

	Defines   : PREFS_HAVE_KEYBOARD_CONFIG

API_PRF_FILE_MOUSE_CONFIG			pettern

	Enables preferences that names the mouse configuration file.

	Defines   : PREFS_HAVE_MOUSE_CONFIG

API_PRF_PREFERRED_RENDERER			emoller

	Enables preferences that sets the preferred VEGA renderer to use.

	Defines   : PREFS_HAVE_PREFERRED_RENDERER
