/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2011 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "otl.range";

include "modules/otl/list.h";
include "modules/otl/range.h";

test("OtlRange::IsEmpty()")
{
	OtlList<int> list;
	OtlRange< OtlList<int>::ConstIterator > range;
	verify(range.IsEmpty());

	range = OtlRange< OtlList<int>::ConstIterator >(list.Begin(), list.End());
	verify(range.IsEmpty());
}

test("OtlRange iterate")
{
	OtlList<int> a;

	int i;
	for (i = 0; i < 10; i++)
		verify_success(a.Append(i));

	OtlRange< OtlList<int>::ConstIterator > range(a.Begin(), a.End());

	for (i = 0; !range.IsEmpty(); ++range, ++i)
		verify(*range == i);

	verify(i == 10);
	verify(range.IsEmpty());
	verify(range.Current() == a.End());
}

test("OtlRange iterate and modify")
{
	OtlList<int> a;

	int i;
	for (i = 0; i < 10; i++)
		verify_success(a.Append(i));

	OtlRange< OtlList<int>::Iterator,
			 OtlList<int>::ConstIterator > range(a.Begin(), a.End());

	for (i = 0; !range.IsEmpty(); ++range, ++i)
	{
		verify(*range == i);
		*range += 10;
	}

	verify(i == 10);
	verify(range.IsEmpty());
	verify(range.Current() == a.End());

	OtlList<int>::ConstIterator itr = a.Begin();
	for (i = 10; itr != a.End(); ++itr, ++i)
		verify(*itr == i);
	verify(i == 20);
}

test("OtlRange remove some")
{
	OtlList<int> a;

	int i;
	for (i = 0; i < 10; i++)
		verify_success(a.Append(i));

	OtlRange< OtlList<int>::Iterator,
			 OtlList<int>::ConstIterator > range(a.Begin(), a.End());

	for (i = 0; range; ++range, ++i)
	{
		if (i % 2) a.Remove(range.Current());
		verify(*range == i);
		*range = i + 10;
	}

	verify(i == 10);
	verify(range.IsEmpty());
	verify(range.Current() == a.End());

	OtlList<int>::ConstIterator itr = a.Begin();
	for (i = 5; itr != a.End(); ++itr, ++i)
		verify(*itr == 2*i);
	verify(i == 10);
}

test("OtlRange::FindItem()")
{
	OtlList<int> a;
	for (int i = 0; i < 10; i++)
		verify_success(a.Append(i));

	OtlList<int>::ConstRange range(a.ConstAll());
	verify(range.FindItem(5));
	verify(!range.IsEmpty());
	verify(*range == 5);

	verify(!range.FindItem(4));
	verify(range.IsEmpty());
}
