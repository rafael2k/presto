
TWEAK_CACHE_TRIPLE_RAM_LIMIT			yngve

	Triple the limit for starting to force cached content to disk 
	(from 256KB to 768KB) and don't start writing to disk when the
	size passes 64KB. Data will be flushed later

	This is recommended on platforms that have slow filesystems.

	Used by EPOC

	Category	: performance
	Define		: NEED_URL_CACHE_TRIPLE_LIMIT_FORCE_DISK
	Disabled for: desktop, tv, smartphone, minimal, mini
	Enabled for	: none

TWEAK_CACHE_FLUSH_THRESHOLD_LIMIT		yngve

	This setting defines how long an unlocked, non-persistent-cacheable URL 
	will normally be kept in the cache before it is removed. The default value 
	on desktop is 5 minutes, some other platforms have 1 minute as the limit.
	
	Category	: setting, performance
	Define		: URL_CACHE_FLUSH_THRESHOLD_LIMIT
	Value		: DEFAULT_CACHE_FLUSH_THRESHOLD_LIMIT
	Disabled for: desktop, tv, smartphone, minimal, mini
	Enabled for	: none

TWEAK_CACHE_URL_STORE_SIZE				yngve

	Size of url store. !!MUST!! Be a prime number. See
	modules\libopeay\crypto\bn\bn_prime.h for samples. Adjusted by
	LinkObjectStore implementation to 2729 on most platforms.

	The Prime P should be selected so that for the expected number N of 
	URLs stored at any one time, then N/P is a reasonable value
	compared to log2 N.

	Category		: setting, performance
	Define			: URL_STORE_SIZE
	Value			: 8191
	Value for smartphone	: 509
	Value for tv		: 997
	Value for mini          : 257
	Disabled for		: desktop, minimal

TWEAK_CACHE_MAX_FREE_RESOURCE_COUNT		deprecated

	NOTE: no longer in use.

	Maximum number of cache elements that will be freed and written to
	disk at the same time. If set to 0 all the unfreed elements will be
	flushed at once.
	
	Category		: performance
	Define			: MAX_FREE_RESOURCE_COUNT
	Value			: 0
	Disabled for		: desktop, minimal, smartphone, tv

TWEAK_CACHE_DATADESC_BUFFER_SIZE		yngve

	The size must be even, or UNICODE_DOWNSIZE will wreak havoc.
	On platforms where allocations are inefficient for power of
	two sizes, this value should be reduced by e.g. 128.

	Category		: memory, performance
	Define			: DATADESC_BUFFER_SIZE
	Value			: 65536
	Value for smartphone	: 65536
	Value for tv		: 131072
	Value for desktop	: 131072
	Value for mini          : (8*1024-16)
	Disabled for		: minimal

TWEAK_CACHE_DATADESC_BUFFER_INCREMENT	yngve

	The size must be even, or UNICODE_DOWNSIZE will wreak havoc.
	On platforms where allocations are inefficient for power of
	two sizes, this value should be reduced by e.g. 128.
	
	Category		: memory
	Define			: DATADESC_BUFFER_INCREMENT
	Value			: 16384
	Value for smartphone	: 16384
	Value for tv		: 16384
	Value for mini          : (64*1024-16)
	Disabled for		: desktop, minimal

TWEAK_CACHE_ALWAYS_FLUSH_NOSTORE_URLS	yngve

	Documentation.
	
	Category		: memory
	Define			: ALWAYS_FLUSH_NOSTORE_URLS
	Disabled for	: desktop, tv, smartphone, mini
	Enabled for		: minimal

TWEAK_CACHE_RIM_MAX_NUM_CACHEITEM_REPORT		no

	This modifies the number of cache items the functionality in the cache 
	manager that provides information on the contents of the browser cache 
	can report to the RIM MDS communication stack in a single round.
	
	Increasing this value too high can cause performance problems during startup

	Category	: performance
	Define		: CACHE_TRIM_MAX_NUM_CACHEITEM_REPORT
	Value     : 1
	Disabled for	: desktop, tv, smartphone, minimal, mini

TWEAK_GENERATE_CACHE_ARRAY_WITH_FULL_PATH robertk

	Changes standard behaviour of Cache_Manager::GenerateCacheArray() to return
	full path and filename of the cache item, while without this tweak it returns only filename.

	Category	: setting
	Define		: GENERATE_CACHE_ARRAY_WITH_FULL_PATH
	Disabled for: desktop, tv, smartphone, minimal, mini
	Enabled for	: none

TWEAK_CACHE_NUM_FILES_PER_DELETELIST_PASS		no

	This modifies the number of cache files that will be removed in each pass
	when deleting files from the delete list. If the file system is slow high
	values may cause irresponsiveness of the browser.

	Category				: performance
	Define					: CACHE_NUM_FILES_PER_DELETELIST_PASS
	Value					: 16
	Value for smartphone	: 1
	Disabled for			: desktop, tv, minimal, mini

TWEAK_CACHE_GENERATE_CACHEDIR_FILE	lucav

	Generate the CACHEDIR.TAG file, in the root of the cache directory, to enable backup programs to skip the cache
	directory. For more information see CORE-12590.

	Category	: setting
	Define		: CACHE_GENERATE_CACHEDIR_FILE
	Enabled for	: desktop
	Disabled for: tv, smartphone, minimal, mini

TWEAK_CACHE_FAST_INDEX		lucav

	Enable a faster version of the index read and write methods, to speed-up Opera start-up and shut-down.
	It is supposed to be perfectly equal to the previous version.
	Performance increase is 30-40% for reading, and aroud 10X for writing.
	The number of temporary memory allocations is supposed to go down, but no tests have been done.
	There is a small increase in the code footprint, because of several new classes with inline methods.

	Category	: performance, footprint, memory
	Define		: CACHE_FAST_INDEX
	Depends on	: DISK_CACHE_SUPPORT
	Enabled for	: desktop, smartphone, tv
	Disabled for    : minimal

TWEAK_CACHE_SMALL_FILES_SIZE		lucav

	Put the content of small files directly in the index. The value is the size of the files, 0 disable it.
	This is supposed to improve performances, and it will also reduce the number of files in the cache directory.
	Memory consumption will grow, and so the index size; reading and writing of the index will be slower.
	Estimating the memory consumption is very hard, because it depends on the site.
	These are some "guide numbers", just to have an idea:
	16KB: 90% of files ==> 10% of the size
	8KB: 85% of files ==> 7% of the size
	4KB: 80% of files ==> 4.5% of the size
	2KB: 60% of files ==> 2% of the size
	1KB: 50% of files ==> 1% of the size
	512 bytes: 40% of the files ==> 0.4% of the size
	256 bytes: 30% of the files ==> 0.15% of the size
	128 bytes: 21% of the files ==> 0.07% of the size
	So, assuming a 200 MB cache of 20K files, choosing 2048 we could expect to put on the index 12K files, using
	4 MB of memory.
	Probably most profiles would like to choose a size between 512 and 2048, or just disable it.
	TWEAK_CACHE_SMALL_FILES_LIMIT needs to be defined, to put a limit on the memory consumption.
	TWEAK_CACHE_FAST_INDEX must be enabled.

	Category	: performance, memory
	Define		: CACHE_SMALL_FILES_SIZE
	Depends on	: DISK_CACHE_SUPPORT, CACHE_FAST_INDEX
	Value		: 0
	Value for desktop: 2048
	Value for smartphone: 1024
	Value for tv    : 1024
	Disabled for: minimal, mini
	
TWEAK_CACHE_SMALL_FILES_LIMIT		lucav

	If TWEAK_CACHE_SMALL_FILES_SIZE is enabled, this is the maximum number of bytes that will be embedded on the index.
	0 will disable it with an ASSERT, because the correct way is to disable TWEAK_CACHE_SMALL_FILES_SIZE.
	Desktop (or devices with a lot of memory) should try to enable some MB.
	
	Category	: performance, memory
	Define		: CACHE_SMALL_FILES_LIMIT
	Value		: 0
	Value for desktop : 4194304
	Value for smartphone: 131072
	Value for tv    : 131072
	Depends on		: CACHE_SMALL_FILES_SIZE
	Disabled for: minimal, mini

TWEAK_CACHE_STATS		lucav
	Collect cache statistics; for now this is supposed to be a debug feature, never enabled in a shipping product.
	It also affect opera:cache content.

	Category	: performance, memory
	Define		: CACHE_STATS
	Enabled for	: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_CACHE_ADVANCED_VIEW	lucav
	Enable the "Advanced view" of the cache, that enable preview and filtering in opera:cache.
	To export the files filtered, some code is required. A "demo" is enabled in _DEBUG, to show how things should work (CacheSaveView), but
	Desktop should provide a UI (a FileChooser dialog is probably enough).
	
	Category	: setting
	Define		: CACHE_ADVANCED_VIEW
	Enabled for	: desktop, smartphone, tv
	Disabled for: minimal, mini
	
TWEAK_CACHE_MULTIPLE_FOLDERS		lucav
	Split the cache files in multiple directories. It should be usefull when the number of files is big.
	By default, after a crash there is no check to synchronize the file system.
	If you need to be sure that the file system does not exceed the limit (because of a crash), TWEAK_CACHE_MULTIPLE_FOLDERS_SYNC has to be enabled.
	
	Category	: setting
	Define		: CACHE_MULTIPLE_FOLDERS
	Depends on	: DISK_CACHE_SUPPORT
	Enabled for	: desktop, smartphone, tv
	Disabled for: minimal

TWEAK_CACHE_SYNC		lucav
	At the startup, the file system is synchronized with the index, to avoid excessive growing in case of a crash.
	The CACHE_SYNC_ON_CHANGE value should be tryied for performances, while CACHE_SYNC_FULL is the old mode.
	CACHE_SYNC_ON_CHANGE has a file that signal if the index is out of sync, su a full sync will be done in case
	of a crash, else no sync is required.
	CACHE_SYNC_NONE disable the sync.
	
	Category	: setting, performance, memory
	Define		: CACHE_SYNC
	Value		: CACHE_SYNC_ON_CHANGE
	Value for desktop		: CACHE_SYNC_ON_CHANGE
	Value for smartphone	: CACHE_SYNC_ON_CHANGE
	Value for tv			: CACHE_SYNC_ON_CHANGE
	Value for minimal		: CACHE_SYNC_ON_CHANGE
	Disabled for: mini

TWEAK_CACHE_CONTAINERS_ENTRIES	lucav
	Enabled the "cache containers", that can host more than cache content in a single file.
	It should increase the performances, because a lot less files will be written in the disk.
	It will also speed-up the startup, when the synchronization is required, because less file are present.
	Memory will increase a bit, because of the buffers.
	A container is expected to store only files from the same site.
	
	Category				: performance, memory
	Define					: CACHE_CONTAINERS_ENTRIES
	Value					: 0
	Value for desktop		: 8
	Value for smartphone	: 8
	Value for tv                            : 8
	Depends on				: DISK_CACHE_SUPPORT
	Disabled for			: minimal

TWEAK_CACHE_CONTAINERS_CONTAINER_LIMIT	lucav
	This is the maximum size of the container itself(opposed to TWEAK_CACHE_CONTAINERS_LIMIT,
	that is the size of each single logic file). It is provided to don't go over the "sweet point"
	for performances. This will prevent "big files" to fit in the same container.
	It make more sense if more than one "on the fly" containers are used.
	If in doubt, you can set it as CACHE_CONTAINERS_ENTRIES*CACHE_CONTAINERS_LIMIT
	
	Category	: performance, memory
	Define		: CACHE_CONTAINERS_CONTAINER_LIMIT
	Value		: 65536
	Value for desktop : 65536
	Value for smartphone: 32768
	Value for tv    : 32768
	Depends on		: CACHE_CONTAINERS_ENTRIES
	Disabled for: minimal

TWEAK_CACHE_CONTAINERS_FILE_LIMIT	lucav
	This is the maximum size of the single file cached in a container (opposed to TWEAK_CACHE_CONTAINERS_MAX_SIZE,
	that is the size of the whole container).
	It will be recorded in 16 bytes, to the maximum allowed is 65535;
	
	Category	: performance, memory
	Define		: CACHE_CONTAINERS_FILE_LIMIT
	Value		: 16384
	Value for desktop : 16384
	Value for smartphone: 8192
	Value for tv    : 8192
	Depends on		: CACHE_CONTAINERS_ENTRIES
	Disabled for: minimal

TWEAK_CACHE_CONTAINERS_BUFFERS	lucav
	This is the number of buffers "on the fly" allowed. It affect the memory consumption,
	as more buffers means more memory used.
	
	Category	: performance, memory
	Define		: CACHE_CONTAINERS_BUFFERS
	Value		: 1
	Value for desktop : 5
	Value for smartphone: 3
	Value for tv    : 3
	Depends on		: CACHE_CONTAINERS_ENTRIES
	Disabled for: minimal
	
TWEAK_CACHE_SINGLE_CACHE_LIMIT		yngve

	When enabled this tweak restricts the cachesize for both ordinary 
	cache and the context caches to the cachesize preference setting, with
	10% allocated to context caches, minimum 10KB
	
	When disabled (default) context caches size can be independently controlled,
	with the default being 5% of the disk cache preference, min. 50KB.
	
	Category		: performance
	Define			: CACHE_SINGLE_CACHE_LIMIT
	Disabled for	: desktop, tv, smartphone, minimal, mini
	

TWEAK_STRICT_CACHE_LIMIT	jonnyr

	When enabled all cache items that would cause Opera to pass the cache limit 
	will be generated as an Memory_Only_Storage object.

	Category	: setting
	Define		: STRICT_CACHE_LIMIT2
	Depends on	: DISK_CACHE_SUPPORT
	Enabled for	: smartphone
	Disabled for: tv, minimal, desktop
	
TWEAK_SAFE_FILE_INDEX	lucav
	By defualt the cache now does not use OpSafeFile, but the index code has been slightly modified to
	improve the situations that can arise when the index is truncated. It was done because OpSafeFile seems
	to impact a lot on the performances. Not using OpSafeFile should give better performances, less power usage
	and less probability of having a corrupted index, because it is faster (==less time for a power outgage) and it uses
	less temporary disk space (==less probability to fill the disk). When there is a truncated index, some URLs
	will be lost, opposed to OpSafeFile that restore all of the previous URL (so you can still lose URLs, but the index will be complete).
	
	Category	: performance
	Define		: CACHE_SAFE_FILE
	Depends on	: DISK_CACHE_SUPPORT
	Enabled for	: none
	Disabled for: desktop, tv, smartphone, minimal

TWEAK_CACHE_SIMPLE_STREAM_BUF_SIZE	lucav
	Size of the internal buffer of the "SimpleStream" classes. It could affect performances a lot, on devices.
	On a test on Windows Mobile, the startup time increased a staggering 50% while this value was increased
	trying to reduce the startup time.
	The theory is that it probably exceeded the L1 cache, so half of L1 cache is a starting point (2 KB on that device performed well).
	
	Category	: performance, memory
	Define		: STREAM_BUF_SIZE
	Value		: 2048
	Value for desktop		: 16384
	Value for smartphone	: 2048
	Value for tv			: 1024
	Value for minimal		: 1024
	Disabled for: mini

TWEAK_CACHE_URL_RANGE_INTEGRATION	lucav
	The current implementation is suboptimal and experimental.
	Enable a better integration between cache and URL for HTTP range downloads.
	In the case of files managed with the Multimedia Cache (KMultimedia), this could save bandwidth.
	It's better if the user check for the availability of a range, before trying to load it.
	
	Category	: performance
	Define		: CACHE_URL_RANGE_INTEGRATION
	Enabled for	: none
	Disabled for: desktop, tv, smartphone, minimal, mini

TWEAK_CACHE_PURGE		dagon
	When DISK_CACHE_SUPPORT is disabled and RAMCACHE_ONLY is set, the ns4plugins are still writing tmp data to the cache directory.
	In this situation, TWEAK_CACHE_SYNC is useless and doesn't erase the data after a crash. TWEAK_CACHE_PURGE will clean the cache directory
	every time the cache module is initialized. It fixes ROSAT-35 problem.

	Category	: setting, performance, memory
	Define		: CACHE_PURGE
	Depends on	: DIRECTORY_SEARCH_SUPPORT
	Conflicts with	: DISK_CACHE_SUPPORT
	Enabled for	: 
	Disabled for: desktop, tv, smartphone, minimal, mini

TWEAK_LOCAL_STORAGE_CACHE_LIMIT	kswitalski
	The value of this tweak specifies the maximum size of local files which will be cached in the memory. 
	The higher value is set the better performance can be achieved when using the same local resources repeatedly
	(like in the case of some local benchmarks).
	To disable the functionality of caching local files in memory - just set the tweak value to 0.

	Category	: performance
	Define		: LOCAL_STORAGE_CACHE_LIMIT
	Value		: 65536
	Value for desktop : 65536
	Value for smartphone: 16384
	Disabled for: minimal, tv, mini

TWEAK_CACHE_MAX_VISITED_URL_COUNT	lucav
	This tweak can be used to help Opera reduce the "memory leaks" on devices that can stay on for months and years.
	What it does is to enable AutoSaveCacheL() to throw away URLs that are empty but visited. See CORE-36314.
	These URLs can enter on a sort of gray area, where they are not removed and they just add up till Opera crashes.
	Please note that the higher the value, the more visited URLs are preserved, but also the more RAM could be required.
	URLs are thrown away according to the visited time.
	A value of 0, means that this mechanism is disabled.
	IMPORTANT:
	This tweak is heavily affected by the presence of LowSecurityURLs list. LowSecurityURLs must be DISABLED for this tweak to really
	be effective, else there will be references preventing the URLs from being deleted.
	Check CORE-36314 for details.

	
	Category	: memory
	Define		: CACHE_MAX_VISITED_URL_COUNT
	Value		: 0
	Value for desktop	: 1000
	Value for smartphone: 200
	Value for tv		: 100
	Value for minimal	: 50
	Disabled for: mini
	
TWEAK_CACHE_URL_OBJECT_SIZE_ESTIMATION	lucav
	This value is added to the size of the RAM used by each URL, because for small URLs the size used in the internal structures
	of URL can be much bigger than their size, with the result that Opera keep too many URLs in memory.
	Increasing this value decrease the memory consumption of Opera, but also the number of URLs that can be kept in memory, so
	performances can suffer a bit.

	Category	: memory
	Define		: CACHE_URL_OBJECT_SIZE_ESTIMATION
	Value		: 0
	Value for desktop	: 512
	Value for smartphone: 512
	Value for tv		: 512
	Value for minimal	: 512
	Value for mini		: 512

TWEAK_CACHE_OPTIONAL_SELFTESTS
 
   Enables "non-functional" selftests, typically benchmarks, that slow down spartan without a real reason.
   It can also be used for tests that are not stable enough (though at some point they should be fixed),
   or that require hardware not present on Spartan to pass.

	Category	: setting
	Define		: CACHE_OPTIONAL_SELFTESTS
	Depends on	: FEATURE_SELFTEST
	Enabled for	: none
	Disabled for: desktop, mini, minimal, smartphone, tv
