/* -*- mode: c++; tab-width: 4; c-basic-offset: 4 -*- */

group "layout.tables";

require init;

include "modules/style/src/css_values.h";
include "modules/layout/box/box.h";
include "modules/layout/box/tables.h";
include "modules/layout/content/scrollable.h";
include "modules/layout/traverse/traverse.h";
include "modules/dochand/docman.h";

html
{
	//! <html><body>
	//! </body></html>
}

test("SanityTest")
{
	FramesDocument* doc = state.doc;
	verify(doc != NULL);
	verify(doc->GetDocRoot() != NULL);
}

html
{
	//! <html><body>
	//! <table valign="top">
	//!  <tr>
	//!   <td id="x">x</td>
	//!  </tr>
	//! </table>
	//! </body></html>
}

test("Vertical alignment: TABLE with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "middle"); // VALIGN on TABLE has no effect.
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <col valign="middle"></col>
	//!  <thead valign="top">
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </thead>
	//!  <tbody valign="top">
	//!   <tr>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//!  <tfoot valign="top">
	//!   <tr>
	//!    <td id="z">z</td>
	//!   </tr>
	//!  </tfoot>
	//! </table>
	//! </body></html>
}

test("Vertical align: THEAD, TBODY, TFOOT with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");

	var elm2 = document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "top");

	var elm3 = document.getElementById('z');
	verify(elm3);
	verify(elm3.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <col valign="middle"></col>
	//!  <tbody valign="bottom">
	//!   <tr valign="top">
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: TR with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <col valign="middle"></col>
	//!  <tbody valign="bottom">
	//!   <tr valign="middle">
	//!    <td valign="top" id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: TD with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <col valign="top"></col>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: COL with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
	var elm2 =  document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <colgroup valign="top"></colgroup>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: COLGROUP with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
	var elm2 =  document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <colgroup valign="top">
	//!   <col></col>
	//!  </colgroup>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: COL child of COLGROUP with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
	var elm2 =  document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <colgroup valign="top">
	//!   <col></col>
	//!   <col valign="middle"></col>
	//!  </colgroup>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: COL with VALIGN child of COLGROUP with VALIGN")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
	var elm2 =  document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body>
	//! <table style="vertical-align:top;">
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: TABLE with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body>
	//! <table valign="bottom">
	//!  <col valign="middle">
	//!  <thead style="vertical-align:top;">
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </thead>
	//!  <tbody style="vertical-align:top;">
	//!   <tr>
	//!    <td id="y">y</td>
	//!   </tr>
	//!  </tbody>
	//!  <tfoot style="vertical-align:top;">
	//!   <tr>
	//!    <td id="z">z</td>
	//!   </tr>
	//!  </tfoot>
	//! </table>
	//! </body></html>
}

test("Vertical align: THEAD, TBODY, TFOOT with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");

	var elm2 = document.getElementById('y');
	verify(elm2);
	verify(elm2.currentStyle.verticalAlign == "top");

	var elm3 = document.getElementById('z');
	verify(elm3);
	verify(elm3.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table VALIGN="bottom">
	//!  <col VALIGN="bottom"></col>
	//!  <tbody VALIGN="middle">
	//!   <tr style="vertical-align:top;">
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: TR with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table VALIGN="bottom">
	//!  <col VALIGN="bottom"></col>
	//!  <tbody VALIGN="middle">
	//!   <tr style="vertical-align:bottom;">
	//!    <td style="vertical-align:top;" id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: TD with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
}

html
{
	//! <html><body>
	//! <table>
	//!  <col style="vertical-align:top;"></col>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: COL with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body style="vertical-align:top;">
	//! <table>
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: BODY with vertical-align")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body style="vertical-align:top;">
	//! <table style="vertical-align:inherit;">
	//!  <tbody>
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: BODY with vertical-align, TABLE with vertical-align:inherit")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "middle");
}

html
{
	//! <html><body style="vertical-align:top;">
	//! <table style="vertical-align:inherit;">
	//!  <tbody style="vertical-align:inherit;">
	//!   <tr>
	//!    <td id="x">x</td>
	//!   </tr>
	//!  </tbody>
	//! </table>
	//! </body></html>
}

test("Vertical align: BODY with vertical-align, TABLE and TBODY with vertical-align:inherit")
	require CURRENT_STYLE_SUPPORT;
	language ecmascript;
{
	var elm = document.getElementById('x');
	verify(elm);
	verify(elm.currentStyle.verticalAlign == "top");
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="position:relative; width:1000px; margin:0;">
	//!  <table id="elm1" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td>
	//!     <table id="elm2" cellspacing="0" cellpadding="0">
	//!      <tr>
	//!       <td style="width:75%;">
	//!        <div style="width:100px; height:10px;"></div>
	//!       </td>
	//!       <td>
	//!        <div style="display:inline-block; width:100px; height:10px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:10px;"></div>
	//!       </td>
	//!      </tr>
	//!     </table>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Nested table with percent-width column")
	language ecmascript;
{
	verify(document.getElementById('elm1').offsetWidth == 300);
	verify(document.getElementById('elm2').offsetWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="position:relative; width:1000px; margin:0;">
	//!  <div id="elm1" style="float:left;">
	//!   <table id="elm2" cellspacing="0" cellpadding="0">
	//!    <tr>
	//!     <td style="width:75%;">
	//!      <div style="width:100px; height:10px;"></div>
	//!     </td>
	//!     <td>
	//!      <div style="display:inline-block; width:100px; height:10px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:10px;"></div>
	//!     </td>
	//!    </tr>
	//!   </table>
	//!  </div>
	//! </body>
	//! </html>
}
test("Table with percent-width column in STF-container")
	language ecmascript;
{
	verify(document.getElementById('elm1').offsetWidth == 800);
	verify(document.getElementById('elm2').offsetWidth == 800);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="position:relative; width:1000px; margin:0;">
	//!  <table id="elm1" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td>
	//!     <div style="width:400px;"></div>
	//!     <table id="elm2" cellspacing="0" cellpadding="0">
	//!      <tr>
	//!       <td style="width:75%;">
	//!        <div style="width:100px; height:10px;"></div>
	//!       </td>
	//!       <td>
	//!        <div style="display:inline-block; width:100px; height:10px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:10px;"></div>
	//!       </td>
	//!      </tr>
	//!     </table>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Table with container + table with percent-width column")
	language ecmascript;
{
	verify(document.getElementById('elm1').offsetWidth == 400);
	verify(document.getElementById('elm2').offsetWidth == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="position:relative; width:1000px; margin:0;">
	//!  <table id="elm1" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td>
	//!     <div style="width:900px;"></div>
	//!     <table id="elm2" cellspacing="0" cellpadding="0">
	//!      <tr>
	//!       <td style="width:75%;">
	//!        <div style="width:100px; height:10px;"></div>
	//!       </td>
	//!       <td>
	//!        <div style="display:inline-block; width:100px; height:10px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:10px;"></div>
	//!       </td>
	//!      </tr>
	//!     </table>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Table with wide container + table with percent-width column")
	language ecmascript;
{
	verify(document.getElementById('elm1').offsetWidth == 900);
	verify(document.getElementById('elm2').offsetWidth == 800);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body>
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="table-layout:fixed; width:20px; height:100px;">
	//!   <caption><div style="width:666px; height:10px;"></div></caption>
	//!  </table>
	//! </body>
	//! </html>
}
test("Fixed-width fixed-layout with no columns but wide caption")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 20);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:2000px;">
	//!  <table cellspacing="0" cellpadding="0" style="table-layout:fixed; width:100%; height:100px;">
	//!   <tr>
	//!    <td id="elm">
	//!     <div style="width:666px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("%-width fixed-layout with auto-width cell")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 2000);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:2000px;">
	//!  <table cellspacing="0" cellpadding="0" style="table-layout:fixed; width:100%; height:100px;">
	//!   <tr>
	//!    <td id="elm" style="width:800px;">
	//!     <div style="width:666px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("%-width fixed-layout with fixed-width cell")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 2000);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td style="width:40px; border-right:60px solid transparent;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed right border on cell (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td style="width:40px; border-right:60px solid transparent;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed right border on cell (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td style="width:40px; border-left:60px solid transparent;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed left border on cell (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td style="width:40px; border-left:60px solid transparent;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed left border on cell (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse; border-right:60px solid transparent;">
	//!   <tr>
	//!    <td style="width:40px;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed right border on table (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse; border-right:60px solid transparent;">
	//!   <tr>
	//!    <td style="width:40px;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed right border on table (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse; border-left:60px solid transparent;">
	//!   <tr>
	//!    <td style="width:40px;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed left border on table (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse; border-left:60px solid transparent;">
	//!   <tr>
	//!    <td style="width:40px;">
	//!     <div style="width:1px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed left border on table (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 100);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse; border-right:60px solid transparent;">
	//!   <tr>
	//!    <td>
	//!     <div style="width:50px; height:10px;"></div>
	//!    </td>
	//!    <td>
	//!     <div style="width:50px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsed last border on table, cell with auto width")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 160);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <head><style>td { border:50px solid transparent; }</style></head>
	//! <body style="width:1000px; margin:0;">
	//!  <table cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td><div style="width:50px; height:10px;"></div></td>
	//!    <td><div style="width:50px; height:10px;"></div></td>
	//!   </tr>
	//!   <tr>
	//!    <td><div id="elm" style="width:50px; height:10px;"></div></td>
	//!    <td><div style="width:50px; height:10px;"></div></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("incorrect collapsing on second row")
{
	FramesDocument* doc = state.doc;
	HTML_Element* elm = doc->GetDocRoot()->GetElmById(UNI_L("elm"));

	verify(elm);
	verify(elm->GetLayoutBox());

	IntersectionObject intersection1(doc, LayoutCoord(49), LayoutCoord(115), FALSE);
	intersection1.Traverse(doc->GetDocRoot());
	verify(!intersection1.IsOutOfMemory());
	Box* inner_box1 = intersection1.GetInnerBox();
	verify(inner_box1);
	verify(inner_box1->GetHtmlElement() != elm); // In the border area. Should not hit.

	IntersectionObject intersection2(doc, LayoutCoord(50), LayoutCoord(115), FALSE);
	intersection2.Traverse(doc->GetDocRoot());
	verify(!intersection2.IsOutOfMemory());
	Box* inner_box2 = intersection2.GetInnerBox();
	verify(inner_box2);
	verify(inner_box2->GetHtmlElement() == elm); // In the cell content area. Should hit.
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <colgroup style="border-left:50px solid transparent;">
	//!    <col></col>
	//!    <col></col>
	//!   </colgroup>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing first border of column-group (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <colgroup style="border-right:50px solid transparent;">
	//!    <col></col>
	//!    <col></col>
	//!   </colgroup>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing last border of column-group (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <colgroup style="border-right:50px solid transparent;">
	//!    <col></col>
	//!    <col></col>
	//!   </colgroup>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing first border of column-group (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <colgroup style="border-left:50px solid transparent;">
	//!    <col></col>
	//!    <col></col>
	//!   </colgroup>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing last border of column-group (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <col span="2" style="border-left:50px solid transparent;"></col>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing first border of column with span (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <col span="2" style="border-right:50px solid transparent;"></col>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing last border of column with span (LTR)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <col span="2" style="border-right:50px solid transparent;"></col>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing first border of column with span (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <col span="2" style="border-left:50px solid transparent;"></col>
	//!   <tr>
	//!    <td style="width:100px; height:50px;"></td>
	//!    <td style="width:100px; height:50px;"></td>
	//!   </tr>
	//!  </table>
	//! </body>
	//! </html>
}
test("Collapsing last border of column with span (RTL)")
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr style="border:49px solid transparent;">
	//!    <td id="cell"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_pos = document.getElementById('cell').offsetLeft;
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, change that doesn't affect table size")
	language ecmascript;
{
	verify(document.getElementById('cell').offsetLeft == old_pos);
	verify(document.getElementById('table').offsetWidth == old_width);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr style="border:49px solid transparent;">
	//!    <td id="cell"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_pos = document.getElementById('cell').offsetLeft;
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, change that doesn't affect table size, RTL")
	language ecmascript;
{
	verify(document.getElementById('cell').offsetLeft == old_pos);
	verify(document.getElementById('table').offsetWidth == old_width);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td id="cell1" style="border-right:29px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!    <td id="cell2" style="border-left:50px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell1').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!   document.getElementById('cell2').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, larger cell left border, LTR")
	language ecmascript;
{
	verify(document.getElementById('table').offsetWidth == old_width);
	verify(old_width == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td id="cell1" style="border-right:50px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!    <td id="cell2" style="border-left:29px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell1').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!   document.getElementById('cell2').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, larger cell right border, LTR")
	language ecmascript;
{
	verify(document.getElementById('table').offsetWidth == old_width);
	verify(old_width == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td id="cell1" style="border-left:50px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!    <td id="cell2" style="border-right:29px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell1').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!   document.getElementById('cell2').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, larger cell left border, RTL")
	language ecmascript;
{
	verify(document.getElementById('table').offsetWidth == old_width);
	verify(old_width == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="table" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td id="cell1" style="border-left:29px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!    <td id="cell2" style="border-right:50px solid transparent;"><div style="width:100px; height:100px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   var old_width = document.getElementById('table').offsetWidth;
	//!   document.getElementById('cell1').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!   document.getElementById('cell2').innerHTML = '<div style="width:100px; height:100px;"></div>';
	//!  </script>
	//! </body>
	//! </html>
}
test("Collapsed borders, larger cell right border, RTL")
	language ecmascript;
{
	verify(document.getElementById('table').offsetWidth == old_width);
	verify(old_width == 250);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:ltr;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td></td>
	//!    <td></td>
	//!   </tr>
	//!   <tr>
	//!    <td></td>
	//!    <td style="border-right:9px solid transparent;"></td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Collapsed borders, last cell in second row with border, LTR")
	language ecmascript;
{
	// This is basically a freeze test, but let's verify something as well:

	verify(document.getElementById('elm').offsetWidth == 9);
}

html
{
	//! <!DOCTYPE html>
	//! <html>
	//! <body style="width:1000px; margin:0; direction:rtl;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="border-collapse:collapse;">
	//!   <tr>
	//!    <td></td>
	//!    <td></td>
	//!   </tr>
	//!   <tr>
	//!    <td></td>
	//!    <td style="border-left:9px solid transparent;"></td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Collapsed borders, last cell in second row with border, RTL")
	language ecmascript;
{
	// This is basically a freeze test, but let's verify something as well:

	verify(document.getElementById('elm').offsetWidth == 9);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:1000px;">
	//!  <table id="elm" cellspacing="0" cellpadding="0" style="max-width:85%;">
	//!   <tr>
	//!    <td style="width:300px;"></td>
	//!    <td><div style="width:400px; height:20px;"></div></td>
	//!    <td>
	//!     <div style="display:inline-block; width:100px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:20px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Percentual max-width") // bug CORE-28257
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 850);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:1000px;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td><div style="width:400px; height:20px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   document.body.offsetLeft;
	//!   document.getElementById('elm').style.border = '10px solid transparent';
	//!   var new_width = document.getElementById('elm').offsetWidth;
	//!  </script>
	//! </body></html>
}
test("Change border width")
	language ecmascript;
{
	verify(new_width == 420);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:1000px;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td><div style="width:400px; height:20px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   document.body.offsetLeft;
	//!   document.getElementById('elm').style.padding = '10px';
	//!   var new_width = document.getElementById('elm').offsetWidth;
	//!  </script>
	//! </body></html>
}
test("Change padding width")
	language ecmascript;
{
	verify(new_width == 420);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:1000px;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td><div style="width:400px; height:20px;"></div></td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   document.body.offsetLeft;
	//!   document.getElementById('elm').style.borderSpacing = '10px';
	//!   var new_width = document.getElementById('elm').offsetWidth;
	//!  </script>
	//! </body></html>
}
test("Change border-spacing width")
	language ecmascript;
{
	verify(new_width == 420);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:0;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td nowrap width="200">
	//!     <div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Narrower content in absolute width TD with NOWRAP: strict mode") // Inspired by bug CORE-31458
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 150);
}

html
{
	//! <!DOCTYPE html>
	//! <html><head><style>
	//!  table { table-layout:fixed; border-spacing:2px; border:1px solid transparent; width:100px; }
	//!  td { width:200px; padding:1px; }
	//! </style></head><body>
	//!  <table><tr><td></td></tr></table>
	//!  <table><tr><td><script>document.body.offsetLeft;</script></td></tr> </table>
	//!  <table><tr><td></td></tr></table>
	//! </body></html>
}
test("Cell in fixed-layout table wider than table width") // Inspired by bug CORE-30764
	language ecmascript;
{
	verify(document.getElementsByTagName('table')[0].offsetWidth == 208);
	verify(document.getElementsByTagName('table')[1].offsetWidth == 208);
	verify(document.getElementsByTagName('table')[2].offsetWidth == 208);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:0;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td nowrap width="200">
	//!     <div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Wider content in absolute width TD with NOWRAP: strict mode") // Inspired by bug CORE-31458
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 225);
}

html
{
	//! <html><body style="width:0;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td nowrap width="200">
	//!     <div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Narrower content in absolute width TD with NOWRAP: quirks mode") // Inspired by bug CORE-31458
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 200);
}

html
{
	//! <html><body style="width:0;">
	//!  <table id="elm" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td nowrap width="200">
	//!     <div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>&#x200b;<div style="display:inline-block; width:75px; height:20px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Wider content in absolute width TD with NOWRAP: quirks mode") // Inspired by bug CORE-31458
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 200);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body>
	//!  <table style="table-layout:fixed; width:400px;" cellspacing="0" cellpadding="0">
	//!   <tr>
	//!    <td></td>
	//!    <td id="elm" style="width:300px;">&nbsp;</td>
	//!   </tr>
	//!  </table>
	//!  <script>
	//!   document.body.offsetLeft;
	//!   var oldWidth = document.getElementById('elm').offsetWidth;
	//!   document.getElementById('elm').style.width = 0;
	//!  </script>
	//! </body></html>
}
test("Change width of cell in fixed-layout table") // Inspired by bug CORE-31099
	language ecmascript;
{
	verify(document.getElementById('elm').offsetWidth == 0);
	verify(oldWidth == 300);
}

html
{
	//! <!DOCTYPE html>
	//! <html><head>
	//! <style type="text/css">
	//!     #cell
	//!     {
	//!         border: solid black;
	//!         display: table-cell;
	//!         height: 100px;
	//!         width: 100px;
	//!     }
	//! </style></head>
	//! <body>
	//!    <table>
	//!      <colgroup></colgroup>
	//!      <tr>
	//!        <td id="cell"></td>
	//!      </tr>
	//!    </table>
	//! </body></html>
}
test("Column group width") // Inspired by bug CT-675
{
	HTML_Element* table_element = find_element("table", 1);
	HTML_Element* table_column_group_element = find_element("colgroup", 1);

	verify(OpStatus::IsSuccess(state.doc->Reflow(FALSE)));

	verify(table_element);
	verify(table_element->GetLayoutBox());
	verify(table_element->GetLayoutBox()->GetTableContent());

	verify(table_column_group_element);
	verify(table_column_group_element->GetLayoutBox());
	verify(table_column_group_element->GetLayoutBox()->IsTableBox());
	verify(table_column_group_element->GetLayoutBox()->IsTableColGroup());

	TableColGroupBox *table_column_group_box = (TableColGroupBox*)table_column_group_element->GetLayoutBox();

	verify(table_column_group_box->IsGroup());

	LayoutCoord bg_box_width = table_column_group_box->GetWidth();
	verify (bg_box_width >= 100); // width + default border
}

html
{
	//! <!DOCTYPE html>
	//! <html><head>
	//! <style type="text/css">
	//!     #cell
	//!     {
	//!         border: solid black;
	//!         display: table-cell;
	//!         height: 100px;
	//!         width: 100px;
	//!     }
	//! </style></head>
	//! <body>
	//!    <table>
	//!      <colgroup><col></col></colgroup>
	//!      <tr>
	//!        <td id="cell"></td>
	//!      </tr>
	//!    </table>
	//! </body></html>
}
test("Column width") // Inspired by bug CT-675
{
	HTML_Element* table_element = find_element("table", 1);
	HTML_Element* table_column_element = find_element("col", 1);

	verify(OpStatus::IsSuccess(state.doc->Reflow(FALSE)));

	verify(table_element);
	verify(table_element->GetLayoutBox());
	verify(table_element->GetLayoutBox()->GetTableContent());

	verify(table_column_element);
	verify(table_column_element->GetLayoutBox());
	verify(table_column_element->GetLayoutBox()->IsTableBox());
	verify(table_column_element->GetLayoutBox()->IsTableColGroup());

	TableColGroupBox *table_column_box = (TableColGroupBox*)table_column_element->GetLayoutBox();

	verify(!table_column_box->IsGroup());

	LayoutCoord bg_box_width = table_column_box->GetWidth();
	verify (bg_box_width >= 100); // width + default border
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="width:1000px; position:relative;">
	//!  <table id="elm" style="position:absolute; width:0;" cellspacing="1" cellpadding="1">
	//!   <tr>
	//!    <td>
	//!     <div style="display:inline-block; width:100px; height:100px;"></div>&#x200b;<div style="display:inline-block; width:100px; height:100px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("Absolutely positioned table, width:0") // Inspired by bug CORE-40376
{
	HTML_Element* elm = state.doc->GetDocRoot()->GetElmById(UNI_L("elm"));

	verify(OpStatus::IsSuccess(state.doc->Reflow(FALSE)));

	verify(elm);
	verify(elm->GetLayoutBox());
	verify(elm->GetLayoutBox()->GetTableContent());
	verify(elm->GetLayoutBox()->GetWidth() == 204);
}

html
{
//!<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
//!<html>
//!<head>
//!<style type="text/css">
//!
//!*
//!{
//!	margin:0;padding:0;
//!	border-spacing: 0;
//!	font-size:20px;
//!}
//!
//!table
//!{
//!	table-layout:fixed;
//!	width:100px;
//!	background:lime;
//!	overflow-x:hidden;
//!	overflow-y:visible;
//!	display:table;
//!}
//!
//!td
//!{
//!	padding-left:60px;
//!	height:20px;
//!}
//!
//!div
//!{
//!	overflow:auto;
//!	width:100px;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!
//!<div>
//!<table>
//!	<tr>
//!		<td></td>
//!		<td><span>X</span></td>
//!	</tr>
//!</table>
//!</div>
//!
//!</body>
//!</html>
}
test("table with overflow-x:hidden doesn't cause unwanted scrollbars")
{
	HTML_Element* scrollable_elm = find_element("div", 1);

	verify(scrollable_elm);
	verify(scrollable_elm->GetLayoutBox());

	ScrollableArea* scrollable = scrollable_elm->GetLayoutBox()->GetScrollable();

	verify(scrollable);
	verify(!scrollable->HasHorizontalScrollbar());
}

test("PRECONDITION: AHEM")
{
	short font_number = styleManager->GetFontNumber(UNI_L("AHEM"));
	verify(font_number != -1);
}

language ecmascript;

html
{
//!<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
//!<html>
//!<head>
//!
//!<style type="text/css">
//!
//!*
//!{
//!	margin:0;
//!	padding:0;
//!}
//!
//!table
//!{
//!	width:10000px;
//!	height:20px;
//!	border-spacing:0;
//!	table-layout:fixed;
//!}
//!
//!td.specified_width
//!{
//!	width:0.28%;
//!}
//!
//!col.col1
//!{
//!	width:0.11%;
//!}
//!
//!col.col2
//!{
//!	width:0.05%;
//!}
//!
//!col.col3
//!{
//!	width:0.15%;
//!}
//!
//!</style>
//!
//!</head>
//!<body>
//!
//!<table>
//!	<col class="col1" />
//!	<col class="col2" />
//!	<col class="col3" />
//!	<col />
//!	<col />
//!	<tr>
//!		<td></td>
//!		<td colspan="2"></td>
//!		<td class="specified_width"></td>
//!		<td></td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("column/cell width percentage precise calculation")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 11); // first column width
	verify(document.getElementsByTagName('td')[1].offsetWidth == 20); // second + third columns widths
	verify(document.getElementsByTagName('td')[2].offsetWidth == 28); // third cell (fourth column) width
}

html
{
//!<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
//!<html>
//!<head>
//!
//!<style type="text/css">
//!
//!*
//!{
//!	margin:0;
//!	padding:0;
//!}
//!
//!table
//!{
//!	width:100px;
//!	height:10000px;
//!	border-spacing:0;
//!	table-layout:fixed;
//!}
//!
//!tr.row1
//!{
//!	height:0.17%;
//!}
//!
//!tr.row2
//!{
//!	height:0.13%;
//!}
//!
//!tr.row3
//!{
//!	height:0.22%;
//!}
//!
//!</style>
//!
//!</head>
//!<body>
//!
//!<table>
//!	<tr class="row1">
//!		<td></td>
//!	</tr>
//!	<tr class="row2">
//!		<td rowspan="2"></td>
//!	</tr>
//!	<tr class="row3">
//!	</tr>
//!	<tr>
//!		<td>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("row height percentage precise calculation")
{
	verify(document.getElementsByTagName('td')[0].offsetHeight == 17); // first row height
	verify(document.getElementsByTagName('td')[1].offsetHeight == 35); // second + third row heights
}

html
{
//!<html>
//!<head>
//!<style>
//!*
//!{
//!	font: 20px AHEM;
//!	padding: 0;
//!	margin: 0;
//!}
//!
//!table
//!{
//!	height:100px;
//!	border-spacing:0;
//!}
//!
//!div { height:100%; }
//!
//!</style>
//!</head>
//!<body>
//!
//!<table>
//!	<tr>
//!		<td>
//!			<div>
//!			X
//!			</div>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Table with percentage inner elm height 1, quirks mode")
	require success "PRECONDITION: AHEM";
	/* div's height will became 100% of 100px, which is 100px,
	   despite its content being shorter. */
{
	verify(document.getElementsByTagName('div')[0].offsetHeight == 100);
}

html
{
//!<html>
//!<head>
//!<style>
//!*
//!{
//!	font: 20px AHEM;
//!	padding: 0;
//!	margin: 0;
//!}
//!
//!table
//!{
//!	height:20px;
//!	border-spacing:0;
//!}
//!
//!td > div { height:50%; overflow:hidden;}
//!
//!
//!</style>
//!</head>
//!<body>
//!
//!<table>
//!	<tr>
//!		<td>
//!			<div>
//!			X <br> X <br> X
//!			</div>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Table with percentage inner elm height 2, quirks mode")
	require success "PRECONDITION: AHEM";
	/* Tests overflow different than visible of an element with percentage
	   height that is a descendant of a table cell. Content of the div
	   should not inflate the table. So its final height will be
	   50% of 20px, which is 10px. */
{
	verify(document.getElementsByTagName('tr')[0].offsetHeight == 20);
	verify(document.getElementsByTagName('td')[0].offsetHeight == 20);

	verify(document.getElementsByTagName('div')[0].offsetHeight == 10);
}

html
{
//!<html>
//!<head>
//!<style>
//!*
//!{
//!	font: 20px AHEM;
//!	padding: 0;
//!	margin: 0;
//!}
//!
//!table
//!{
//!	height:1px;
//!	border-spacing:0;
//!}
//!
//!div { height:100%; }
//!
//!</style>
//!</head>
//!<body>
//!
//!<table>
//!	<tr>
//!		<td>
//!			<div>
//!			X
//!			<div>
//!			X
//!			</div>
//!			</div>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Table with percentage nested inner elms 1, quirks mode")
	require success "PRECONDITION: AHEM";
	/* td > div's height should be resolved based on the final row's height
	   div > div's height should be auto. */
{
	verify(document.getElementsByTagName('table')[0].offsetHeight == 40);
	verify(document.getElementsByTagName('tr')[0].offsetHeight == 40);
	verify(document.getElementsByTagName('td')[0].offsetHeight == 40);

	verify(document.getElementsByTagName('div')[0].offsetHeight == 40);
	verify(document.getElementsByTagName('div')[1].offsetHeight == 20);
}

html
{
//!<html>
//!<head>
//!<style>
//!*
//!{
//!	font: 20px AHEM;
//!	padding: 0;
//!	margin: 0;
//!}
//!
//!table
//!{
//!	height:100px;
//!	border-spacing:0;
//!}
//!
//!div { height:100%; }
//!
//!</style>
//!</head>
//!<body>
//!
//!<table>
//!	<tr>
//!		<td>
//!			<div>
//!			X
//!			<div>
//!			X
//!			</div>
//!			</div>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Table with percentage nested inner elms 2, quirks mode")
	require success "PRECONDITION: AHEM";
	/* td > div's height should be resolved based on the final row's height
	   div > div's height should be resolved based on the parent div's height. */
{
	verify(document.getElementsByTagName('table')[0].offsetHeight == 100);
	verify(document.getElementsByTagName('tr')[0].offsetHeight == 100);
	verify(document.getElementsByTagName('td')[0].offsetHeight == 100);

	verify(document.getElementsByTagName('div')[0].offsetHeight == 100);
	verify(document.getElementsByTagName('div')[1].offsetHeight == 100);
}

html
{
//!<html>
//!<head>
//!<style>
//!*
//!{
//!	font: 20px AHEM;
//!	padding: 0;
//!	margin: 0;
//!}
//!
//!table
//!{
//!	height:140px;
//!	border-spacing:0;
//!}
//!
//!#first { height:30px; }
//!#second { height:80%; }
//!
//!</style>
//!</head>
//!<body>
//!
//!<table>
//!	<tr style="height:40px;">
//!		<td>
//!			<div id="first">
//!			X
//!			</div>
//!		</td>
//!	</tr>
//!	<tr>
//!		<td>
//!			<div id="second">
//!			X
//!			</div>
//!		</td>
//!	</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Table with two rows, different inner elms' height, quirks mode")
	require success "PRECONDITION: AHEM";
	/* first div should end up with specified height - 30px.
	   second div should end up with height being 80% of 100px.
	   That 100 is (table's height - first row height). */
{
	verify(document.getElementsByTagName('tr')[0].offsetHeight == 40);
	verify(document.getElementsByTagName('tr')[1].offsetHeight == 100);

	verify(document.getElementById('first').offsetHeight == 30);
	verify(document.getElementById('second').offsetHeight == 80);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:150%;
//!}
//!
//!td + td
//!{
//!	width:100%;
//!}
//!
//!td + td + td
//!{
//!	width:50%;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., percentages > 100%")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 150);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 100);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 50);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:10%;
//!}
//!
//!td + td
//!{
//!	width:20%;
//!}
//!
//!td + td + td
//!{
//!	width:10%;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., percentages < 100%")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 75);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 150);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 75);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:300%;
//!}
//!
//!td + td
//!{
//!	width:100%;
//!}
//!
//!td + td + td
//!{
//!	width:100px;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., one fixed cell, two percentage")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 150);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 50);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 100);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:100%;
//!}
//!
//!td + td
//!{
//!	width:50%;
//!}
//!
//!td + td + td
//!{
//!	width:auto;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., auto cell, two percentage > 100%")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 200);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 100);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 0);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:20%;
//!}
//!
//!td + td
//!{
//!	width:30%;
//!}
//!
//!td + td + td
//!{
//!	width:auto;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., auto cell, two percentage < 100%")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 60);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 90);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 150);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:80%;
//!}
//!
//!td + td
//!{
//!	width:100px;
//!}
//!
//!td + td + td
//!{
//!	width:auto;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., fixed, auto, and percentage cell 1")
	// No space for auto one.
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 200);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 100);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 0);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<head>
//!
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!
//!table
//!{
//!	width:300px;
//!	table-layout:fixed;
//!	border-spacing:0;
//!}
//!
//!td
//!{
//!	width:50%;
//!}
//!
//!td + td
//!{
//!	width:100px;
//!}
//!
//!td + td + td
//!{
//!	width:auto;
//!}
//!
//!</style>
//!</head>
//!
//!<body>
//!<table>
//!<tr>
//!	<td></td>
//!	<td></td>
//!	<td></td>
//!</tr>
//!</table>
//!
//!</body>
//!</html>
}
test("Fixed layout width dist., fixed, auto, and percentage cell 2")
	// Some space left for auto cell.
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 150);
	verify(document.getElementsByTagName('td')[1].offsetWidth == 100);
	verify(document.getElementsByTagName('td')[2].offsetWidth == 50);
}

html
{
//!<!DOCTYPE html>
//!<html>
//!<body>
//!<head>
//!<style>
//!*
//!{
//!	padding:0;
//!	margin:0;
//!}
//!</style>
//!</head>
//!<body>
//!<table style="width:100px;">
//!	<tr>
//!		<td style="width:50px;">&nbsp;</td>
//!		<td>&nbsp;</td>
//!	</tr>
//!	<tr>
//!		<td colspan="2" style="width:100px;">&nbsp;</td>
//!	</tr>
//!</table>
//!</body>
//!</html>
}
test("Cell with colspan > 1 not affecting column desired width")
{
	verify(document.getElementsByTagName('td')[0].offsetWidth == 50);
}
