/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "layout.flexroot";

require init;

include "modules/dochand/viewportcontroller.h";
include "modules/dochand/win.h";
include "modules/doc/frm_doc.h";
include "modules/layout/box/box.h";
include "modules/layout/content/content.h";
include "modules/layout/layout_workplace.h";
include "modules/logdoc/logdoc.h";
include "modules/prefs/prefsmanager/collections/pc_display.h";

global
{
	int old_flexroot_min_width;
	int old_flexroot_max_width;
	unsigned int old_desktop_layout_view_width;
	unsigned int old_desktop_layout_view_height;
	OpViewportRequestListener* old_viewport_request_listener;
	OpViewportInfoListener* old_viewport_info_listener;
}

test("setup") // see bug CORE-28250
{
	old_flexroot_min_width = g_pcdisplay->GetIntegerPref(PrefsCollectionDisplay::FlexRootMinWidth);
	old_flexroot_max_width = state.window->GetFlexRootMaxWidth();

	// Attempt to turn off adaptive zoom stuff enough to make the tests pass.

	ViewportController* vc = state.window->GetViewportController();

	old_desktop_layout_view_width = vc->GetDesktopLayoutViewportWidth();
	old_desktop_layout_view_height = vc->GetDesktopLayoutViewportHeight();
	old_viewport_request_listener = vc->GetViewportRequestListener();
	old_viewport_info_listener = vc->GetViewportInfoListener();

	vc->SetDesktopLayoutViewportSize(0, 0);
	vc->SetViewportRequestListener(NULL);
	vc->SetViewportInfoListener(NULL);
}

test("disable")
	require PREFS_WRITE;
{
	TRAPD(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMinWidth, 0));
	verify(OpStatus::IsSuccess(result));
	state.window->SetFlexRootMaxWidth(0);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:0;">
	//!  <div style="width:2000px; height:100px;"></div>
	//! </body></html>
}
test("enable")
	require PREFS_WRITE;
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == doc->GetLogicalDocument()->GetLayoutWorkplace()->GetLayoutViewMinWidth());

	// Enable

	TRAPD(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMinWidth, 120));
	verify(OpStatus::IsSuccess(result));
	TRAP(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMaxWidth, 1500));
	verify(OpStatus::IsSuccess(result));
	state.window->SetFlexRootMaxWidth(1500);

	doc->Reflow(FALSE);
	root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1500);

	// Disable

	TRAP(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMinWidth, 0));
	verify(OpStatus::IsSuccess(result));
	state.window->SetFlexRootMaxWidth(0);

	doc->Reflow(FALSE);
	root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == doc->GetLogicalDocument()->GetLayoutWorkplace()->GetLayoutViewMinWidth());

	// Enable again

	TRAP(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMinWidth, 120));
	verify(OpStatus::IsSuccess(result));
	TRAP(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMaxWidth, 1500));
	verify(OpStatus::IsSuccess(result));
	state.window->SetFlexRootMaxWidth(1500);

	doc->Reflow(FALSE);
	root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1500);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:500px; height:100px;"></div>
	//! </body></html>
}
test("margin")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//!  <div style="display:inline-block; width:100px; height:100px;"></div>
	//! </body></html>
}
test("inline with small min width and large max width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 120);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:inline-block; width:500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:500px; height:100px;"></div>
	//! </body></html>
}
test("inline with medium min width and large max width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:inline-block; width:1500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:1500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:1500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:1500px; height:100px;"></div>
	//!  <div style="display:inline-block; width:1500px; height:100px;"></div>
	//! </body></html>
}
test("inline with large min width and large max width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1500);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="position:absolute; left:100px; width:300px; height:10px;"></div>
	//! </body></html>
}
test("Abspos with fixed width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="position:absolute; left:100px; width:75%; height:10px;"></div>
	//! </body></html>
}
test("Abspos with percentual width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="position:absolute; left:100px; height:10px;">
	//!   <div style="width:300px; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("Abspos with auto width")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:100px; height:100px;">
	//!   <div style="position:absolute; left:100px; width:300px; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("Abspos with fixed width in fixed-size container")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:100px; height:100px;">
	//!   <div style="position:absolute; left:100px; width:75%; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("Abspos with percentual width in fixed-size container")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:100px; height:100px;">
	//!   <div style="position:absolute; left:100px; height:10px;">
	//!    <div style="width:300px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("Abspos with auto width in fixed-size container")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 400);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:40%;">
	//!   <div style="width:200px; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("40% width container")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:300%;">
	//!   <div style="width:1200px; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("300% width container")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 416);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="width:100%; margin:10px;">
	//!   <div style="width:200px; height:10px;"></div>
	//!  </div>
	//! </body></html>
}
test("100% width container with horizontal margins")
{
	// The margin box is wider than 100% of its containing block, so the horizontal margins won't be propagated.

	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 216);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in auto-layout table")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 216);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table-cell;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//!  <div style="display:table-cell;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in auto-layout table, two cells")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 416);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table cellpadding="0" cellspacing="0" style="width:100px;">
	//!   <tr>
	//!    <td>
	//!     <div style="width:40%;">
	//!      <div style="width:200px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!    <td>
	//!     <div style="width:40%;">
	//!      <div style="width:200px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!   <tr>
	//!    <td colspan="2">
	//!     <div style="width:40%;">
	//!      <div style="width:500px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("% width container in auto-layout table with colspan")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:100%;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout 100% width table")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:100%;">
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout 100% width table, two cells")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1016);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:80%;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout 80% width table")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 641);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:80%;">
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout 80% width table, two cells")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1266);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:400px;">
	//!   <div style="width:40%;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout fixed-width table")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 416);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:400px;">
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!   <div style="display:table-cell;">
	//!    <div style="width:40%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("% width container in fixed-layout fixed-width table, two cells")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 416);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="display:table; table-layout:fixed; width:400px;">
	//!   <div style="display:table-cell; width:500px;">
	//!    <div style="width:200px; height:10px;"></div>
	//!   </div>
	//!  </div>
	//! </body></html>
}
test("wider fixed width cell in fixed-layout fixed-width table")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 516);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table style="table-layout:fixed; width:100%; margin:1px; border:2px solid white; padding:3px; border-spacing:4px;">
	//!   <tr>
	//!    <td style="border:5px solid white; padding:6px;">
	//!     <div style="width:40%; margin:7px; border:8px solid white; padding:9px;">
	//!      <div style="margin:10px; border:11px solid white; padding:12px; width:134px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!    <td style="border:5px solid white; padding:6px;">
	//!     <div style="width:40%; margin:7px; border:8px solid white; padding:9px;">
	//!      <div style="margin:10px; border:11px solid white; padding:12px; width:134px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("% width container and m/b/p in fixed-layout table")
{
	// The margin box is wider than 100% of its containing block, so the horizontal margins won't be propagated.

	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1082);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table style="table-layout:fixed; width:100%; margin:1px; border:2px solid white; padding:3px; border-spacing:4px;">
	//!   <tr>
	//!    <td style="border:5px solid white; padding:6px;">
	//!     <div style="margin:7px; border:8px solid white; padding:9px;">
	//!      <div style="margin:10px; border:11px solid white; padding:12px; width:134px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!    <td style="border:5px solid white; padding:6px;">
	//!     <div style="margin:7px; border:8px solid white; padding:9px;">
	//!      <div style="margin:10px; border:11px solid white; padding:12px; width:134px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("m/b/p in fixed-layout table")
{
	// The margin box is wider than 100% of its containing block, so the horizontal margins won't be propagated.

	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 578);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table cellpadding="0" cellspacing="0" style="table-layout:fixed; width:100%;">
	//!   <tr>
	//!    <td>
	//!     <div style="width:40%;">
	//!      <div style="width:200px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!    <td>
	//!     <div style="width:40%;">
	//!      <div style="width:200px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!   <tr>
	//!    <td colspan="2">
	//!     <div style="width:40%;">
	//!      <div style="width:500px; height:10px;"></div>
	//!     </div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("% width container in fixed-layout table with colspan")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 1266);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table cellpadding="0" cellspacing="0" style="table-layout:fixed; width:100%;">
	//!   <tr>
	//!    <td style="width:25%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td style="width:50px;">
	//!      <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td>
	//!      <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("fixed-layout table, % width cell is widest")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 816);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table cellpadding="0" cellspacing="0" style="table-layout:fixed; width:100%;">
	//!   <tr>
	//!    <td style="width:50%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td style="width:390px;">
	//!      <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td>
	//!      <div style="width:10px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("fixed-layout table, fixed width cell is widest")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 816);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <table cellpadding="0" cellspacing="0" style="table-layout:fixed; width:100%;">
	//!   <tr>
	//!    <td style="width:50%;">
	//!     <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td style="width:10px;">
	//!      <div style="width:200px; height:10px;"></div>
	//!    </td>
	//!    <td>
	//!      <div style="width:390px; height:10px;"></div>
	//!    </td>
	//!   </tr>
	//!  </table>
	//! </body></html>
}
test("fixed-layout table, auto width cell is widest")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 816);
}

html
{
	//! <!DOCTYPE html>
	//! <html><body style="margin:8px;">
	//!  <div style="overflow:hidden;">
	//!   <div style="width:600px; height:100px;"></div>
	//!  </div>
	//! </body></html>
}
test("overflow:hidden")
{
	FramesDocument* doc = state.doc;
	Box* root_box = doc->GetDocRoot()->GetLayoutBox();
	verify(root_box);
	verify(root_box->GetWidth() == 616);
}

test("exit")
{
#ifdef PREFS_WRITE
	TRAPD(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMinWidth, old_flexroot_min_width));
	verify(OpStatus::IsSuccess(result));
	TRAP(result, g_pcdisplay->WriteIntegerL(PrefsCollectionDisplay::FlexRootMaxWidth, old_flexroot_max_width));
	verify(OpStatus::IsSuccess(result));
#endif
	state.window->SetFlexRootMaxWidth(old_flexroot_max_width);

	ViewportController* vc = state.window->GetViewportController();

	vc->SetDesktopLayoutViewportSize(old_desktop_layout_view_width, old_desktop_layout_view_height);
	vc->SetViewportRequestListener(old_viewport_request_listener);
	vc->SetViewportInfoListener(old_viewport_info_listener);
}
