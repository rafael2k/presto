/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */

group "layout.border-radius";

require init;
language ecmascript;

html
{
  //! <!doctype html>
  //! <script>
  //!   // Get the computed style for #box
  //!   function cs()
  //!   {
  //!     return getComputedStyle(document.querySelector("#box"));
  //!   }
  //!
  //!   function curStyle()
  //!   {
  //!     return document.querySelector("#box").currentStyle;
  //!   }
  //!
  //!   // Set the border-radius style for #box.
  //!   function setbr(br)
  //!   {
  //!     document.querySelector("#box").style.borderRadius = br;
  //!   }
  //! </script>
  //! <div id="box"></div>
}

test("border-radius not set")
{
  verify(cs().borderRadius == "0px");
  verify(cs().borderTopLeftRadius == "0px");
  verify(cs().borderTopRightRadius == "0px");
  verify(cs().borderBottomRightRadius == "0px");
  verify(cs().borderBottomLeftRadius == "0px");

  verify(curStyle().borderRadius == "0px");
  verify(curStyle().borderTopLeftRadius == "0px");
  verify(curStyle().borderTopRightRadius == "0px");
  verify(curStyle().borderBottomRightRadius == "0px");
  verify(curStyle().borderBottomLeftRadius == "0px");
}

table BorderRadiusTable(char*, char*, char*, char*, char*, char*)
{
  {
    "0px", // Actual border-radius

    "0px", // Expected computed border-radius
    "0px", // Expected computed border-top-left-radius
    "0px", // Expected computed border-top-right-radius
    "0px", // Expected computed border-bottom-right-radius
    "0px", // Expected computed border-bottom-left-radius
  },
  {
    "1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 3px",

    "1px 3px",
    "1px",
    "3px",
    "1px",
    "3px",
  },
  {
    "1px 3px 5px",

    "1px 3px 5px",
    "1px",
    "3px",
    "5px",
    "3px",
  },
  {
    "1px 3px 5px 7px",

    "1px 3px 5px 7px",
    "1px",
    "3px",
    "5px",
    "7px",
  },
  {
    "1px 3px 5px 7px / 11px",

    "1px 3px 5px 7px / 11px",
    "1px 11px",
    "3px 11px",
    "5px 11px",
    "7px 11px",
  },
  {
    "1px 3px 5px 7px / 11px 13px",

    "1px 3px 5px 7px / 11px 13px",
    "1px 11px",
    "3px 13px",
    "5px 11px",
    "7px 13px",
  },
  {
    "1px 3px 5px 7px / 11px 13px 17px",

    "1px 3px 5px 7px / 11px 13px 17px",
    "1px 11px",
    "3px 13px",
    "5px 17px",
    "7px 13px",
  },
  {
    "1px 3px 5px 7px / 11px 13px 17px 19px",

    "1px 3px 5px 7px / 11px 13px 17px 19px",
    "1px 11px",
    "3px 13px",
    "5px 17px",
    "7px 19px",
  },

  {
    "1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px / 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px / 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px / 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px 1px / 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px 1px / 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px 1px / 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px 1px / 1px 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px 1px / 1px 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px 1px / 1px 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },
  {
    "1px / 1px 1px 1px 1px",

    "1px",
    "1px",
    "1px",
    "1px",
    "1px",
  },

  {
    "1px 3px 1px 3px / 1px 1px 1px 1px",

    "1px 3px / 1px",
    "1px",
    "3px 1px",
    "1px",
    "3px 1px",
  },
  {
    "1px 3px 1px 3px / 1px 3px 1px 3px",

    "1px 3px",
    "1px",
    "3px",
    "1px",
    "3px",
  },
  {
    "1px 3px 1px 3px / 1px 5px 1px 5px",

    "1px 3px / 1px 5px",
    "1px",
    "3px 5px",
    "1px",
    "3px 5px",
  },
  {
    "1px 3px 1px 3px / 1px 5px 7px 5px",

    "1px 3px / 1px 5px 7px",
    "1px",
    "3px 5px",
    "1px 7px",
    "3px 5px",
  },
  {
    "1px 5px 1px 3px / 1px 5px 7px 5px",

    "1px 5px 1px 3px / 1px 5px 7px",
    "1px",
    "5px",
    "1px 7px",
    "3px 5px",
  },
  {
    "0 3px",

    "0px 3px",
    "0px",
    "3px",
    "0px",
    "3px"
  },
  {
    "3px 0",

    "3px 0px",
    "3px",
    "0px",
    "3px",
    "0px"
  },
  {
    "0 / 3px",

    "0px / 3px",
    "0px 3px",
    "0px 3px",
    "0px 3px",
    "0px 3px"
  },
  {
    "0 3px 3px 0",

    "0px 3px 3px 0px",
    "0px",
    "3px",
    "3px",
    "0px"
  }
}

foreach (actual_br, br, brtl, brtr, brbr, brbl) from BorderRadiusTable
{
  // Computed style
  test("border-radius, computed style " actual_br)
  {
    setbr(actual_br);
    verify(cs().borderRadius == br);
    verify(cs().borderTopLeftRadius == brtl);
    verify(cs().borderTopRightRadius == brtr);
    verify(cs().borderBottomRightRadius == brbr);
    verify(cs().borderBottomLeftRadius == brbl);
  }
}

foreach (actual_br, br, brtl, brtr, brbr, brbl) from BorderRadiusTable
{
  // CurrentStyle
  test("border-radius, currentStyle " actual_br)
  {
    setbr(actual_br);
    verify(curStyle().borderRadius == br);
    verify(curStyle().borderTopLeftRadius == brtl);
    verify(curStyle().borderTopRightRadius == brtr);
    verify(curStyle().borderBottomRightRadius == brbr);
    verify(curStyle().borderBottomLeftRadius == brbl);
  }
}
