/* -*- mode: c++; tab-width: 4; c-basic-offset: 4 -*- */

group "layout.viewport.cssom";

require init;

require CSS_VIEWPORT_SUPPORT;

include "modules/doc/frm_doc.h";
include "modules/dochand/win.h";
include "modules/dom/domenvironment.h";
include "modules/dom/src/domobj.h";
include "modules/pi/OpWindow.h";

language C++;

global
{
	UINT32 win_width;
	UINT32 win_height;
}

setup
{
	win_width = 0;
	win_height = 0;
}

test("AHEM")
{
	// Check if the AHEM font is available.
	short font_number = styleManager->GetFontNumber(UNI_L("AHEM"));
	verify(font_number != -1);
}

subtest CheckVisualViewport(INT32 x, INT32 y, INT32 width, INT32 height)
{
	verify(state.doc);

	OpRect visual_viewport = state.doc->GetVisualViewport();

	verify(visual_viewport.Left() == x);
	verify(visual_viewport.Top() == y);
	verify(visual_viewport.width == width);
	verify(visual_viewport.height == height);
}

test("Window setup")
{
	verify(state.doc);

	Window* win = state.doc->GetWindow();
	verify(win);

	OpWindow* op_win = win->GetOpWindow();
	verify(op_win);

	// Store window size.
	op_win->GetInnerSize(&win_width, &win_height);

	// set device:css pixel ratio = 2
	win->SetTrueZoomBaseScale(200);
}

html
{
	//! <!DOCTYPE html>
	//! <style>
	//!   @-o-viewport {
	//!     width: 100%;
	//!     height: 100%;
	//!     zoom: 200%;
	//!   }
	//!
	//!   body { margin: 0; }
	//!
	//!   #abs1 {
	//!     position: absolute;
	//!     left: 50%;
	//!     top: 50%;
	//!     right: 0;
	//!     bottom: 0;
	//!		font-family: Ahem;
	//!		font-size: 10px;
	//!   }
	//!
	//!   #abs2 {
	//!     position: absolute;
	//!     left: 1px;
	//!     top: 1px;
	//!     width: 1px;
	//!     height: 1px;
	//!   }
	//! </style>
	//! <script>
	//!   function checkScrollOffsets(x, y) {
	//!     return (window.pageXOffset == x &&
	//!             window.pageYOffset == y &&
	//!             window.scrollX == x &&
	//!             window.scrollY == y &&
	//!             document.documentElement.scrollLeft == x &&
	//!             document.documentElement.scrollTop == y);
	//!   }
	//!   function storeAbs2Event(ev) {
	//!     window.abs2Event = ev;
	//!   }
	//! </script>
	//! <div id="abs1">XX
	//!   <div id="abs2" onclick="storeAbs2Event(event);"></div>
	//! </div>
}

test("DOMSetup#1")
	require success "Window setup";
{
	verify(state.doc);
	verify_success(state.doc->ConstructDOMEnvironment());

	DOM_Environment* environment = state.doc->GetDOMEnvironment();
	verify(environment);

	DOM_Object* dom_window = environment->GetWindow();
	verify(dom_window);

	ES_Value val;

	DOM_Object::DOMSetNumber(&val, double(win_width));
	dom_window->Put(UNI_L("realWindowWidth"), val);

	DOM_Object::DOMSetNumber(&val, double(win_height));
	dom_window->Put(UNI_L("realWindowHeight"), val);
}

test("Check initial visual viewport#1")
	require success "Window setup";
{
	verify(CheckVisualViewport(0, 0, win_width/4, win_height/4));
}

test("Window.innerWidth")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(window.innerWidth == window.realWindowWidth/4);
}

test("Window.innerHeight")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(window.innerHeight == window.realWindowHeight/4);
}

test("Element.clientWidth for documentElement")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(document.documentElement.clientWidth == window.realWindowWidth/2);
}

test("Element.clientHeight for documentElement")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(document.documentElement.clientHeight == window.realWindowHeight/2);
}

test("Element.scrollWidth for documentElement")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(document.documentElement.scrollWidth == window.realWindowWidth/2);
}

test("Element.scrollHeight for documentElement")
	language ecmascript;
	require success "DOMSetup#1";
{
	verify(document.documentElement.scrollHeight == window.realWindowHeight/2);
}

test("Window.onscroll triggered on setting location.hash")
	language ecmascript;
	async;
	require success "DOMSetup#1";
{
	var timeoutId = setTimeout(function(){ST_failed("Window.onscroll not triggered within 3 seconds after setting location.hash", "viewport-cssom.ot", 188);}, 3000);
	window.onscroll = function(){clearTimeout(timeoutId);ST_passed();};
	location.hash = "abs1";
}

test("Scroll OK#1")
	require success "Window.onscroll triggered on setting location.hash";
{
	verify(state.doc);
	verify(state.doc->GetLayoutViewX() == 0);
	verify(state.doc->GetLayoutViewY() == 0);

	CheckVisualViewport(win_width/4, win_height/4, win_width/4, win_height/4);
}

test("Window.scrollX")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(window.scrollX == window.realWindowWidth/4);
}

test("Window.pageXOffset")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(window.pageXOffset == window.realWindowWidth/4);
}

test("Element.scrollLeft for documentElement")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(document.documentElement.scrollLeft == window.realWindowWidth/4);
}

test("Window.scrollY")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(window.scrollY == window.realWindowHeight/4);
}

test("Window.pageYOffset")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(window.pageYOffset == window.realWindowHeight/4);
}

test("Element.scrollTop for documentElement")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(document.documentElement.scrollTop == window.realWindowHeight/4);
}

test("Document.elementFromPoint()")
	language ecmascript;
	require success "Scroll OK#1";
{
	verify(document.elementFromPoint(0,0).id == "abs1");
	verify(document.elementFromPoint(1,1).id == "abs2");
	verify(document.elementFromPoint(2,2).id == "abs1");
}

test("Element.getClientRects()")
	language ecmascript;
	require success "Scroll OK#1";
{
	var abs2 = document.getElementById("abs2");
	verify(abs2);

	var rects = abs2.getClientRects();
	verify(rects.length == 1);

	var rect = rects.item(0);
	verify(rect);
	verify(rect.left == 1);
	verify(rect.top == 1);
	verify(rect.width == 1);
	verify(rect.height == 1);
}

test("Element.getBoundingClientRect()")
	language ecmascript;
	require success "Scroll OK#1";
{
	var abs2 = document.getElementById("abs2");
	verify(abs2);

	var rect = abs2.getBoundingClientRect();
	verify(rect);
	verify(rect.left == 1);
	verify(rect.top == 1);
	verify(rect.width == 1);
	verify(rect.height == 1);
}

test("Range.getClientRects()")
	language ecmascript;
	require success "AHEM";
	require success "Scroll OK#1";
{
	var abs1 = document.getElementById("abs1");
	verify(abs1);

	var text = abs1.firstChild;
	verify(text);

	var range = document.createRange();
	verify(range);

	range.setStart(text, 1);
	range.setEnd(text, 2);

	var rects = range.getClientRects();
	verify(rects.length == 1);

	var rect = rects.item(0);
	verify(rect);
	verify(rect.left == 10);
	verify(rect.top == 0);
	verify(rect.width == 10);
	verify(rect.height == 10);
}

test("Range.getBoundingClientRect()")
	language ecmascript;
	require success "AHEM";
	require success "Scroll OK#1";
{
	var abs1 = document.getElementById("abs1");
	verify(abs1);

	var text = abs1.firstChild;
	verify(text);

	var range = document.createRange();
	verify(range);

	range.setStart(text, 1);
	range.setEnd(text, 2);

	var rect = range.getBoundingClientRect();
	verify(rect);
	verify(rect.left == 10);
	verify(rect.top == 0);
	verify(rect.width == 10);
	verify(rect.height == 10);
}

test("Trigger click event for #abs2")
	require undefined MOUSELESS;
	require success "Scroll OK#1";
{
	state.doc->MouseDown(win_width/4 + 1, win_height/4 + 1, FALSE, FALSE, FALSE, MOUSE_BUTTON_1);
	state.doc->MouseUp(win_width/4 + 1, win_height/4 + 1, FALSE, FALSE, FALSE, MOUSE_BUTTON_1);
}

test("onclick#abs2")
	language ecmascript;
	require success "Trigger click event for #abs2";
{
	verify(window.abs2Event);
}

test("MouseEvent.clientX")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.clientX == 1);
}

test("MouseEvent.clientY")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.clientY == 1);
}

test("MouseEvent.x")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.x == 1);
}

test("MouseEvent.y")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.y == 1);
}

test("MouseEvent.pageX")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.pageX == window.realWindowWidth/4 + 1);
}

test("MouseEvent.pageY")
	language ecmascript;
	require success "onclick#abs2";
{
	verify(window.abs2Event.pageY == window.realWindowHeight/4 + 1);
}

test("Window.scroll() trigger onscroll")
	language ecmascript;
	async;
	require success "DOMSetup#1";
{
	var timeoutId = setTimeout(function(){ST_failed("Window.onscroll not triggered within 3 seconds after calling Window.scroll()", "viewport-cssom.ot", 402);}, 3000);
	window.onscroll = function(){clearTimeout(timeoutId);ST_passed();};
	window.scroll(13, 17);
}

test("Scroll OK#2")
	require success "Window.scroll() trigger onscroll";
{
	verify(state.doc);
	verify(state.doc->GetLayoutViewX() == 0);
	verify(state.doc->GetLayoutViewY() == 0);

	CheckVisualViewport(13, 17, win_width/4, win_height/4);
}

test("CSSOM Window properties after Window.scroll()")
	language ecmascript;
	require success "Scroll OK#2";
{
	verify(checkScrollOffsets(13, 17));
}

test("Window.scrollTo() trigger onscroll")
	language ecmascript;
	async;
	require success "DOMSetup#1";
{
	var timeoutId = setTimeout(function(){ST_failed("Window.onscroll not triggered within 3 seconds after calling Window.scrollTo()", "viewport-cssom.ot", 429);}, 3000);
	window.onscroll = function(){clearTimeout(timeoutId);ST_passed();};
	window.scrollTo(19, 12);
}

test("Scroll OK#3")
	require success "Window.scrollTo() trigger onscroll";
{
	verify(state.doc);
	verify(state.doc->GetLayoutViewX() == 0);
	verify(state.doc->GetLayoutViewY() == 0);

	CheckVisualViewport(19, 12, win_width/4, win_height/4);
}

test("CSSOM Window properties after Window.scrollTo()")
	language ecmascript;
	require success "Scroll OK#3";
{
	verify(checkScrollOffsets(19, 12));
}

test("Window.scrollBy() trigger onscroll")
	language ecmascript;
	async;
	require success "Scroll OK#3";
{
	var timeoutId = setTimeout(function(){ST_failed("Window.onscroll not triggered within 3 seconds after calling Window.scrollBy()", "viewport-cssom.ot", 456);}, 3000);
	window.onscroll = function(){clearTimeout(timeoutId);ST_passed();};
	window.scrollBy(-9, 3);
}

test("Scroll OK#4")
	require success "Window.scrollBy() trigger onscroll";
{
	verify(state.doc);
	verify(state.doc->GetLayoutViewX() == 0);
	verify(state.doc->GetLayoutViewY() == 0);

	CheckVisualViewport(10, 15, win_width/4, win_height/4);
}

test("CSSOM Window properties after Window.scrollBy()")
	language ecmascript;
	require success "Scroll OK#4";
{
	verify(checkScrollOffsets(10, 15));
}

html
{
	//! <!DOCTYPE html>
	//! <style>
	//!   @-o-viewport {
	//!     width: 100%;
	//!     height: 100%;
	//!     zoom: 200%;
	//!   }
	//!
	//!   body { margin: 0; }
	//!
	//!   #abs1 {
	//!     position: absolute;
	//!     width: 10px;
	//!     height: 10px;
	//!     right: -10px;
	//!     bottom: -10px;
	//!   }
	//! </style>
	//! <script>
	//!   function checkScrollOffsets(x, y) {
	//!     return (window.pageXOffset == x &&
	//!             window.pageYOffset == y &&
	//!             window.scrollX == x &&
	//!             window.scrollY == y &&
	//!             document.documentElement.scrollLeft == x &&
	//!             document.documentElement.scrollTop == y);
	//!   }
	//! </script>
	//! <div id="abs1"></div>
}

test("DOMSetup#2")
	require success "Window setup";
{
	verify(state.doc);
	verify_success(state.doc->ConstructDOMEnvironment());

	DOM_Environment* environment = state.doc->GetDOMEnvironment();
	verify(environment);

	DOM_Object* dom_window = environment->GetWindow();
	verify(dom_window);

	ES_Value val;

	DOM_Object::DOMSetNumber(&val, double(win_width));
	dom_window->Put(UNI_L("realWindowWidth"), val);

	DOM_Object::DOMSetNumber(&val, double(win_height));
	dom_window->Put(UNI_L("realWindowHeight"), val);
}

test("Check initial visual viewport#2")
	require success "Window setup";
{
	verify(CheckVisualViewport(0, 0, win_width/4, win_height/4));
}

test("Element.scrollIntoView() trigger onscroll")
	language ecmascript;
	async;
	require success "DOMSetup#2";
{
	var timeoutId = setTimeout(function(){ST_failed("Window.onscroll not triggered within 3 seconds after calling Element.scrollIntoView()", "viewport-cssom.ot", 543);}, 3000);
	window.onscroll = function(){clearTimeout(timeoutId);ST_passed();};
	document.getElementById("abs1").scrollIntoView(false);
}

test("Scroll OK#5")
	require success "Element.scrollIntoView() trigger onscroll";
{
	verify(state.doc);
	verify(state.doc->GetLayoutViewX() == 10);
	verify(state.doc->GetLayoutViewY() == 10);

	CheckVisualViewport(win_width/4 + 10, win_height/4 + 10, win_width/4, win_height/4);
}

test("CSSOM Window properties after Element.scrollIntoView()")
	language ecmascript;
	require success "Scroll OK#5";
{
	verify(checkScrollOffsets(window.realWindowWidth/4 + 10, window.realWindowHeight/4 + 10));
}
