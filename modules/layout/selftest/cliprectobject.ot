/* -*- mode: c++; tab-width: 4; c-basic-offset: 4 -*- */

group "layout.cliprectobject";

include "modules/doc/frm_doc.h";
include "modules/logdoc/logdoc.h";
include "modules/logdoc/htm_elm.h";
include "modules/layout/traverse/traverse.h";

require init;

html
{
	//! <html><body style="margin: 0; height: 10000px">
	//! <div style="width:100px;height:100px"></div>
	//! </body></html>
}

test("Get clip rect of block container")
{
    FramesDocument* frm_doc = state.doc;

    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();

    HTML_Element *element = find_element("div");

    BOOL second_try = FALSE;
again:

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());

    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);
    verify(ret);

    verify(rect.left == 0);
    verify(rect.top == 0);
    verify(rect.right == 100);
    verify(rect.bottom == 100);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);
    if (!second_try)
    {
		second_try = TRUE;
		goto again;
    }
}

html
{
	//! <html><body style="margin: 0; height: 10000px">
	//! <div style="overflow:hidden;width:100px;height:100px"><div style="height:200px"></div>
	//! </body></html>
}

test("Get clip rect of scrollable block container")
{
    FramesDocument* frm_doc = state.doc;

    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();

    HTML_Element *element = find_element("div", 1);

    BOOL second_try = FALSE;
again:

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());

    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);
    verify(ret);

    verify(rect.left == 0);
    verify(rect.top == 0);
    verify(rect.right == 100);
    verify(rect.bottom == 100);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);
    if (!second_try)
    {
		second_try = TRUE;
		goto again;
    }
}

html
{
	//! <html><body style="margin: 0; height: 10000px">
	//! <div style="width:100px;height:100px"></div>
	//! <div style="position:absolute;top:20px;left:20px;width:50px;height:50px"></div>
	//! </body></html>
}
test("Check overlap with ClipRectObject")
{
    FramesDocument* frm_doc = state.doc;
    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();
    HTML_Element *element = find_element("div", 1);

    BOOL second_try = FALSE;
again:

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());
    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);

	// FALSE means overlap
    verify(ret == FALSE);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);
    if (!second_try)
    {
		second_try = TRUE;
		goto again;
    }
}

html
{
	//! <html><body style="margin: 0; height: 10000px">
	//! <div style="width:100px;height:100px"></div>
	//! <div style="position:absolute;top:200px;left:200px;width:50px;height:50px"></div>
	//! </body></html>
}
test("Check non overlap with CliprectObject")
{
    FramesDocument* frm_doc = state.doc;
    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();
    HTML_Element *element = find_element("div", 2);

    BOOL second_try = FALSE;
again:

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());
    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);

	// TRUE means no overlap
    verify(ret == TRUE);
	verify(rect.left == 200 && rect.top == 200 && rect.right == 250 && rect.bottom == 250);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);
    if (!second_try)
    {
		second_try = TRUE;
		goto again;
    }
}

html
{
	//! <html><body style="margin: 0; height: 10000px">
	//! <div style="position:absolute;top:1000px;left:20px;width:50px;height:50px"></div>
	//! <div style="position:absolute;top:1020px;left:20px;width:50px;height:50px"></div>
	//! </body></html>
}

test("Check overlap with scrolled content")
{
    FramesDocument* frm_doc = state.doc;
    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();
    HTML_Element *element = find_element("div", 1);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());
    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);

    verify(ret == FALSE);
}


html
{
	//! <html><body style="margin: 0">
	//! <div style="position:absolute;top:0px;left:0px;width:50px;height:50px"></div>
	//! <div style="position:absolute;top:50px;left:0px;width:50px;height:50px"></div>
	//! </body></html>
}
test("Check non overlap with adjacent boxes")
{
    FramesDocument* frm_doc = state.doc;
    HTML_Element *root = frm_doc->GetLogicalDocument()->GetRoot();
    HTML_Element *element = find_element("div", 1);

    OpRect new_view(0, 1000, 100, 100);

    frm_doc->RequestScrollIntoView(new_view, SCROLL_ALIGN_TOP, FALSE, VIEWPORT_CHANGE_REASON_SCRIPT_SCROLL);

    CliprectObject cliprect(frm_doc, element->GetLayoutBox());
    cliprect.Traverse(root);

    RECT rect;
    BOOL ret = cliprect.GetCliprect(rect);

    verify(ret == TRUE);

	verify(rect.left == 0);
	verify(rect.top == 0);
	verify(rect.right == 50);
	verify(rect.bottom == 50);
}
