/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2011-2012 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "opdata.UniStringFragmentIterator";

include "modules/opdata/UniStringFragmentIterator.h";

test("empty buffer")
{
	UniString d;
	UniStringFragmentIterator it(d);
	verify(it.GetData() != NULL);
#ifdef OPDATA_UNI_CHAR_ALIGNMENT
	verify(reinterpret_cast<UINTPTR>(it.GetData()) % UNICODE_SIZE(1) == 0);
#endif
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);
}

test("short buffer (embedded mode)")
{
	UniString d;
	verify_success(d.SetConstData(UNI_L("xyz")));
	UniStringFragmentIterator it(d);
	verify(!uni_strncmp(it.GetData(), UNI_L("xyz"), it.GetLength()));
#ifdef OPDATA_UNI_CHAR_ALIGNMENT
	verify(reinterpret_cast<UINTPTR>(it.GetData()) % UNICODE_SIZE(1) == 0);
#endif
	verify(it.GetLength() == 3);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	it.Reset();
	verify(it.GetData() != NULL);
	verify(it.GetLength() != 0);
	verify(!uni_strncmp(it.GetData(), UNI_L("xyz"), it.GetLength()));

	// Last fragment is the same as the first fragment
	it.Reset(false);
	verify(it.GetData() != NULL);
	verify(it.GetLength() != 0);
	verify(!uni_strncmp(it.GetData(), UNI_L("xyz"), it.GetLength()));
}

test("long buffer (normal mode)")
{
	UniString d;
	verify_success(d.SetConstData(UNI_L("012345678911234567892123456789312345678941")));
	verify_success(d.AppendConstData(UNI_L("abcdefghijbbcdefghijcbcdefghijdbcdefghijeb")));
	verify(d.Length() == 84);
	verify(d == UNI_L("012345678911234567892123456789312345678941abcdefghijbbcdefghijcbcdefghijdbcdefghijeb"));

	d.Consume(4);
	d.Trunc(78);
	verify(d.Length() == 78);
	verify(d == UNI_L("45678911234567892123456789312345678941abcdefghijbbcdefghijcbcdefghijdbcdefghij"));

	UniStringFragmentIterator it(d);

	d.Trunc(36);
	verify(d.Length() == 36);
	verify(d == UNI_L("456789112345678921234567893123456789"));

	UniStringFragmentIterator jt(d);
	verify(!uni_strncmp(jt.GetData(), UNI_L("456789112345678921234567893123456789"), jt.GetLength()));
	verify(reinterpret_cast<UINTPTR>(jt.GetData()) % UNICODE_SIZE(1) == 0);
	verify(jt.GetLength() == 36);

	verify(jt.Next() == false);
	verify(jt.GetData() == NULL);
	verify(jt.GetLength() == 0);

	verify(jt.Next() == false);
	verify(jt.GetData() == NULL);
	verify(jt.GetLength() == 0);

	// verify that first iterator still refers to original data
	verify(!uni_strncmp(it.GetData(), UNI_L("45678911234567892123456789312345678941"), it.GetLength()));
	verify(reinterpret_cast<UINTPTR>(it.GetData()) % UNICODE_SIZE(1) == 0);
	verify(it.GetLength() == 38);

	verify(it.Next() == true);
	verify(!uni_strncmp(it.GetData(), UNI_L("abcdefghijbbcdefghijcbcdefghijdbcdefghij"), it.GetLength()));
	verify(reinterpret_cast<UINTPTR>(it.GetData()) % UNICODE_SIZE(1) == 0);
	verify(it.GetLength() == 40);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	it.Reset();
	verify(it.IsValid());
	verify(it.GetData() != NULL);
	verify(it.GetLength() == 38);
	verify(!uni_strncmp(it.GetData(), UNI_L("45678911234567892123456789312345678941"), it.GetLength()));

	it.Reset(false);
	verify(it.IsValid());
	verify(it.GetData() != NULL);
	verify(it.GetLength() == 40);
	verify(!uni_strncmp(it.GetData(), UNI_L("abcdefghijbbcdefghijcbcdefghijdbcdefghij"), it.GetLength()));
}

test("Using UniStringFragmentIterator with operator overloading")
{
	UniString d;
	verify_success(d.SetConstData(UNI_L("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")));
	verify_success(d.AppendConstData(UNI_L("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb")));
	verify_success(d.AppendConstData(UNI_L("cccccccccccccccccccccccccccccccccccccccccc")));
	verify_success(d.AppendConstData(UNI_L("dddddddddddddddddddddddddddddddddddddddddd")));

	size_t i = 0;
	for (UniStringFragmentIterator it(d); it; ++it)
	{
		const uni_char *data_ptr = it.GetData();
		size_t data_len = it.GetLength();
		verify(data_len == 42);
		switch (i++)
		{
			case 0:
				verify(0 == op_memcmp(data_ptr, UNI_L("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"), UNICODE_SIZE(data_len)));
				break;
			case 1:
				verify(0 == op_memcmp(data_ptr, UNI_L("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"), UNICODE_SIZE(data_len)));
				break;
			case 2:
				verify(0 == op_memcmp(data_ptr, UNI_L("cccccccccccccccccccccccccccccccccccccccccc"), UNICODE_SIZE(data_len)));
				break;
			case 3:
				verify(0 == op_memcmp(data_ptr, UNI_L("dddddddddddddddddddddddddddddddddddddddddd"), UNICODE_SIZE(data_len)));
				break;
			default:
				verify(!"This should not happen.");
		}
	}
}
