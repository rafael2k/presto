/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2011-2012 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */
group "opdata.OpDataFragmentIterator";

include "modules/opdata/OpDataFragmentIterator.h";

test("empty buffer")
{
	OpData d;
	OpDataFragmentIterator it(d);
	verify(it.GetData() != NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);
}

test("short buffer (embedded mode)")
{
	OpData d;
	verify_success(d.SetConstData("xyz"));
	OpDataFragmentIterator it(d);
	verify(!op_memcmp(it.GetData(), "xyz", 3));
	verify(it.GetLength() == 3);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	it.Reset();
	verify(it.GetData() != NULL);
	verify(it.GetLength() == 3);
	verify(!op_memcmp(it.GetData(), "xyz", 3));

	// Last fragment is the same as the first fragment
	it.Reset(false);
	verify(it.GetData() != NULL);
	verify(it.GetLength() != 0);
	verify(!op_memcmp(it.GetData(), "xyz", 3));
}

test("long buffer (normal mode)")
{
	OpData d;
	verify_success(d.SetConstData("012345678911234567892123456789312345678941"));
	verify_success(d.AppendConstData("abcdefghijbbcdefghijcbcdefghijdbcdefghijeb"));
	verify(d.Length() == 84);
	verify(d == "012345678911234567892123456789312345678941abcdefghijbbcdefghijcbcdefghijdbcdefghijeb");

	d.Consume(4);
	d.Trunc(78);
	verify(d.Length() == 78);
	verify(d == "45678911234567892123456789312345678941abcdefghijbbcdefghijcbcdefghijdbcdefghij");

	OpDataFragmentIterator it(d);

	d.Trunc(36);
	verify(d.Length() == 36);
	verify(d == "456789112345678921234567893123456789");

	OpDataFragmentIterator jt(d);
	verify(!op_memcmp(jt.GetData(), "456789112345678921234567893123456789", 36));
	verify(jt.GetLength() == 36);

	verify(jt.Next() == false);
	verify(jt.GetData() == NULL);
	verify(jt.GetLength() == 0);

	verify(jt.Next() == false);
	verify(jt.GetData() == NULL);
	verify(jt.GetLength() == 0);

	// verify that first iterator still refers to original data
	verify(!op_memcmp(it.GetData(), "45678911234567892123456789312345678941", 38));
	verify(it.GetLength() == 38);

	verify(it.Next() == true);
	verify(!op_memcmp(it.GetData(), "abcdefghijbbcdefghijcbcdefghijdbcdefghij", 40));
	verify(it.GetLength() == 40);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	verify(it.Next() == false);
	verify(it.GetData() == NULL);
	verify(it.GetLength() == 0);

	it.Reset();
	verify(it.IsValid());
	verify(it.GetData() != NULL);
	verify(it.GetLength() == 38);
	verify(!op_memcmp(it.GetData(), "45678911234567892123456789312345678941", 38));

	it.Reset(false);
	verify(it.IsValid());
	verify(it.GetData() != NULL);
	verify(!op_memcmp(it.GetData(), "abcdefghijbbcdefghijcbcdefghijdbcdefghijeb", 42));
}

test("Using OpDataFragmentIterator with operator overloading")
{
	OpData d;
	verify_success(d.SetConstData("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"));
	verify_success(d.AppendConstData("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"));
	verify_success(d.AppendConstData("cccccccccccccccccccccccccccccccccccccccccc"));
	verify_success(d.AppendConstData("dddddddddddddddddddddddddddddddddddddddddd"));

	size_t i = 0;
	for (OpDataFragmentIterator it(d); it; ++it)
	{
		const char *data_ptr = it.GetData();
		size_t data_len = it.GetLength();
		verify(data_len == 42);
		switch (i++)
		{
			case 0:
				verify(0 == op_memcmp(data_ptr, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", data_len));
				break;
			case 1:
				verify(0 == op_memcmp(data_ptr, "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb", data_len));
				break;
			case 2:
				verify(0 == op_memcmp(data_ptr, "cccccccccccccccccccccccccccccccccccccccccc", data_len));
				break;
			case 3:
				verify(0 == op_memcmp(data_ptr, "dddddddddddddddddddddddddddddddddddddddddd", data_len));
				break;
			default:
				verify(!"This should not happen.");
		}
	}
}

test("OpDataCharIterator with empty string")
{
	OpData d;
	OpDataCharIterator itr(d);
	verify(!itr);
	verify(itr.IsAtEnd());
	verify(!itr.Next());
}

test("OpDataCharIterator")
{
	OpData d;
	verify_success(d.SetConstData(   "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"));
	verify_success(d.AppendConstData("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"));
	verify_success(d.AppendConstData("cccccccccccccccccccccccccccccccccccccccccc"));
	verify_success(d.AppendConstData("dddddddddddddddddddddddddddddddddddddddddd"));

	OpDataCharIterator itr(d);
	verify(itr);
	size_t i;
	const char* expected = "abcd";
	for (i = 0; itr; ++itr, ++i)
		verify(*itr == expected[i/42]);
	verify(i == d.Length());
}
