/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2006-2012 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Krefting
*/

group "windowcommander.writingsystem";

include "modules/windowcommander/WritingSystem.h";

test("From language code")
{
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode(static_cast<const char*>(NULL)));
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode(static_cast<const uni_char*>(NULL)));
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode(""));
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode("r"));
	verify(WritingSystem::Cyrillic == WritingSystem::FromLanguageCode("ru"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromLanguageCode("zh_TW"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromLanguageCode("zh_HK"));
	verify(WritingSystem::ChineseSimplified == WritingSystem::FromLanguageCode("zh_CN"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromLanguageCode("zh-Hant"));
	verify(WritingSystem::ChineseSimplified == WritingSystem::FromLanguageCode("zh-Hans"));
	verify(WritingSystem::ChineseUnknown == WritingSystem::FromLanguageCode("zh"));
	verify(WritingSystem::Japanese == WritingSystem::FromLanguageCode("ja"));
	verify(WritingSystem::Japanese == WritingSystem::FromLanguageCode("ja_JP"));
	verify(WritingSystem::Korean == WritingSystem::FromLanguageCode("ko"));
	// Supported three-letter language codes:
	verify(WritingSystem::LatinUnknown == WritingSystem::FromLanguageCode("moh"));
	verify(WritingSystem::Cherokee == WritingSystem::FromLanguageCode("chr"));
	// These three-letter language codes are not supported:
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode("kom"));
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode("koi"));
	verify(WritingSystem::Unknown == WritingSystem::FromLanguageCode("kpv"));
}

test("From encoding")
{
	verify(WritingSystem::Unknown == WritingSystem::FromEncoding(NULL));
	verify(WritingSystem::Unknown == WritingSystem::FromEncoding(""));
	verify(WritingSystem::Unknown == WritingSystem::FromEncoding("k"));
	verify(WritingSystem::Cyrillic == WritingSystem::FromEncoding("koi8-r"));
	verify(WritingSystem::Cyrillic == WritingSystem::FromEncoding("koi8-u"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromEncoding("big5"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromEncoding("big5-hkscs"));
	verify(WritingSystem::ChineseSimplified == WritingSystem::FromEncoding("gbk"));
	verify(WritingSystem::ChineseSimplified == WritingSystem::FromEncoding("gb18030"));
	verify(WritingSystem::Japanese == WritingSystem::FromEncoding("shift_jis"));
	verify(WritingSystem::Korean == WritingSystem::FromEncoding("euc-kr"));
}

test("From country code")
{
	verify(WritingSystem::Unknown == WritingSystem::FromCountryCode(NULL));
	verify(WritingSystem::Unknown == WritingSystem::FromCountryCode(""));
	verify(WritingSystem::Unknown == WritingSystem::FromCountryCode("n"));
	verify(WritingSystem::Cyrillic == WritingSystem::FromCountryCode("ru"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromCountryCode("tw"));
	verify(WritingSystem::ChineseTraditional == WritingSystem::FromCountryCode("hk"));
	verify(WritingSystem::ChineseSimplified == WritingSystem::FromCountryCode("cn"));
	verify(WritingSystem::Japanese == WritingSystem::FromCountryCode("jp"));
	verify(WritingSystem::Korean == WritingSystem::FromCountryCode("kr"));
}

test("From Unicode string") require WIC_HAVE_WRITINGSYSTEM_FROM_UNICODE;
{
	// ASCII only
	verify(WritingSystem::LatinWestern == WritingSystem::FromUniChars(UNI_L("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")));
	// Other Latin chars
	verify(WritingSystem::LatinUnknown == WritingSystem::FromUniChars(UNI_L("\x0100\x0101\x0102\x0103\x0104\x0105\x0106\x0107\x0108")));
	// Arbitrary characters from the Cyrillic set only
	verify(WritingSystem::Cyrillic == WritingSystem::FromUniChars(UNI_L("\x0400\x0401\x0402\x0403\x047e\x047f\x0480\x0481")));
	verify(WritingSystem::Cyrillic == WritingSystem::FromUniChars(UNI_L("\xa680\xa681\xa682\xa683\xa694\xa695\xa696\xa697")));
	// Arbitrary characters from the Hangul set only
	verify(WritingSystem::Korean == WritingSystem::FromUniChars(UNI_L("\x1100\x1101\x1102\x1103\xffd7\xffda\xffdb\xffdc")));
	// Arbitrary characters from the Hiragana set only
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x3041\x3042\x3043\x3044\x3096\x309d\x309e\x309f")));
	// Arbitrary characters from the Katakana set only
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x30a1\x30a2\x30a3\x30a4\xff71\xff9b\xff9c\xff9d")));
	// Arbitrary characters from the Han set only
	verify(WritingSystem::ChineseUnknown == WritingSystem::FromUniChars(UNI_L("\x2e80\x2e99\x2e9b\x3007\x3021\x303a\x4e00\xfad9")));

	// Arbitrary characters from the Han set plus 1 Hangul character
	verify(WritingSystem::Korean == WritingSystem::FromUniChars(UNI_L("\x2e80\x2e99\x2e9b\x3007\x3021\x303a\x4e00\x1100")));
	// Arbitrary characters from the Han set plus 1 Hiragana character
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x2e80\x2e99\x2e9b\x3007\x3021\x303a\x4e00\x3041")));
	// Arbitrary characters from the Han set plus 1 Katakana character
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x2e80\x2e99\x2e9b\x3007\x3021\x303a\x4e00\x30a1")));

	// Arbitrary characters from the Han set plus some whitespace and punctuation
	verify(WritingSystem::ChineseUnknown == WritingSystem::FromUniChars(UNI_L("\x2e80; \x2e99, \x2e9b	.\x3007%^@\x3021   @#$!#$  \x303a")));
	// Arbitrary characters from the Han set plus 1 Hangul character and some whitespace and punctuation
	verify(WritingSystem::Korean == WritingSystem::FromUniChars(UNI_L("\x2e80; \x2e99, \x2e9b	.\x3007%^@\x3021   @#$!#$  \x1100")));
	// Arbitrary characters from the Han set plus 1 Hiragana character and some whitespace and punctuation
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x2e80; \x2e99, \x2e9b	.\x3007%^@\x3021   @#$!#$  \x3041")));
	// Arbitrary characters from the Han set plus 1 Katakana character and some whitespace and punctuation
	verify(WritingSystem::Japanese == WritingSystem::FromUniChars(UNI_L("\x2e80; \x2e99, \x2e9b	.\x3007%^@\x3021   @#$!#$  \x30a1")));

	// Arbitrary latin characters, with too little Han too make a difference
	verify(WritingSystem::LatinWestern == WritingSystem::FromUniChars(UNI_L("abcdefg \x2e80 hijklmno \x2e99, QWERTY pqrstuvwxyz .\x3007%^@ @#")));

	// FIXME: Add real-life testcases!
}
