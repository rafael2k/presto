group "datastream sizes";

require DATASTREAM_BASE_ENABLED;
require DATASTREAM_PIPE_ENABLED;
require DATASTREAM_BYTEARRAY_ENABLED;
require DATASTREAM_GENERIC_FILE_ENABLED;
require DATASTREAM_SEQUENCE_ENABLED;
require DATASTREAM_REFERENCE_ENABLED;
require DATASTREAM_UINT_ENABLED;

include "modules/datastream/fl_lib.h";
include if defined FORMATS_DATAFILE_ENABLED
	"modules/formats/url_dfr.h";

table Stream_Sizes (const char *, size_t) 
{
	{"DataRecord_Spec", sizeof(DataRecord_Spec)},
	{"DataStream", sizeof(DataStream)},
	{"DataStream_ByteArray_Base", sizeof(DataStream_ByteArray_Base)},
	{"DataStream_ByteArray", sizeof(DataStream_ByteArray)},
	{"DataStream_Pipe", sizeof(DataStream_Pipe)},
	{"DataStream_LengthLimitedPipe", sizeof(DataStream_LengthLimitedPipe)},
	{"DataStream_SequenceBase", sizeof(DataStream_SequenceBase)},
	{"DataStream_BaseRecord", sizeof(DataStream_BaseRecord)},
	{"DataStream_StreamReference", sizeof(DataStream_StreamReference)},
	{"DataStream_UIntBase", sizeof(DataStream_UIntBase)},
}

global{

void TestExtras()
{
#ifdef FORMATS_DATAFILE_ENABLED
	output("%s : %d\n", "DataStream_GenericFile", sizeof(DataStream_GenericFile));
#endif
#ifdef DATASTREAM_USE_FLEXIBLE_SEQUENCE
	output("%s : %d\n", "DataStream_FlexibleSequence", sizeof(DataStream_FlexibleSequence));
#endif
}
}

test("Print sizes")
{
	output("\n");
	iterate(name, size) from Stream_Sizes
	{
		output("%s : %d\n", name, size);
	}
	TestExtras();

	verify(1);
}