<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Indexing and Searching</title>
	<meta name="author" content="Pavel Studen&yacute;" />
	<meta name="company" content="Opera Software" />
	<meta name="contact" content="pavels@opera.com" />
	<meta name="generator" content="Opera Show Generator 1.0" />
	<meta name="title" content="Indexing and Searching" />
	<meta name="version" content="OSF 1.0" />
	<meta http-equiv="Content-Type" content="application/xhtml+xml;charset=utf-8" />
	
	<link rel="stylesheet" href="index.css" type="text/css" media="all" />
</head>
<body>

<!-- start layout section -->
<div class="layout">
<div class="topleft">&nbsp;</div>
<div class="bottomright">&nbsp;</div>
<div class="bottomleft">&nbsp;</div>
<div class="topright">&nbsp;</div>
<!--<div id="promo"><a href="http://www.opera.com/"><img src="img/viewwopera.gif" alt="View with Opera!" /></a></div>-->
</div>
<!-- end layout section -->

<!-- start presentation -->
<div class="presentation">

<!-- start slide -->
<div class="slide" id="slide1">
<h1>Indexing and Searching</h1>
<h2>modules/search_engine</h2>
<h2><img id="smalllogo" src="img/logo.gif" alt="[logo]" /><img id="biglogo" src="img/advisory.png" alt="" />&nbsp;</h2>
</div>
<!-- end slide -->


<!-- start slide -->
<div class="slide">
<h1>Fulltext Searching and Indexing Methods</h1>
<h2>Inverted File Index</h2>
<img src="1/inv_index.png" alt=""/>
<table>
	<tr>
		<th>0:</th><td>What is it?</td>
	</tr>
	<tr>
		<th>1:</th><td>Is it a banana?</td>
	</tr>
	<tr>
		<th>2:</th><td>It is a banana.</td>
	</tr>
</table>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h1>search_engine</h1>
<ul>
<li>disk based</li>
<li>crash safe without safe file replace</li>
<li>low memory usage</li>
<li>indexes gigabytes of data</li>
</ul>
<img src="1/bush.jpg" alt="crash safety" id="bush" />
<span id="bush_comments">Anonymous programmer says about search_engine:<br />
I can't belive it! I had two major crashes in one day and I didn't loose a single bit of data!</span>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<img src="2/classes.gif" alt="class structure" />
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>BlockStorage</h2>
<img src="2/BlockStorage.png" alt="file and journal" />
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>ACT</h2>
<img src="2/act.gif" alt="array compacted trie" />
<table>
	<tr>
		<th>1:</th><td>AT</td>
	</tr>
	<tr>
		<th>2:</th><td>BEE</td>
	</tr>
	<tr>
		<th>3:</th><td>BEAR</td>
	</tr>
	<tr>
		<th>4:</th><td>BEER</td>
	</tr>
</table>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>B-tree</h2>
<img src="2/btree.gif" alt="B-tree example" />
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>BSCursor</h2>
<pre class="code">
BlockStorage bs;
BSCursor c(&amp;bs);
BSCursor::ID id;

c.AddField("ID", 2);         <span class="comment">//2B field</span>
c.AddField("title", 0);      <span class="comment">//variable-length field</span>
c.AddField("timestamp", 4);  <span class="comment">//4B field</span>

<span class="comment">//block header = 12B, ID+timestamp = 6B and the size of the string will be usually less than 41B,</span>
<span class="comment">//hence the block size will be 64B</span>
bs.Open(UNI_L("filename"), BlockStorage::OpenReadWrite, 64);

c.Create();                                            <span class="comment">//initialize a new record</span>
c["ID"].SetValue(4);                                   <span class="comment">//set the first field</span>
c[2].SetValue(0);                                      <span class="comment">//set the third field</span>
c["title"].SetStringValue("string of 23 characters");  <span class="comment">//set the second field</span>
c.Flush();                                             <span class="comment">//write the record to disk</span>
id = c.GetID();                                        <span class="comment">//you can call GetID after Flush</span>

bs.Close();  <span class="comment">//don't use c from here</span>
</pre>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>Other classes</h2>
<ul>
<li>TVector&lt;&gt;</li>
<li>iterators</li>
<li>WordSegmenter</li>
</ul>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h1>Visited Pages Search</h1>
<ul>
<li>indexes pages as they are parsed</li>
<li>maintains simple ranking of pages</li>
<li>index size &gt; 1 GB</li>
</ul>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<h2>Data Analysis</h2>
<ul>
<li>average HTML document contains 300 words</li>
<li>the first 25 of words occur with 30% probability</li>
<li>the first 100 words occur with 50% probability</li>
<li>=&gt; the first 100 words are present in 55% of documents</li>
</ul>
<ul>
<li>one document occupies 10 KB in the index</li>
<li>1 GB index is be divided into 10 subindexes of 100MB =&gt; 10000 documents</li>
<li>non-stop words will occur in up to 5000 documents</li>
</ul>
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<img src="3/vs_design.png" alt="tables" />
</div>
<!-- end slide -->

<!-- start slide -->
<div class="slide">
<div id="slideend">
<h1>Questions?</h1>
<p><a href="pavels@opera.com">pavels@opera.com</a></p>
</div>

<div class="refs">
<h2>References</h2>
<h3>ACT</h3>
<p>
<ul>
<li><a href="http://www.n3labs.com/pdf/fast-and-space-efficient.pdf">
http://www.n3labs.com/pdf/fast-and-space-efficient.pdf</a> - a slightly
different approach, but basically the same as in search_engine.</li>
</ul>
</p>
<h3>B-tree</h3>
<p>
<ul>
<li>Donald E. Knuth, "The Art of Computer Programming",
second edition, volume 3, section 6.2.4, 1997.</li>
<li><a href="http://en.wikipedia.org/wiki/B-tree">Wikipedia</a></li>
</ul>
</p>
</div>
</div>
<!-- end slide -->

</div>
<!-- end presentation -->

</body>
</html>
