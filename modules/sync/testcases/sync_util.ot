/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 1995-2011 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "sync.util";
require SUPPORT_DATA_SYNC;

include "modules/sync/sync_util.h";

table date_strings (const uni_char*, time_t, OP_STATUS)
{
	{ UNI_L("2008-08-19T08:47:41Z"), 1219135661, OpStatus::OK },
	{ UNI_L("2008-08-19T08:47:35Z"), 1219135655, OpStatus::OK },
	{ UNI_L("2008-08-19T08:47:27Z"), 1219135647, OpStatus::OK },
	{ UNI_L("2008-08-19T07:18:38Z"), 1219130318, OpStatus::OK },
	{ UNI_L("2008-08-19T07:18:33Z"), 1219130313, OpStatus::OK },
	{ UNI_L("2008-08-19T07:18:30Z"), 1219130310, OpStatus::OK },
	{ UNI_L("2008-08-19T07:18:25Z"), 1219130305, OpStatus::OK },
	{ UNI_L("2007-03-05T14:49:32Z"), 1173106172, OpStatus::OK },
	{ UNI_L("2007-03-05T14:48:52Z"), 1173106132, OpStatus::OK },
	{ UNI_L("2007-02-27T14:23:54Z"), 1172586234, OpStatus::OK },
	{ UNI_L("2007-02-26T08:40:46Z"), 1172479246, OpStatus::OK },
	{ UNI_L("2007-02-07T15:18:32Z"), 1170861512, OpStatus::OK },
	{ UNI_L("2007-02-05T14:02:49Z"), 1170684169, OpStatus::OK },
	{ UNI_L("2006-04-26T17:23:39Z"), 1146072219, OpStatus::OK },
	{ UNI_L("2006-01-27T19:00:17Z"), 1138388417, OpStatus::OK },
	{ UNI_L("2005-11-03T11:34:15Z"), 1131017655, OpStatus::OK },
	{ UNI_L("2005-11-04T08:24:16Z"), 1131092656, OpStatus::OK },
	{ UNI_L("45-11-04T08:24:16Z"),   0,          OpStatus::ERR},
}

test("RFC3339Date")
{
	iterate(date, corresponding_time, correct_status) from date_strings
	{
		// Translate to a time_t
		time_t time;
		OP_STATUS status = SyncUtil::ParseRFC3339Date(time, date);
		verify(status == correct_status);

		if (OpStatus::IsSuccess(status))
		{
			// Check that the time is right
			verify(time == corresponding_time);

			// Make an RFC3339 date string from it
			OpString rfc_date;
			status = SyncUtil::CreateRFC3339Date(time, rfc_date);
			verify(OpStatus::IsSuccess(status));
			verify(rfc_date.HasContent());

			// Make sure the result is the same that we started with
			verify_string(rfc_date, date);
		}
	}
}

test("GenerateStringGUID")
{
	OpString guid;
	verify_success(SyncUtil::GenerateStringGUID(guid));
	verify(guid.Length() == 32);
}
