/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4; c-file-style: "stroustrup" -*-
 *
 * Copyright (C) 2010-2011 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "Media.MediaState";

require MEDIA_HTML_SUPPORT;

include "modules/media/src/mediastate.h";

test("Initial state")
{
	MediaState s;
	verify(s.GetPreload() == MediaPreload::NONE);
	verify(s.GetNetwork() == MediaNetwork::EMPTY);
	verify(s.GetReady() == MediaReady::NOTHING);
	verify(s.Transition() == FALSE);
}

table AllowedTransitions(MediaPreload::State, MediaNetwork::State, MediaReady::State, // coerced state
						 MediaPreload::State, MediaNetwork::State, MediaReady::State, // current state
						 MediaReady::State /* pending state */, char*)
{
	// preload transitions
	{ MediaPreload::NONE,     MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::METADATA, MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::NOTHING, "preload none->metadata" },
	{ MediaPreload::METADATA, MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::INVOKED,  MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::NOTHING, "preload metadata->invoked" },
	{ MediaPreload::INVOKED,  MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::AUTO,     MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::NOTHING, "preload invoked->auto" },

	// network transitions
	{ MediaPreload::NONE,     MediaNetwork::EMPTY,     MediaReady::NOTHING,      MediaPreload::NONE,     MediaNetwork::NO_SOURCE, MediaReady::NOTHING,      MediaReady::NOTHING,      "RSA 1: EMPTY -> NO_SOURCE" },
	{ MediaPreload::NONE,     MediaNetwork::NO_SOURCE, MediaReady::NOTHING,      MediaPreload::NONE,     MediaNetwork::EMPTY,     MediaReady::NOTHING,      MediaReady::NOTHING,      "RSA 3 : NO_SOURCE -> EMPTY" },
	{ MediaPreload::NONE,     MediaNetwork::NO_SOURCE, MediaReady::NOTHING,      MediaPreload::NONE,     MediaNetwork::LOADING,   MediaReady::NOTHING,      MediaReady::NOTHING,      "RSA 4 / RSA 6.24: NO_SOURCE -> LOADING" },
	{ MediaPreload::NONE,     MediaNetwork::LOADING,   MediaReady::NOTHING,      MediaPreload::NONE,     MediaNetwork::NO_SOURCE, MediaReady::NOTHING,      MediaReady::NOTHING,      "RSA 6.6.3: LOADING -> NO_SOURCE (preload=none)" },
	{ MediaPreload::METADATA, MediaNetwork::LOADING,   MediaReady::NOTHING,      MediaPreload::METADATA, MediaNetwork::NO_SOURCE, MediaReady::NOTHING,      MediaReady::CURRENT_DATA, "RSA 6.6.3: LOADING -> NO_SOURCE (preload=metadata)" },
	{ MediaPreload::NONE,     MediaNetwork::LOADING,   MediaReady::NOTHING,      MediaPreload::NONE,     MediaNetwork::IDLE,      MediaReady::NOTHING,      MediaReady::NOTHING,      "preload=none: LOADING -> IDLE" },
	{ MediaPreload::METADATA, MediaNetwork::LOADING,   MediaReady::CURRENT_DATA, MediaPreload::METADATA, MediaNetwork::IDLE,      MediaReady::CURRENT_DATA, MediaReady::CURRENT_DATA, "preload=metadata: LOADING -> IDLE" },
	{ MediaPreload::AUTO,     MediaNetwork::LOADING,   MediaReady::ENOUGH_DATA,  MediaPreload::AUTO,     MediaNetwork::IDLE,      MediaReady::ENOUGH_DATA,  MediaReady::ENOUGH_DATA,  "preload=auto: LOADING -> IDLE" },
	{ MediaPreload::METADATA, MediaNetwork::IDLE,      MediaReady::CURRENT_DATA, MediaPreload::METADATA, MediaNetwork::LOADING,   MediaReady::CURRENT_DATA, MediaReady::CURRENT_DATA, "preload=metadata: IDLE -> LOADING" },
	{ MediaPreload::AUTO,     MediaNetwork::IDLE,      MediaReady::ENOUGH_DATA,  MediaPreload::AUTO,     MediaNetwork::LOADING,   MediaReady::ENOUGH_DATA,  MediaReady::ENOUGH_DATA,  "preload=auto: IDLE -> LOADING" },
	{ MediaPreload::AUTO,     MediaNetwork::IDLE,      MediaReady::ENOUGH_DATA,  MediaPreload::AUTO,     MediaNetwork::EMPTY,     MediaReady::ENOUGH_DATA,  MediaReady::ENOUGH_DATA,  "load() 4.2: * -> EMPTY" },
	// network vs pending
	{ MediaPreload::METADATA, MediaNetwork::IDLE, MediaReady::METADATA, MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA, MediaReady::CURRENT_DATA, "preload=metadata, readyState<CURRENT_DATA: IDLE -> LOADING" },
	{ MediaPreload::INVOKED,  MediaNetwork::IDLE, MediaReady::METADATA, MediaPreload::INVOKED,  MediaNetwork::LOADING, MediaReady::METADATA, MediaReady::ENOUGH_DATA,  "preload=invoked, readyState<ENOUGH_DATA: IDLE -> LOADING" },
	{ MediaPreload::AUTO,     MediaNetwork::IDLE, MediaReady::METADATA, MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::METADATA, MediaReady::ENOUGH_DATA,  "preload=auto, readyState<ENOUGH_DATA: IDLE -> LOADING" },

	// ready transitions
	{ MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::NOTHING,      MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA,     MediaReady::CURRENT_DATA, "loadedmetadata: NOTHING -> METADATA" },
	{ MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA,     MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::CURRENT_DATA, MediaReady::CURRENT_DATA, "loadeddata: METADATA -> CURRENT_DATA" },
	{ MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::CURRENT_DATA, MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::FUTURE_DATA,  MediaReady::ENOUGH_DATA,  "canplay: CURRENT_DATA -> FUTURE_DATA" },
	{ MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::FUTURE_DATA,  MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::ENOUGH_DATA,  MediaReady::ENOUGH_DATA,  "canplaythrough: FUTURE_DATA -> ENOUGH_DATA" },
	{ MediaPreload::AUTO,     MediaNetwork::IDLE,    MediaReady::ENOUGH_DATA,  MediaPreload::AUTO,     MediaNetwork::IDLE,    MediaReady::FUTURE_DATA,  MediaReady::FUTURE_DATA,  "approaching end: ENOUGH_DATA -> FUTURE_DATA" },
	{ MediaPreload::AUTO,     MediaNetwork::IDLE,    MediaReady::FUTURE_DATA,  MediaPreload::AUTO,     MediaNetwork::IDLE,    MediaReady::CURRENT_DATA, MediaReady::CURRENT_DATA, "ended: FUTURE_DATA -> CURRENT_DATA" },
	{ MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::FUTURE_DATA,  MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::CURRENT_DATA, MediaReady::ENOUGH_DATA,  "waiting: FUTURE_DATA -> CURRENT_DATA" },
	{ MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::ENOUGH_DATA,  MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA,     MediaReady::CURRENT_DATA, "seeking: * -> METADATA" },
	{ MediaPreload::METADATA, MediaNetwork::EMPTY,   MediaReady::METADATA,     MediaPreload::METADATA, MediaNetwork::EMPTY,   MediaReady::NOTHING,      MediaReady::CURRENT_DATA, "load() 4.4: * -> NOTHING" },
}

foreach (coerced_preload, coerced_network, coerced_ready, current_preload, current_network, current_ready, force_loading, desc) from AllowedTransitions
{
	test("Allow: " desc)
	{
		MediaState s(coerced_preload, coerced_network, coerced_ready, current_preload, current_network, current_ready, force_loading);
		verify(s.Transition() == TRUE);
		verify(s.GetPreload() == current_preload);
		verify(s.GetNetwork() == current_network);
		verify(s.GetReady() == current_ready);
		verify(s.Transition() == FALSE);
	}
}

table DisallowedTransitions(MediaPreload::State, MediaNetwork::State, MediaReady::State, // coerced state
							MediaPreload::State, MediaNetwork::State, MediaReady::State, // current state
							BOOL, char*)
{
	// preload transitions
	{ MediaPreload::AUTO,     MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::INVOKED,  MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::ENOUGH_DATA,  "preload auto->invoked" },
	{ MediaPreload::INVOKED,  MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::METADATA, MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::ENOUGH_DATA,  "preload invoked->metadata" },
	{ MediaPreload::METADATA, MediaNetwork::EMPTY, MediaReady::NOTHING, MediaPreload::NONE,     MediaNetwork::EMPTY, MediaReady::NOTHING, MediaReady::CURRENT_DATA, "preload metadata->none" },

	// network vs pending
	{ MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA, MediaPreload::METADATA, MediaNetwork::IDLE, MediaReady::METADATA, MediaReady::CURRENT_DATA, "preload=metadata, readyState<CURRENT_DATA: LOADING -> IDLE" },
	{ MediaPreload::INVOKED,  MediaNetwork::LOADING, MediaReady::METADATA, MediaPreload::INVOKED,  MediaNetwork::IDLE, MediaReady::METADATA, MediaReady::ENOUGH_DATA,  "preload=invoked, readyState<ENOUGH_DATA: LOADING -> IDLE" },
	{ MediaPreload::AUTO,     MediaNetwork::LOADING, MediaReady::METADATA, MediaPreload::AUTO,     MediaNetwork::IDLE, MediaReady::METADATA, MediaReady::ENOUGH_DATA,  "preload=auto, readyState<ENOUGH_DATA: LOADING -> IDLE" },

	// ready transitions
	{ MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::CURRENT_DATA, MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::FUTURE_DATA, MediaReady::CURRENT_DATA, "preload=metadata: CURRENT_DATA -> FUTURE_DATA" },
}

foreach (coerced_preload, coerced_network, coerced_ready, current_preload, current_network, current_ready, force_loading, desc) from DisallowedTransitions
{
	test("Disallow: " desc)
	{
		MediaState s(coerced_preload, coerced_network, coerced_ready, current_preload, current_network, current_ready, force_loading);
		verify(s.Transition() == FALSE);
		verify(s.GetPreload() == coerced_preload);
		verify(s.GetNetwork() == coerced_network);
		verify(s.GetReady() == coerced_ready);
	}
}

test("preload=metadata delays LOADING -> IDLE")
{
	MediaState s(MediaPreload::METADATA, MediaNetwork::LOADING, MediaReady::METADATA,
				 MediaPreload::METADATA, MediaNetwork::IDLE, MediaReady::METADATA,
				 MediaReady::CURRENT_DATA);
	verify(s.Transition() == FALSE);
	s.SetReady(MediaReady::CURRENT_DATA);
	verify(s.Transition() == TRUE);
	verify(s.GetReady() == MediaReady::CURRENT_DATA);
	verify(s.GetNetwork() == MediaNetwork::LOADING);
	verify(s.Transition() == TRUE);
	verify(s.GetReady() == MediaReady::CURRENT_DATA);
	verify(s.GetNetwork() == MediaNetwork::IDLE);
	verify(s.Transition() == FALSE);
}
