/* -*- Mode: js; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2009-2011 Opera Software ASA.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */

group "Media.Formats";
require MEDIA_HTML_SUPPORT;
require init;
language ecmascript;

test("application/ogg")
{
	var a = document.createElement("audio");
	verify(a.canPlayType("application/ogg") == "maybe");
	verify(a.canPlayType("application/ogg; codecs=theora,vorbis") == "probably");
	verify(a.canPlayType("application/ogg; codecs=x-unknown") == "");
	verify(a.canPlayType("application/x-ogg") == "");
}

test("audio/ogg")
{
	var a = document.createElement("audio");
	verify(a.canPlayType("audio/ogg") == "maybe");
	verify(a.canPlayType("audio/ogg; codecs=vorbis") == "probably");
	verify(a.canPlayType("audio/ogg; codecs=x-unknown") == "");
	verify(a.canPlayType("audio/x-ogg") == "");
}

test("audio/wav")
{
	var a = document.createElement("audio");
	function testWaveType(type) {
		verify(a.canPlayType(type) == "maybe");
		verify(a.canPlayType(type+"; codecs=0") == "");
		verify(a.canPlayType(type+"; codecs=1") == "probably");
		verify(a.canPlayType(type+"; codecs=0x0001") == "probably");
		verify(a.canPlayType(type+"; codecs=x") == "");
	}
	testWaveType("audio/wav");
	testWaveType("audio/x-wav");
	testWaveType("audio/wave");
	verify(a.canPlayType("audio/x-wave") == "");

	// test all formats from MMReg.h (result doesn't matter)
	var wav_fmts =
		['0x0001', '0x0002', '0x0003', '0x0004', '0x0005', '0x0006',
		 '0x0007', '0x0008', '0x0009', '0x000A', '0x000B', '0x0010',
		 '0x0011', '0x0012', '0x0013', '0x0014', '0x0015', '0x0016',
		 '0x0017', '0x0018', '0x0019', '0x0020', '0x0021', '0x0022',
		 '0x0023', '0x0024', '0x0025', '0x0026', '0x0027', '0x0028',
		 '0x0030', '0x0031', '0x0032', '0x0033', '0x0034', '0x0035',
		 '0x0036', '0x0037', '0x0038', '0x0039', '0x003A', '0x003B',
		 '0x003C', '0x003D', '0x0040', '0x0041', '0x0042', '0x0050',
		 '0x0052', '0x0053', '0x0055', '0x0059', '0x0060', '0x0061',
		 '0x0062', '0x0063', '0x0064', '0x0065', '0x0067', '0x0069',
		 '0x0070', '0x0071', '0x0072', '0x0073', '0x0074', '0x0075',
		 '0x0076', '0x0077', '0x0078', '0x0079', '0x0080', '0x0081',
		 '0x0082', '0x0083', '0x0084', '0x0085', '0x0086', '0x0088',
		 '0x0089', '0x0091', '0x0092', '0x0093', '0x0094', '0x0097',
		 '0x0098', '0x0099', '0x00A0', '0x0100', '0x0101', '0x0111',
		 '0x0112', '0x0123', '0x0125', '0x0130', '0x0131', '0x0132',
		 '0x0133', '0x0134', '0x0135', '0x0140', '0x0150', '0x0151',
		 '0x0155', '0x0160', '0x0161', '0x0162', '0x0163', '0x0164',
		 '0x0170', '0x0171', '0x0172', '0x0173', '0x0200', '0x0202',
		 '0x0203', '0x0210', '0x0220', '0x0230', '0x0240', '0x0241',
		 '0x0249', '0x0250', '0x0251', '0x0260', '0x0270', '0x0300',
		 '0x0400', '0x0450', '0x0680', '0x0681', '0x1000', '0x1001',
		 '0x1002', '0x1003', '0x1004', '0x1100', '0x1400', '0x1500',
		 '0x1600', '0x1601', '0x1608', '0x1609', '0x160A', '0x160B',
		 '0x2000', '0xFFFE'];
	function verify_type(t) {
		var res = a.canPlayType(t);
		verify(res == "probably" || res == "maybe" || res == "");
	}
	for (var i = 0; i < wav_fmts.length; i++) {
		verify_type("audio/x-wav; codecs="+wav_fmts[i]);
	}
}

test("audio/webm")
{
	var a = document.createElement("audio");
	verify(a.canPlayType("audio/webm") == "maybe");
	verify(a.canPlayType("audio/webm; codecs=vp8") == "probably");
	verify(a.canPlayType("audio/webm; codecs=vorbis") == "probably");
	verify(a.canPlayType("audio/webm; codecs=vp8,vorbis") == "probably");
	verify(a.canPlayType("audio/webm; codecs=x-unknown") == "");
	verify(a.canPlayType("audio/x-webm") == "");
}

test("video/ogg")
{
	var v = document.createElement("video");
	verify(v.canPlayType("video/ogg") == "maybe");
	verify(v.canPlayType("video/ogg; codecs=theora") == "probably");
	verify(v.canPlayType("video/ogg; codecs=theora,vorbis") == "probably");
	verify(v.canPlayType("video/ogg; codecs=x-unknown") == "");
	verify(v.canPlayType("video/x-ogg") == "");
}

test("video/webm")
{
	var v = document.createElement("video");
	verify(v.canPlayType("video/webm") == "maybe");
	verify(v.canPlayType("video/webm; codecs=vp8") == "probably");
	verify(v.canPlayType("video/webm; codecs=vp8.") == "");
	verify(v.canPlayType("video/webm; codecs=vp8.0") == "probably");
	verify(v.canPlayType("video/webm; codecs=vp8.1") == "");
	verify(v.canPlayType("video/webm; codecs=vp8.x") == "");
	verify(v.canPlayType("video/webm; codecs=vorbis") == "probably");
	verify(v.canPlayType("video/webm; codecs=vp8,vorbis") == "probably");
	verify(v.canPlayType("video/webm; codecs=x-unknown") == "");
	verify(v.canPlayType("video/x-webm") == "");
}

test("application/octet-stream")
{
	var v = document.createElement("video");
	verify(v.canPlayType("application/octet-stream") == "");
	verify(v.canPlayType("application/octet-stream; codecs=vorbis") == "");
}

test("whitespace and quotes handling")
{
	var v = document.createElement("video");
	verify(v.canPlayType(" video/ogg ; codecs=theora,vorbis ") == "probably");
	verify(v.canPlayType(" video/ogg ; codecs=theora,x-unknown ") == "");
	verify(v.canPlayType('video/ogg;codecs=" vorbis , theora "') == "probably");
	verify(v.canPlayType('video/ogg;codecs=" vorbis , x-unknown "') == "");
	verify(v.canPlayType('video/ogg;codecs="vorbis,theora"') == "probably");
	verify(v.canPlayType('video/ogg;codecs="vorbis,x-unknown"') == "");
	verify(v.canPlayType('video/ogg;codecs=vorbis,theora') == "probably");
	verify(v.canPlayType('video/ogg;codecs=vorbis,x-unknown') == "");
	verify(v.canPlayType('video/ogg;codecs=vorbis,') == "probably");
	verify(v.canPlayType('video/ogg;codecs=,theora') == "probably");
	// space is not a valid codec separator
	verify(v.canPlayType('video/ogg;codecs=theora vorbis') == "");
	verify(v.canPlayType('video/ogg;codecs="theora vorbis"') == "");
}

test("miscellaneous valid formats")
{
	// this is only to test coverage of the handling
	// of some formats, any reply is acceptable.
	var v = document.createElement("video");
	function verify_type(t) {
		var res = v.canPlayType(t);
		verify(res == "probably" || res == "maybe" || res == "");
	}
	verify_type("video/mpeg");
	verify_type("audio/mpeg");
	verify_type("audio/flac");
	verify_type("audio/x-flac");
	verify_type("video/avi");
	verify_type("video/msvideo");
	verify_type("video/x-msvideo");
	verify_type("video/x-ms-asf");
	verify_type("video/x-ms-wma");
	verify_type("video/x-ms-wmv");
	verify_type("audio/x-matroska");
	verify_type("video/x-matroska");
	verify_type("audio/x-wavpack");
	verify_type("video/x-flv");
	verify_type("video/mp4");
	verify_type("audio/mp4");
	verify_type("audio/quicktime");
	verify_type("video/quicktime");
	verify_type("audio/3gpp");
	verify_type("video/3gpp");
	verify_type("audio/3gpp2");
	verify_type("video/3gpp2");
	verify_type("audio/x-aiff");
	verify_type("audio/x-midi");
}

test("miscellaneous unknown/unsupported")
{
	var a = document.createElement("audio");
	verify(a.canPlayType("application/example") == "");
	verify(a.canPlayType("application/*") == "");
	verify(a.canPlayType("example/foo") == "");
	verify(a.canPlayType("example/*") == "");
	verify(a.canPlayType("image/gif") == "");
	verify(a.canPlayType("image/jpeg") == "");
	verify(a.canPlayType("image/png") == "");
	verify(a.canPlayType("image/svg+xml") == "");
	verify(a.canPlayType("image/*") == "");
	verify(a.canPlayType("message/example") == "");
	verify(a.canPlayType("message/*") == "");
	verify(a.canPlayType("model/example") == "");
	verify(a.canPlayType("model/*") == "");
	verify(a.canPlayType("multipart/example") == "");
	verify(a.canPlayType("multipart/*") == "");
	verify(a.canPlayType("text/html") == "");
	verify(a.canPlayType("text/plain") == "");
	verify(a.canPlayType("text/*") == "");
}

test("invalid MIME types")
{
	var v = document.createElement("video");
	// empty
	verify(v.canPlayType("") == "");
	// missing subtype
	verify(v.canPlayType("audio") == "");
	verify(v.canPlayType("video") == "");
	verify(v.canPlayType("audio/") == "");
	verify(v.canPlayType("video/") == "");
	// random garbage
	verify(v.canPlayType("0xdeadbeef") == "");
	// too many slashes
	verify(v.canPlayType("audio/video/foo") == "");
	// extra=
	verify(v.canPlayType("audio/ogg=") == "");
	// missing semicolon
	//verify(v.canPlayType("audio/ogg codecs=vorbis") == "");
}
