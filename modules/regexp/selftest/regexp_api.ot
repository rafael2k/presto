/* Test the RegExp high-level API.    -*- mode: pike; tab-width: 4 -*- */

group "regexp.api";

language c++;

include "modules/regexp/include/regexp_api.h";

global {
	OpRegExp *re;
	OpREMatchLoc loc;
	int nmatches;
	OpREMatchLoc *locs;
	OP_STATUS res;
}

setup {
	re=NULL;
	locs=NULL;
}

exit {
	OP_DELETE(re);
}

test("Construction 1")
{
	OpREFlags flags;
	flags.multi_line = FALSE;
	flags.case_insensitive = TRUE;
	flags.ignore_whitespace = FALSE;
 	res = OpRegExp::CreateRegExp(&re, UNI_L("a*(b*)c\\S"), &flags);
	verify( res == OpStatus::OK );
}

test("Construction 2")
  require undefined REGEXP_SUBSET;	// subset regexes do not detect syntax errors
{
	OpREFlags flags;
	flags.multi_line = FALSE;
	flags.case_insensitive = TRUE;
	flags.ignore_whitespace = FALSE;
	OpRegExp *re2;
 	res = OpRegExp::CreateRegExp(&re2, UNI_L("*"), &flags);
	verify( res == OpStatus::ERR );
}

test("Construction 3")
{
	OpRegExp *re3;
	OpREFlags flags;
	flags.multi_line        = FALSE;
	flags.case_insensitive  = FALSE;
	flags.ignore_whitespace = TRUE;
	
	res = OpRegExp::CreateRegExp(&re3, UNI_L("a\\02b # comment \n (?P<c_seq> c*)"), &flags);
	verify( res == OpStatus::OK );
	OP_DELETE(re3);
}

test("Regex match API 1") 
  require success "Construction 1";
{
	res = re->Match(UNI_L("xaaBBBBBBCCCCC"),&loc);
	verify( res == OpStatus::OK );
	verify( loc.matchloc ==  1 );
	verify( loc.matchlen == 10 );
}

test("Regex match API 2") 
  require success "Construction 1";
  require undefined REGEXP_SUBSET;	// subset regexes do not have submatches
{
	res = re->Match(UNI_L("xaaBBBBBBCCCCC"),&nmatches, &locs);
	verify( res == OpStatus::OK );
	verify( nmatches == 2 );
	verify( locs != NULL );
	verify( locs[0].matchloc ==  1 );
	verify( locs[0].matchlen == 10 );
	verify( locs[1].matchloc ==  3 );
	verify( locs[1].matchlen ==  6 );
	OP_DELETEA(locs);
	locs=NULL;
}
