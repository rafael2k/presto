/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 1995-2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "device_api.WildcardCmp";

language c++;

include "modules/device_api/WildcardCmp.h";

test("Test wildcard matching")
	require DOM_JIL_API_SUPPORT;
{
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L(""), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L(""), UNI_L("*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L(""), UNI_L("anything"), false));

	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*"), UNI_L("*"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*"), UNI_L("anything"), false));

	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("**"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("**"), UNI_L("*"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("**"), UNI_L("anything"), false));

	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("***"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("***"), UNI_L("*"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("***"), UNI_L("anything"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\*"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("\\*"), UNI_L("*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\*"), UNI_L("anything"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\**"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("\\**"), UNI_L("*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\**"), UNI_L("a"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("\\**"), UNI_L("*a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\**"), UNI_L("a*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("\\**"), UNI_L("a*a"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*\\*"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*\\*"), UNI_L("*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*\\*"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*\\*"), UNI_L("*a"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*\\*"), UNI_L("a*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*\\*"), UNI_L("a*a"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L(""), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L("*"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L("ab"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a"), UNI_L("ba"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("*" ), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("b"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("bb"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("ab"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("ba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("abba"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("Ann"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("Nina"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("Mary"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("Sue"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("Barbarah"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a"), UNI_L("Anabell"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a"), UNI_L("samba"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("*" ), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("b"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("bb"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("ab"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("ba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("abba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("Ann"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("Nina"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("Mary"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("Sue"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("Barbarah"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*"), UNI_L("Anabell"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*"), UNI_L("samba"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L("*" ), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L("b"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L("bb"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("ab"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("ba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("abba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("Ann"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("Nina"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("Mary"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*a*"), UNI_L("Sue"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("Barbarah"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("Anabell"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*a*"), UNI_L("samba"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("*" ), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("bb"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*b*"), UNI_L("ab"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("ba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*b*"), UNI_L("abba"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("Ann"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("Nina"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("Mary"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("Sue"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("Barbarah"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("a*b*"), UNI_L("Anabell"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("a*b*"), UNI_L("samba"), false));

	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L(""), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("*" ), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("a"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("aa"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("b"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("bb"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("ab"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*b*a"), UNI_L("ba"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*b*a"), UNI_L("abba"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Ann"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Nina"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Mary"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Sue"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Barbarah"), false));
	verify(OpBoolean::IS_FALSE == WildcardCmp(UNI_L("*b*a"), UNI_L("Anabell"), false));
	verify(OpBoolean::IS_TRUE == WildcardCmp(UNI_L("*b*a"), UNI_L("samba"), false));
}
