API_DBG_PRINTF						mortenro

	The memory module needs this to improve debugging of memory
	allocations, and debugging the memory module itself.

	Import if: FEATURE_MEMORY_DEBUGGING

API_DLM_GET_MALLOC_STATE_SIZE				mortenro

	The memory state logic needs to be able to determine the
	size of the malloc_state so it can determine if the size
	of the statically allocated memory area used for the
	complete memory state is large enough.

	Import if: FEATURE_3P_LEA_MALLOC

API_DLM_SINGLE_BLOCK					mortenro

	Needed to emulate a limited heap for OOM testing. Memory
	is allocated with op_lowlevel_malloc according to the
	size given to OpMemoryInitLimitedHeap(), and initialized
	as a SingleBlockHeap object which is used to decide OOM
	or not for all subsequent allocations.

	Import if: FEATURE_MEMORY_OOM_EMULATION

API_PI_OPMEMORY_MEMDEBUG_LOCK				mortenro

	The memory debugger needs this when memory operations
	requires protection from threaded access.

	Import if: FEATURE_MEMORY_DEBUGGING, TWEAK_MEMORY_USE_LOCKING

API_MT_CALLSTACK_MANAGER				mortenro

	The memory debugger can use the call-stack database to track
	all call-stacks seen for memory operations.

	Import if: FEATURE_MEMORY_DEBUGGING, TWEAK_MEMORY_CALLSTACK_DATABASE

API_MT_CODELOC_SUPPORT					mortenro

	The memory debugger will try to pretty-print the call-stack
	and provide full details in the logfiles if this is
	enabled through TWEAK_MEMORY_USE_CODELOC.

	Import if: FEATURE_MEMORY_DEBUGGING, TWEAK_MEMORY_USE_CODELOC

API_PI_OPMEMORY_MEMORY_SEGMENT                          mortenro

	Enables a memory allocation API in the OpMemory class, for
	allocating large memory segments from the operating system,
	for use by e.g. pooling.

	Import if: FEATURE_USE_POOLING_MALLOC

API_PI_OPMEMORY_VIRTUAL_MEMORY				mortenro

	Enable the virtual memory API in the OpMemory class, for
	allocating virtual memory segments from the operating system,
	for more effiecient usage of memory.

	Import if: API_MEM_OPERA_MMAP_SEGMENT
	Import if: API_MEM_OPERA_HEAP_SEGMENT

API_PI_OPMEMORY_EXECUTABLE_SEGMENT			mortenro

	Import the executable memory segment functionality from the
	porting interface; it is needed by the OpExecMemoryManager
	class.

	Import if: API_MEM_EXECUTABLE_MEMORY_MANAGER

API_MEM_OPERA_MMAP_SEGMENT				mortenro

	Import the OpMmapSegment code (from ourselves) in order
	to support the code implementing API_MEM_OPERA_MMAP.

	Import if: API_MEM_OPERA_MMAP

API_MEM_OPERA_HEAP_SEGMENT				mortenro

	Import the OpHeapSegment code (from ourselves) in order
	to support the code implementing API_MEM_OPERA_SBRK.

	Import if: API_MEM_OPERA_SBRK

API_MEM_GROPOOL						mortenro

	Enable the GROPOOL allocator so it can be tested.

	Import if: defined(SELFTEST)

API_MEM_OPERA_MMAP_SEGMENT				mortenro

	This is needed for electric fence functionality.

	Import if: TWEAK_MEMORY_ELECTRIC_FENCE

API_PI_OPMEMORY_MALLOC_LOCK				mortenro

	The virtual memory API can optionally use malloc locking.

	Import if: API_PI_OPMEMORY_MEMORY_SEGMENT, TWEAK_MEMORY_USE_LOCKING
	Import if: API_PI_OPMEMORY_VIRTUAL_MEMORY, TWEAK_MEMORY_USE_LOCKING

API_DBG_OPASSERT					danielb

	Import the OP_ASSERT macro for simple assertion testing.

	Import if: TWEAK_MEMORY_ASSERT_ON_OOM
