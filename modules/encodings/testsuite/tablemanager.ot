/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2003-2010 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Krefting
*/

group "encodings.tablemanager";
require ENCODINGS_HAVE_TABLE_DRIVEN;
require initialization;

include "modules/encodings/tablemanager/optablemanager.h";

// -- Tests --------------------------------------------------------------
// Not much that can be tested here, really. The proper test is to use it,
// and that is done in the stand-alone test suite.

test("Testing that g_table_manager exists")
{
	verify(g_table_manager != NULL);
}

test("Verifying that data file has been loaded")
	require success "Testing that g_table_manager exists";
{
	verify(g_table_manager->TablesAvailable());
}

test("OpTableManager::Has()")
	require success "Verifying that data file has been loaded";
{
	// Test for a required table, to make sure it is always there
	// (we need windows-1252 for invalid entity parsing)
	verify(g_table_manager->Has("windows-1252"));
}

test("OpTableManager::Get()")
	require success "OpTableManager::Has()";
{
	long len = 0;
	const void *tmptable = g_table_manager->Get("windows-1252", len);
	verify(tmptable != NULL);
	verify(len > 0);

	g_table_manager->Release(tmptable);
	tmptable = NULL;
}
