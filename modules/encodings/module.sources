decoders/big5-decoder.cpp
decoders/big5hkscs-decoder.cpp
decoders/dbcs-decoder.cpp
decoders/euc-jp-decoder.cpp
decoders/euc-kr-decoder.cpp
decoders/euc-tw-decoder.cpp
decoders/gbk-decoder.cpp
decoders/hz-decoder.cpp
decoders/identityconverter.cpp
decoders/inputconverter.cpp
decoders/iso-2022-cn-decoder.cpp
decoders/iso-2022-jp-decoder.cpp
decoders/iso-8859-1-decoder.cpp
decoders/jis-decoder.cpp
decoders/sbcs-decoder.cpp
decoders/sjis-decoder.cpp
decoders/utf16-decoder.cpp
decoders/utf7-decoder.cpp
decoders/utf8-decoder.cpp
detector/charsetdetector.cpp
encoders/big5hkscs-encoder.cpp
encoders/dbcs-encoder.cpp
encoders/encoder-utility.cpp
encoders/euc-tw-encoder.cpp
encoders/gb18030-encoder.cpp
encoders/hz-encoder.cpp
encoders/iso-2022-cn-encoder.cpp
encoders/iso-8859-1-encoder.cpp
encoders/jis-encoder.cpp
encoders/outputconverter.cpp
encoders/sbcs-encoder.cpp
encoders/utf16-encoder.cpp
encoders/utf7-encoder.cpp
encoders/utf8-encoder.cpp
init/encodings_module.cpp
tablemanager/filetablemanager.cpp
tablemanager/reverse_table_builder.cpp
tablemanager/romtablemanager.cpp
tablemanager/tablemanager.cpp
tablemanager/table_decompressor.cpp
testsuite/charconv/chartest.cpp
# The file testsuite/charconv/utility.cpp needs to include the
# windows.h header file on a WIN32 system and sys/mman.h on a linux
# system. Thus it defines COMPILING_ENCODINGS_CHARCONV_TESTSUITE
# before including core/pch_system_includes.h so the platform's
# system.h is able to prepare for that. So the file needs options
# "system_includes", "no-pch" and is not compiled in encodings'
# jumbo-compile-unit. The option "winnopch" is remains for
# compatibility reasons:
testsuite/charconv/utility.cpp # [winnopch;no-jumbo;no-pch;system_includes]
utility/charsetnames.cpp
utility/createinputconverter.cpp
utility/opstring-encodings.cpp
