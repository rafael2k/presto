TWEAK_ENC_ROM_TABLES						peter

	Enables the table manager implementation that stores the tables
	inside the program binary (suitable for ROM operation), instead
	of the one that stores the tables in an external file.

	Define      : ENCODINGS_HAVE_ROM_TABLES
	Depends on  : FEATURE_TABLEMANAGER
	Enabled for : none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ENC_COMPRESSED_TABLES					peter

	Adds support for compressed data tables in the encoding.bin
	file. This saves a significant (>60%) amount of disk or ROM
	footprint.

	Define      : TABLEMANAGER_COMPRESSED_TABLES
	Depends on  : FEATURE_3P_ZLIB, FEATURE_TABLEMANAGER
	Enabled for : smartphone, tv, mini
	Disabled for: desktop, minimal

TWEAK_ENC_DYNAMIC_REV_TABLES				peter

	Generate the reverse-tables (map from Unicode to other encodings)
	dynamically from the forward tables (from the encoding to Unicode).

	This saves significant (>60%) space in the encoding.bin file,
	but some extra RAM is needed (at most 14Kb) while the tables
	are generated.

	Also, since the forward table is needed to generate the
	reverse-table, it has to be loaded while the reverse table is
	generated, which can also increase the RAM footprint.

	Define      : TABLEMANAGER_DYNAMIC_REV_TABLES
	Depends on  : FEATURE_TABLEMANAGER
	Enabled for : smartphone, minimal, mini
	Disabled for: desktop, tv

TWEAK_ENC_TABLE_FILE_NAME		frodegill

	Defines the filename for the binary encoding tables when stored in an
	external file. The file should be located in the resources folder.

	Category  : setting
	Define    : ENC_TABLE_FILE_NAME
	Value     : UNI_L("encoding.bin")
	Disabled for: desktop, smartphone, tv, minimal, mini
	Depends on: FEATURE_TABLEMANAGER && !TWEAK_ENC_ROM_TABLES

TWEAK_ENC_LRU_SIZE				peter

	Defines the size of the least-recently-used queue for recently
	referenced data tables in the table manager. Four tables are usually
	needed to handle DBCS pages (two tables from legacy to Unicode, two from
	Unicode to legacy), so this is probably the lowest reasonable size.
	Please note that some other tables (notably windows-1252 and uniblocks)
	are also kept in memory constantly, and not affected by this setting.

	The default setting is reasonable for devices with limited memory,
	devices with larger memory should use a larger value to avoid having to
	reload from the disk too often. Historically, a value of 8 has been used
	for big-memory devices.

	Category  : performance, footprint
	Define    : ENCODINGS_LRU_SIZE
	Value     : 4
	Value for desktop:		8
	Value for tv:			8
	Value for mini:			16
	Disabled for: smartphone, minimal
	Depends on: defined(ENCODINGS_HAVE_TABLE_DRIVEN) && (!defined(ENCODINGS_HAVE_ROM_TABLES) || defined(TABLEMANAGER_COMPRESSED_TABLES) || defined(TABLEMANAGER_DYNAMIC_REV_TABLES))

TWEAK_ENC_CHARSET_CACHE_SIZE	peter

	Defines the size of the charset tag (character encoding label) list.
	This list is used by the URL code on core-2 and later to avoid having
	to store the the charset label for each URL as a string.

	The entries are re-used when the cache is full, but to avoid
	unnecessary thrashing and allocation it should allow for a reasonable
	number of cached entries.

	The default setting is reasonable for devices with limited memory,
	devices with larger memory should use a larger value to avoid
	thrashing. Historically, a value of 1000 has been used for big-memory
	devices. The value must be greater than the number of built-in
	entries.

	Category  : performance, footprint
	Define    : ENCODINGS_CHARSET_CACHE_SIZE
	Value     : 200
	Value for desktop:		1000
	Value for tv:			1000
	Disabled for:  smartphone, minimal, mini
	Depends on: nothing

TWEAK_ENC_STORE_CANONICAL_CHARSET	peter

	Decide whether the CharsetManager should store a pointer to the
	canonical representation of each character set tag it records, or if
	that information should be looked up only when requested.

	Saves one pointer per character encoding tag (size is determined by
	TWEAK_ENC_CHARSET_CACHE_SIZE).

	Category    : memory
	Define      : ENC_CSETMAN_STORE_CANONICAL
	Depends on  : nothing
	Enabled for : desktop, smartphone, tv
	Disabled for: minimal, mini

TWEAK_ENC_OPPOSITE_ENDIAN		peter

	Adds support for using a character table file that is intended for the
	opposite endian. Enabling this will decrease performance as data needs
	to be byte-swapped on load, this is intended for shipping combined
	big and small endian builds with only one character table file.

	NB! When you enable this, you can no longer read a table file for the
	machine endian.

	Category  : performance
	Define    : ENCODINGS_OPPOSITE_ENDIAN
	Depends on: FEATURE_TABLEMANAGER
	Enabled for: none
	Disabled for: desktop, smartphone, tv, minimal, mini

TWEAK_ENC_FAST_AUTODETECT		peter

	Determines whether to just look at the initial part of the document
	when trying to detect the character encoding of a document. The more
	data read, the more accurate the detection gets, but also the slower
	it gets.

	Category  : performance
	Define    : ENCODINGS_FAST_AUTODETECTION
	Depends on: nothing
	Enabled for: minimal
	Disabled for: desktop, smartphone, tv, mini

TWEAK_ENC_BYTES_TO_PEEK			peter

	Defines the number of bytes to look at in the document when using the
	fast autodetection for documents. The figure should be sufficiently
	large to give proper results, and sufficiently small to not slow down
	the detection when hitting large pages.

	Category  : performance
	Define    : ENCODINGS_BYTES_TO_PEEK
	Value     : 65536
	Value for minimal:		2048
	Value for mini:			4096
	Disabled for: desktop, smartphone, tv
	Depends on: TWEAK_ENC_FAST_AUTODETECT

TWEAK_ENC_ALLOW_OVERRIDE_MAIL	peter

	Enables forcing the character encoding for WIN_TYPE_MAIL_VIEW windows.
	The M2 e-mail client in Opera uses this kind of windows but does the
	character conversion itself, and thus require that this is turned off.
	Some mobile versions of Opera display e-mail in legacy encodings and
	thus instead requires this to be turned on.

	Category  : setting
	Define    : ALLOW_ENCODING_OVERRIDE_IN_MAIL
	Depends on: nothing
	Enabled for: smartphone, minimal
	Disabled for: desktop, mini, tv

TWEAK_ENC_AGGRESSIVE_REVTABLE_ALLOCATION		peter

	If enabled, the memory allocation will double the size when trying to
	create a new buffer for the reverse table.

	Category  : memory
	Define    : ENC_AGGRESSIVE_REVTABLE_ALLOC
	Depends on: TABLEMANAGER_DYNAMIC_REV_TABLES
	Enabled for: minimal
	Disabled for: desktop, smartphone, tv, mini

TWEAK_ENC_USE_MEM_CONSERVING_DECOMPRESSION	peter

	If enabled, table decompression is done in one go, which uses less
	memory for smaller tables (most eight-bit encodings). If disabled,
	decompression is streaming, which uses less memory for large tables,
	but always uses more CPU.

	Category  : memory
	Define    : ENC_MEM_CONSERVING_DECOMPRESSION
	Depends on: FEATURE_TABLEMANAGER_COMPRESSED
	Enabled for: minimal
	Disabled for: desktop, smartphone, tv, mini

TWEAK_ENC_GENERATE_BIG_HKSCS_TABLE	peter

	If you enable this, the Big5-HKSCS encoder will generate a 147 kilobyte
	conversion table the first time Big5-HKSCS output is generated. This
	table will be kept in memory until the Opera object is destroyed.

	If you disable this, it will instead perform linear scanning through the
	to-Unicode conversion tables, saving memory by sacrificing some speed.
	The speed sacrifice only affects the special HKSCS extended characters,
	however, not the base Big5 characters.

	Enable this if you have a lot of memory to spare.

	Category  : memory
	Define    : ENC_BIG_HKSCS_TABLE
	Depends on: FEATURE_TABLEMANAGER, FEATURE_ENCODINGS_CHINESE
	Enabled for: desktop, tv, mini
	Disabled for: smartphone, minimal
