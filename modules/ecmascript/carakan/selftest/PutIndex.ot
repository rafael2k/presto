/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2011 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
*/

group "ecmascript.carakan.PutIndex";
require init;

include "modules/ecmascript/ecmascript.h";
include "modules/doc/frm_doc.h";

global
{
	class PutIndexTester
		: public EcmaScript_Object
	{
		ES_Value status_value;
		BOOL convert_requested;

	public:
		PutIndexTester()
			: convert_requested(FALSE)
		{
		}

		virtual ES_GetState GetName(const uni_char* property_name, int property_code, ES_Value* value, ES_Runtime* origining_runtime)
		{
			if (uni_str_eq(property_name, "convertSuccessful"))
			{
				convert_requested = FALSE;
				if (value)
					*value = status_value;
				return GET_SUCCESS;
			}

			return GET_FAILED;
		}

		virtual ES_PutState PutIndex(int property_index, ES_Value* value, ES_Runtime* origining_runtime)
		{
			if (property_index == 0)
			{
				if (!convert_requested)
				{
					convert_requested = TRUE;
					return PUT_NEEDS_BOOLEAN;
				}
				status_value.type = VALUE_BOOLEAN;
				status_value.value.boolean = value->type == VALUE_BOOLEAN;
				return PUT_SUCCESS;
			}
			else if (property_index == 1)
			{
				if (!convert_requested)
				{
					convert_requested = TRUE;
					return PUT_NEEDS_NUMBER;
				}
				status_value.type = VALUE_BOOLEAN;
				status_value.value.boolean = value->type == VALUE_NUMBER;
				return PUT_SUCCESS;
			}
			else if (property_index == 2)
			{
				if (!convert_requested)
				{
					convert_requested = TRUE;
					return PUT_NEEDS_STRING;
				}
				status_value.type = VALUE_BOOLEAN;
				status_value.value.boolean = value->type == VALUE_STRING;
				return PUT_SUCCESS;
			}
			else if (property_index == 3)
			{
				if (!convert_requested)
				{
					convert_requested = TRUE;
					return PUT_NEEDS_STRING_WITH_LENGTH;
				}
				status_value.type = VALUE_BOOLEAN;
				status_value.value.boolean = value->type == VALUE_STRING_WITH_LENGTH;
				return PUT_SUCCESS;
			}
			else
				return PUT_FAILED;
		}
	};
}

html
{
	"<html><body><script>document.write('bar');</script></body></html>"
}

test("Setup")
{
	ES_Runtime *runtime = state.doc->GetESRuntime();
	verify(runtime != NULL);

	PutIndexTester *tester = OP_NEW(PutIndexTester, ());

	verify(tester != NULL);
	verify_success(tester->SetObjectRuntime(runtime, runtime->GetObjectPrototype(), "PutIndexTester"));

	ES_Value value;
	value.type = VALUE_OBJECT;
	value.value.object = *tester;

	verify_success(runtime->PutName(runtime->GetGlobalObject(), UNI_L("tester"), value));
}

test("PUT_NEEDS_BOOLEAN")
	language ecmascript;
{
	tester[0] = {valueOf: 1};
	verify(tester.convertSuccessful === true);
}

test("PUT_NEEDS_NUMBER")
	language ecmascript;
{
	tester[1] = "17";
	verify(tester.convertSuccessful === true);
}

test("PUT_NEEDS_STRING")
	language ecmascript;
{
	function f() { return "17"; }
	tester[2] = {valueOf: f};
	verify(tester.convertSuccessful === true);
}

test("PUT_NEEDS_STRING_WITH_LENGTH")
	language ecmascript;
{
	tester[3] = 17;
	verify(tester.convertSuccessful === true);
}
