/* -*- Mode: c++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2009 Opera Software AS.  All rights reserved.
 *
 * This file is part of the Opera web browser.
 * It may not be distributed under any circumstances.
 */


group "database.opstoragemanager";

require init;
require OPSTORAGE_SUPPORT;

language c++;

include "modules/database/opstorage.h";
include "modules/database/opdatabasemanager.h";

global
{
#undef SELFTEST_URLCTXID
#define SELFTEST_URLCTXID 0

	class MyValueChangedListener: public OpStorageEventListener
	{
	public:
		MyValueChangedListener() {}
		virtual BOOL HasListeners() { return TRUE; }
		virtual ~MyValueChangedListener() {}
		virtual OP_STATUS HandleEvent(OpStorageValueChangedEvent *event) { event->Release(); return OpStatus::OK; }
	};
}

setup
{
	DATABASE_MODULE_ADD_CONTEXT(0, OPFILE_PERSISTENT_STORAGE_FOLDER);
}

test("Manager test")
{
	MyValueChangedListener* my_list = NULL;
	OpStorage* ss = NULL;
	OpStorage* ss2 = NULL;
	OpStorageManager *osm = OpStorageManager::CreateForSelfTest();
	verify_not_oom(osm);

	my_list = OP_NEW(MyValueChangedListener,());
	verify_not_oom(my_list);

	verify_success(osm->GetStorage(WEB_STORAGE_SESSION, SELFTEST_URLCTXID, UNI_L("a"), FALSE, &ss));
	verify(ss != NULL);
	verify_success(osm->GetStorage(WEB_STORAGE_SESSION, SELFTEST_URLCTXID, UNI_L("a"), FALSE, &ss2));
	verify(ss == ss2);

	verify_success(osm->AddStorageEventListener(WEB_STORAGE_SESSION, SELFTEST_URLCTXID, UNI_L("a"), FALSE, my_list));

	WebStorageValueTemp k1(UNI_L("a"),1);
	WebStorageValueTemp v1(UNI_L("b"),1);
	verify_success(ss->SetItem(&k1, &v1, NULL));
}
finally
{
	if(ss != NULL)
		ss->Release();
	if(ss2 != NULL)
		ss->Release();
	OP_DELETE(my_list);
	if(osm != NULL)
	{
		OP_ASSERT(osm->GetRefCount() == 1);
		osm->Release();
	}
}
