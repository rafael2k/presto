# Tweaks for the stdlib module

TWEAK_STDLIB_INT_CAST_IS_ES262_COMPLIANT			lth

	Set this to YES if your platform (combination of CPU/FPU, operating
	system, compiler, and libraries) will cast a double to either an INT32
	or an UINT32 in a way that is compatible with the ECMAScript
	specification's sections 9.5 and 9.6.

	Setting this to YES will often improve performance because the
	conversion can be performed by a single instruction in the FPU, and it
	will remove some code from the system (probably less than 1 KB).

	Please verify that your choice passes the selftests for this module.

	May be set to YES for the following platforms:

		Not known

	Must be set to NO for the following platforms:

		x86 with MSVC or gcc, independent of OS
		PPC with CodeWarrior on both MacOS and Dolphin
		ARM under Symbian OS
		ARM under Linux

	Please submit further details to the module owner if you have them.

	Category	: performance, footprint
	Define		: INT_CAST_IS_ES262_COMPLIANT
	Depends on	: nothing


TWEAK_STDLIB_UNSIGNED_TIME_T				mortenro

	This tweak can be applied if your system has an unsigned
	definition of 'time_t'.  The advantage of having an
	unsigned 'time_t' is that dates can be represented as
	far into the future as the year 2106 for a 32-bit system.
	For the normal signed 'time_t', the last representable
	date is early in year 2038.

	The downside of having an unsigned 'time_t' is that a
	negative time difference can't be held in a time_t variable.
	Many programs relies on this behaviour.

	Systems with unsigned 'time_t' are:

               VMS
               Windows CE (Reportedly)
	       ?

	This tweak will currently affect the behaviour of:

	     op_gmtime()

	Please submit further details to the module owner if you have any.

	Category:	workaround
	Define:		STDLIB_UNSIGNED_TIME_T
	Disabled for:	desktop, smartphone, tv, minimal, mini
	Depends on:	nothing


TWEAK_STDLIB_SIXTY_FOUR_BIT_TIME_T			mortenro

	This tweak can be applied if the default is not correct for
	your system (as detected by self tests or asserts).

	Set this tweak to 0 if the size of time_t is 32-bits, and
	set it to 1 if the size of time_t is 64-bits.

	The macro DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T is used to
	establish the default value only, and should not be used
	anywhere in the source code.  This macro will be set
	automatically depending on the word-size of the machine.

	Valid values for STDLIB_SIXTY_FOUR_BIT_TIME_T are 0 and 1.

	Category:		workaround
	Define:			STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value:			DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value for desktop:	DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value for smartphone:	DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value for tv:		DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value for minimal:	DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	Value for mini:	DEFAULT_STDLIB_SIXTY_FOUR_BIT_TIME_T
	depends on:		nothing

