/* -*- Mode: pike; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*-
**
** Copyright (C) 2005-2006 Opera Software ASA.  All rights reserved.
**
** This file is part of the Opera web browser.  It may not be distributed
** under any circumstances.
**
** Peter Karlsson
*/

/* Test the malloc functions of stdlib */

group "stdlib.malloc";
language c++;

global
{
	void *p1, *p2;
}

setup
{
	p1 = p2 = NULL;
}

test("op_free")
{
	op_free(NULL); /* should not crash */
}

test("op_malloc")
{
	verify((p1 = op_malloc(1)));
	verify((p2 = op_malloc(1024)));
}
finally
{
	op_free(p1); p1 = NULL;
	op_free(p2); p2 = NULL;
}

test("op_malloc(0) provisions")
{
	p1 = op_malloc(0);
	verify(p1);
}
finally
{
	op_free(p1);
}

test("op_calloc")
{
	verify((p1 = op_calloc(10, 10)));
	for (int i = 0; i < 10 * 10; ++ i)
		verify(((char *)p1)[i] == 0);

	verify((p2 = op_calloc(1, 100)));
	for (int j = 0; j < 1 * 100; ++ j)
		verify(((char *)p2)[j] == 0);
}
finally
{
	op_free(p1); p1 = NULL;
	op_free(p2); p2 = NULL;
}

test("op_realloc")
{
	verify((p1 = op_malloc(10)));
	static_cast<char *>(p1)[0] = 42;
	static_cast<char *>(p1)[8] = 73;

	verify((p1 = op_realloc(p1, 1024)));
	verify(((char *)p1)[0] == 42);
	verify(((char *)p1)[8] == 73);
}
finally
{
	op_free(p1);
}
